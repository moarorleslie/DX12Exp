#if 0
;
; Note: shader requires additional functionality:
;       UAVs at every shader stage
;       Typed UAV Load Additional Formats
;
; shader hash: b85974e59b257f0a1fb38305d01ed832
;
; Buffer Definitions:
;
; cbuffer HitShaderConstants
; {
;
;   struct HitShaderConstants
;   {
;
;       float3 SunDirection;                          ; Offset:    0
;       float3 SunColor;                              ; Offset:   16
;       float3 AmbientColor;                          ; Offset:   32
;       float4 ShadowTexelSize;                       ; Offset:   48
;       row_major float4x4 ModelToShadow;             ; Offset:   64
;       uint IsReflection;                            ; Offset:  128
;       uint UseShadowRays;                           ; Offset:  132
;   
;   } HitShaderConstants;                             ; Offset:    0 Size:   136
;
; }
;
; cbuffer b1
; {
;
;   struct b1
;   {
;
;       struct struct.DynamicCB
;       {
;
;           row_major float4x4 cameraToWorld;         ; Offset:    0
;           float3 worldCameraPosition;               ; Offset:   64
;           uint padding;                             ; Offset:   76
;           float2 resolution;                        ; Offset:   80
;       
;       } g_dynamic;                                  ; Offset:    0
;
;   
;   } b1;                                             ; Offset:    0 Size:    88
;
; }
;
; cbuffer Material
; {
;
;   struct Material
;   {
;
;       uint MaterialID;                              ; Offset:    0
;   
;   } Material;                                       ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for g_meshInfo
; {
;
;   struct struct.RayTraceMeshInfo
;   {
;
;       uint m_indexOffsetBytes;                      ; Offset:    0
;       uint m_uvAttributeOffsetBytes;                ; Offset:    4
;       uint m_normalAttributeOffsetBytes;            ; Offset:    8
;       uint m_tangentAttributeOffsetBytes;           ; Offset:   12
;       uint m_bitangentAttributeOffsetBytes;         ; Offset:   16
;       uint m_positionAttributeOffsetBytes;          ; Offset:   20
;       uint m_attributeStrideBytes;                  ; Offset:   24
;       uint m_materialInstanceId;                    ; Offset:   28
;   
;   } $Element;                                       ; Offset:    0 Size:    32
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; HitShaderConstants                cbuffer      NA          NA     CB0            cb0     1
; b1                                cbuffer      NA          NA     CB1            cb1     1
; Material                          cbuffer      NA          NA     CB2            cb3     1
; g_s0                              sampler      NA          NA      S0             s0     1
; shadowSampler                     sampler      NA          NA      S1             s1     1
; g_accel                           texture     i32         ras      T0             t0     1
; g_meshInfo                        texture  struct         r/o      T1             t1     1
; g_indices                         texture    byte         r/o      T2             t2     1
; g_attributes                      texture    byte         r/o      T3             t3     1
; texShadow                         texture     f32          2d      T4             t4     1
; texSSAO                           texture     f32          2d      T5             t5     1
; g_localTexture                    texture     f32          2d      T6             t6     1
; g_localNormal                     texture     f32          2d      T7             t7     1
; normals                           texture     f32          2d      T8            t13     1
; g_screenOutput                        UAV     f32          2d      U0             u2     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.RaytracingAccelerationStructure = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%"class.StructuredBuffer<RayTraceMeshInfo>" = type { %struct.RayTraceMeshInfo }
%struct.RayTraceMeshInfo = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ByteAddressBuffer = type { i32 }
%"class.Texture2D<float>" = type { float, %"class.Texture2D<float>::mips_type" }
%"class.Texture2D<float>::mips_type" = type { i32 }
%struct.SamplerState = type { i32 }
%struct.SamplerComparisonState = type { i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%HitShaderConstants = type { <3 x float>, <3 x float>, <3 x float>, <4 x float>, %class.matrix.float.4.4, i32, i32 }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%b1 = type { %struct.DynamicCB }
%struct.DynamicCB = type { %class.matrix.float.4.4, <3 x float>, i32, <2 x float> }
%Material = type { i32 }
%struct.RayPayload = type { i32, float }
%struct.BuiltInTriangleIntersectionAttributes = type { <2 x float> }
%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }

@"\01?g_accel@@3URaytracingAccelerationStructure@@A" = external constant %struct.RaytracingAccelerationStructure, align 4
@"\01?g_screenOutput@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %"class.RWTexture2D<vector<float, 4> >", align 4
@"\01?g_meshInfo@@3V?$StructuredBuffer@URayTraceMeshInfo@@@@A" = external constant %"class.StructuredBuffer<RayTraceMeshInfo>", align 4
@"\01?g_indices@@3UByteAddressBuffer@@A" = external constant %struct.ByteAddressBuffer, align 4
@"\01?g_attributes@@3UByteAddressBuffer@@A" = external constant %struct.ByteAddressBuffer, align 4
@"\01?texShadow@@3V?$Texture2D@M@@A" = external constant %"class.Texture2D<float>", align 4
@"\01?texSSAO@@3V?$Texture2D@M@@A" = external constant %"class.Texture2D<float>", align 4
@"\01?g_s0@@3USamplerState@@A" = external constant %struct.SamplerState, align 4
@"\01?shadowSampler@@3USamplerComparisonState@@A" = external constant %struct.SamplerComparisonState, align 4
@"\01?g_localTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?g_localNormal@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@"\01?normals@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@HitShaderConstants = external constant %HitShaderConstants
@b1 = external constant %b1
@Material = external constant %Material

; Function Attrs: nounwind
define void @"\01?Hit@@YAXURayPayload@@UBuiltInTriangleIntersectionAttributes@@@Z"(%struct.RayPayload* noalias nocapture %payload, %struct.BuiltInTriangleIntersectionAttributes* nocapture readonly %attr) #0 {
  %1 = load %struct.SamplerComparisonState, %struct.SamplerComparisonState* @"\01?shadowSampler@@3USamplerComparisonState@@A", align 4
  %2 = load %struct.SamplerState, %struct.SamplerState* @"\01?g_s0@@3USamplerState@@A", align 4
  %3 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?normals@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %4 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?g_localNormal@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %5 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?g_localTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %6 = load %"class.Texture2D<float>", %"class.Texture2D<float>"* @"\01?texSSAO@@3V?$Texture2D@M@@A", align 4
  %7 = load %"class.Texture2D<float>", %"class.Texture2D<float>"* @"\01?texShadow@@3V?$Texture2D@M@@A", align 4
  %8 = load %struct.ByteAddressBuffer, %struct.ByteAddressBuffer* @"\01?g_attributes@@3UByteAddressBuffer@@A", align 4
  %9 = load %struct.ByteAddressBuffer, %struct.ByteAddressBuffer* @"\01?g_indices@@3UByteAddressBuffer@@A", align 4
  %10 = load %"class.StructuredBuffer<RayTraceMeshInfo>", %"class.StructuredBuffer<RayTraceMeshInfo>"* @"\01?g_meshInfo@@3V?$StructuredBuffer@URayTraceMeshInfo@@@@A", align 4
  %11 = load %struct.RaytracingAccelerationStructure, %struct.RaytracingAccelerationStructure* @"\01?g_accel@@3URaytracingAccelerationStructure@@A", align 4
  %12 = load %"class.RWTexture2D<vector<float, 4> >", %"class.RWTexture2D<vector<float, 4> >"* @"\01?g_screenOutput@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
  %13 = load %Material, %Material* @Material, align 4
  %14 = load %b1, %b1* @b1, align 4
  %15 = load %HitShaderConstants, %HitShaderConstants* @HitShaderConstants, align 4
  %16 = call %dx.types.Handle @dx.op.createHandleForLib.Material(i32 160, %Material %13)  ; CreateHandleForLib(Resource)
  %17 = call %dx.types.Handle @dx.op.createHandleForLib.b1(i32 160, %b1 %14)  ; CreateHandleForLib(Resource)
  %18 = call %dx.types.Handle @dx.op.createHandleForLib.HitShaderConstants(i32 160, %HitShaderConstants %15)  ; CreateHandleForLib(Resource)
  %19 = alloca %struct.RayPayload, align 8
  %20 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %21 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %payload, i32 0, i32 1
  store float %20, float* %21, align 4, !tbaa !60
  %22 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %payload, i32 0, i32 0
  %23 = load i32, i32* %22, align 4, !tbaa !64, !range !66
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %676

; <label>:25                                      ; preds = %0
  %26 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.i32 %26, 0
  %28 = call %dx.types.Handle @"dx.op.createHandleForLib.class.StructuredBuffer<RayTraceMeshInfo>"(i32 160, %"class.StructuredBuffer<RayTraceMeshInfo>" %10)  ; CreateHandleForLib(Resource)
  %29 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %28, i32 %27, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %30 = extractvalue %dx.types.ResRet.i32 %29, 0
  %31 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %28, i32 %27, i32 4, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %32 = extractvalue %dx.types.ResRet.i32 %31, 0
  %33 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %28, i32 %27, i32 8, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %34 = extractvalue %dx.types.ResRet.i32 %33, 0
  %35 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %28, i32 %27, i32 12, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %36 = extractvalue %dx.types.ResRet.i32 %35, 0
  %37 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %28, i32 %27, i32 16, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %38 = extractvalue %dx.types.ResRet.i32 %37, 0
  %39 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %28, i32 %27, i32 20, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %40 = extractvalue %dx.types.ResRet.i32 %39, 0
  %41 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %28, i32 %27, i32 24, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %42 = extractvalue %dx.types.ResRet.i32 %41, 0
  %43 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %44 = mul i32 %43, 6
  %45 = add i32 %44, %30
  %46 = and i32 %45, -4
  %47 = call %dx.types.Handle @dx.op.createHandleForLib.struct.ByteAddressBuffer(i32 160, %struct.ByteAddressBuffer %9)  ; CreateHandleForLib(Resource)
  %48 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %47, i32 %46, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %49 = extractvalue %dx.types.ResRet.i32 %48, 0
  %50 = extractvalue %dx.types.ResRet.i32 %48, 1
  %51 = icmp eq i32 %46, %45
  %52 = and i32 %49, 65535
  %53 = lshr i32 %49, 16
  %54 = lshr i32 %50, 16
  %55 = select i1 %51, i32 %50, i32 %54
  %56 = select i1 %51, i32 %52, i32 %53
  %57 = select i1 %51, i32 %53, i32 %50
  %58 = and i32 %57, 65535
  %59 = and i32 %55, 65535
  %60 = mul i32 %56, %42
  %61 = add i32 %60, %32
  %62 = call %dx.types.Handle @dx.op.createHandleForLib.struct.ByteAddressBuffer(i32 160, %struct.ByteAddressBuffer %8)  ; CreateHandleForLib(Resource)
  %63 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %62, i32 %61, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %64 = extractvalue %dx.types.ResRet.i32 %63, 0
  %65 = extractvalue %dx.types.ResRet.i32 %63, 1
  %66 = bitcast i32 %64 to float
  %67 = bitcast i32 %65 to float
  %68 = mul i32 %58, %42
  %69 = add i32 %68, %32
  %70 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %62, i32 %69, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %71 = extractvalue %dx.types.ResRet.i32 %70, 0
  %72 = extractvalue %dx.types.ResRet.i32 %70, 1
  %73 = bitcast i32 %71 to float
  %74 = bitcast i32 %72 to float
  %75 = mul i32 %59, %42
  %76 = add i32 %75, %32
  %77 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %62, i32 %76, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %78 = extractvalue %dx.types.ResRet.i32 %77, 0
  %79 = extractvalue %dx.types.ResRet.i32 %77, 1
  %80 = bitcast i32 %78 to float
  %81 = bitcast i32 %79 to float
  %82 = getelementptr inbounds %struct.BuiltInTriangleIntersectionAttributes, %struct.BuiltInTriangleIntersectionAttributes* %attr, i32 0, i32 0
  %83 = load <2 x float>, <2 x float>* %82, align 4
  %84 = extractelement <2 x float> %83, i32 0
  %85 = fsub fast float 1.000000e+00, %84
  %86 = extractelement <2 x float> %83, i32 1
  %87 = fsub fast float %85, %86
  %88 = fmul fast float %87, %66
  %89 = fmul fast float %87, %67
  %90 = fmul fast float %84, %73
  %91 = fmul fast float %84, %74
  %92 = fmul fast float %86, %80
  %93 = fmul fast float %86, %81
  %94 = fadd fast float %92, %90
  %95 = fadd fast float %94, %88
  %96 = fadd fast float %93, %91
  %97 = fadd fast float %96, %89
  %98 = add i32 %60, %34
  %99 = call %dx.types.Handle @dx.op.createHandleForLib.struct.ByteAddressBuffer(i32 160, %struct.ByteAddressBuffer %8)  ; CreateHandleForLib(Resource)
  %100 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %99, i32 %98, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %101 = extractvalue %dx.types.ResRet.i32 %100, 0
  %102 = extractvalue %dx.types.ResRet.i32 %100, 1
  %103 = extractvalue %dx.types.ResRet.i32 %100, 2
  %104 = bitcast i32 %101 to float
  %105 = bitcast i32 %102 to float
  %106 = bitcast i32 %103 to float
  %107 = add i32 %68, %34
  %108 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %99, i32 %107, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %109 = extractvalue %dx.types.ResRet.i32 %108, 0
  %110 = extractvalue %dx.types.ResRet.i32 %108, 1
  %111 = extractvalue %dx.types.ResRet.i32 %108, 2
  %112 = bitcast i32 %109 to float
  %113 = bitcast i32 %110 to float
  %114 = bitcast i32 %111 to float
  %115 = add i32 %75, %34
  %116 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %99, i32 %115, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %117 = extractvalue %dx.types.ResRet.i32 %116, 0
  %118 = extractvalue %dx.types.ResRet.i32 %116, 1
  %119 = extractvalue %dx.types.ResRet.i32 %116, 2
  %120 = bitcast i32 %117 to float
  %121 = bitcast i32 %118 to float
  %122 = bitcast i32 %119 to float
  %123 = fmul fast float %104, %87
  %124 = fmul fast float %105, %87
  %125 = fmul fast float %106, %87
  %126 = fmul fast float %112, %84
  %127 = fmul fast float %113, %84
  %128 = fmul fast float %114, %84
  %129 = fadd fast float %126, %123
  %130 = fadd fast float %127, %124
  %131 = fadd fast float %128, %125
  %132 = fmul fast float %120, %86
  %133 = fmul fast float %121, %86
  %134 = fmul fast float %122, %86
  %135 = fadd fast float %129, %132
  %136 = fadd fast float %130, %133
  %137 = fadd fast float %131, %134
  %138 = call float @dx.op.dot3.f32(i32 55, float %135, float %136, float %137, float %135, float %136, float %137)  ; Dot3(ax,ay,az,bx,by,bz)
  %139 = call float @dx.op.unary.f32(i32 25, float %138)  ; Rsqrt(value)
  %140 = fmul fast float %135, %139
  %141 = fmul fast float %136, %139
  %142 = fmul fast float %137, %139
  %143 = add i32 %60, %36
  %144 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %99, i32 %143, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %145 = extractvalue %dx.types.ResRet.i32 %144, 0
  %146 = extractvalue %dx.types.ResRet.i32 %144, 1
  %147 = extractvalue %dx.types.ResRet.i32 %144, 2
  %148 = bitcast i32 %145 to float
  %149 = bitcast i32 %146 to float
  %150 = bitcast i32 %147 to float
  %151 = add i32 %68, %36
  %152 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %99, i32 %151, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %153 = extractvalue %dx.types.ResRet.i32 %152, 0
  %154 = extractvalue %dx.types.ResRet.i32 %152, 1
  %155 = extractvalue %dx.types.ResRet.i32 %152, 2
  %156 = bitcast i32 %153 to float
  %157 = bitcast i32 %154 to float
  %158 = bitcast i32 %155 to float
  %159 = add i32 %75, %36
  %160 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %99, i32 %159, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %161 = extractvalue %dx.types.ResRet.i32 %160, 0
  %162 = extractvalue %dx.types.ResRet.i32 %160, 1
  %163 = extractvalue %dx.types.ResRet.i32 %160, 2
  %164 = bitcast i32 %161 to float
  %165 = bitcast i32 %162 to float
  %166 = bitcast i32 %163 to float
  %167 = fmul fast float %148, %87
  %168 = fmul fast float %149, %87
  %169 = fmul fast float %150, %87
  %170 = fmul fast float %156, %84
  %171 = fmul fast float %157, %84
  %172 = fmul fast float %158, %84
  %173 = fadd fast float %170, %167
  %174 = fadd fast float %171, %168
  %175 = fadd fast float %172, %169
  %176 = fmul fast float %164, %86
  %177 = fmul fast float %165, %86
  %178 = fmul fast float %166, %86
  %179 = fadd fast float %173, %176
  %180 = fadd fast float %174, %177
  %181 = fadd fast float %175, %178
  %182 = call float @dx.op.dot3.f32(i32 55, float %179, float %180, float %181, float %179, float %180, float %181)  ; Dot3(ax,ay,az,bx,by,bz)
  %183 = call float @dx.op.unary.f32(i32 25, float %182)  ; Rsqrt(value)
  %184 = fmul fast float %179, %183
  %185 = fmul fast float %180, %183
  %186 = fmul fast float %181, %183
  %187 = add i32 %60, %38
  %188 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %99, i32 %187, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %189 = extractvalue %dx.types.ResRet.i32 %188, 0
  %190 = extractvalue %dx.types.ResRet.i32 %188, 1
  %191 = extractvalue %dx.types.ResRet.i32 %188, 2
  %192 = bitcast i32 %189 to float
  %193 = bitcast i32 %190 to float
  %194 = bitcast i32 %191 to float
  %195 = add i32 %68, %38
  %196 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %99, i32 %195, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %197 = extractvalue %dx.types.ResRet.i32 %196, 0
  %198 = extractvalue %dx.types.ResRet.i32 %196, 1
  %199 = extractvalue %dx.types.ResRet.i32 %196, 2
  %200 = bitcast i32 %197 to float
  %201 = bitcast i32 %198 to float
  %202 = bitcast i32 %199 to float
  %203 = add i32 %75, %38
  %204 = call %dx.types.Handle @dx.op.createHandleForLib.struct.ByteAddressBuffer(i32 160, %struct.ByteAddressBuffer %8)  ; CreateHandleForLib(Resource)
  %205 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %204, i32 %203, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %206 = extractvalue %dx.types.ResRet.i32 %205, 0
  %207 = extractvalue %dx.types.ResRet.i32 %205, 1
  %208 = extractvalue %dx.types.ResRet.i32 %205, 2
  %209 = bitcast i32 %206 to float
  %210 = bitcast i32 %207 to float
  %211 = bitcast i32 %208 to float
  %212 = fmul fast float %192, %87
  %213 = fmul fast float %193, %87
  %214 = fmul fast float %194, %87
  %215 = fmul fast float %200, %84
  %216 = fmul fast float %201, %84
  %217 = fmul fast float %202, %84
  %218 = fadd fast float %215, %212
  %219 = fadd fast float %216, %213
  %220 = fadd fast float %217, %214
  %221 = fmul fast float %209, %86
  %222 = fmul fast float %210, %86
  %223 = fmul fast float %211, %86
  %224 = fadd fast float %218, %221
  %225 = fadd fast float %219, %222
  %226 = fadd fast float %220, %223
  %227 = call float @dx.op.dot3.f32(i32 55, float %224, float %225, float %226, float %224, float %225, float %226)  ; Dot3(ax,ay,az,bx,by,bz)
  %228 = call float @dx.op.unary.f32(i32 25, float %227)  ; Rsqrt(value)
  %229 = fmul fast float %224, %228
  %230 = fmul fast float %225, %228
  %231 = fmul fast float %226, %228
  %232 = add i32 %60, %40
  %233 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %204, i32 %232, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %234 = extractvalue %dx.types.ResRet.i32 %233, 0
  %235 = extractvalue %dx.types.ResRet.i32 %233, 1
  %236 = extractvalue %dx.types.ResRet.i32 %233, 2
  %237 = bitcast i32 %234 to float
  %238 = bitcast i32 %235 to float
  %239 = bitcast i32 %236 to float
  %240 = add i32 %68, %40
  %241 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %204, i32 %240, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %242 = extractvalue %dx.types.ResRet.i32 %241, 0
  %243 = extractvalue %dx.types.ResRet.i32 %241, 1
  %244 = extractvalue %dx.types.ResRet.i32 %241, 2
  %245 = bitcast i32 %242 to float
  %246 = bitcast i32 %243 to float
  %247 = bitcast i32 %244 to float
  %248 = add i32 %75, %40
  %249 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %204, i32 %248, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %250 = extractvalue %dx.types.ResRet.i32 %249, 0
  %251 = extractvalue %dx.types.ResRet.i32 %249, 1
  %252 = extractvalue %dx.types.ResRet.i32 %249, 2
  %253 = bitcast i32 %250 to float
  %254 = bitcast i32 %251 to float
  %255 = bitcast i32 %252 to float
  %256 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 0)  ; WorldRayOrigin(col)
  %257 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 1)  ; WorldRayOrigin(col)
  %258 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 2)  ; WorldRayOrigin(col)
  %259 = call float @dx.op.worldRayDirection.f32(i32 148, i8 0)  ; WorldRayDirection(col)
  %260 = call float @dx.op.worldRayDirection.f32(i32 148, i8 1)  ; WorldRayDirection(col)
  %261 = call float @dx.op.worldRayDirection.f32(i32 148, i8 2)  ; WorldRayDirection(col)
  %262 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %263 = fmul fast float %262, %259
  %264 = fmul fast float %262, %260
  %265 = fmul fast float %262, %261
  %266 = fadd fast float %263, %256
  %267 = fadd fast float %264, %257
  %268 = fadd fast float %265, %258
  %269 = fsub fast float %245, %237
  %270 = fsub fast float %246, %238
  %271 = fsub fast float %247, %239
  %272 = fsub fast float %253, %237
  %273 = fsub fast float %254, %238
  %274 = fsub fast float %255, %239
  %275 = fmul fast float %273, %271
  %276 = fmul fast float %274, %270
  %277 = fsub fast float %275, %276
  %278 = fmul fast float %274, %269
  %279 = fmul fast float %272, %271
  %280 = fsub fast float %278, %279
  %281 = fmul fast float %272, %270
  %282 = fmul fast float %273, %269
  %283 = fsub fast float %281, %282
  %284 = call float @dx.op.dot3.f32(i32 55, float %277, float %280, float %283, float %277, float %280, float %283)  ; Dot3(ax,ay,az,bx,by,bz)
  %285 = call float @dx.op.unary.f32(i32 25, float %284)  ; Rsqrt(value)
  %286 = fmul fast float %285, %277
  %287 = fmul fast float %285, %280
  %288 = fmul fast float %285, %283
  %289 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %290 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %291 = add i32 %289, 1
  %292 = uitofp i32 %291 to float
  %293 = uitofp i32 %290 to float
  %294 = fadd fast float %292, 5.000000e-01
  %295 = fadd fast float %293, 5.000000e-01
  %296 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %297 = extractvalue %dx.types.CBufRet.f32 %296, 0
  %298 = extractvalue %dx.types.CBufRet.f32 %296, 1
  %299 = fdiv fast float %294, %297
  %300 = fdiv fast float %295, %298
  %301 = fmul fast float %299, 2.000000e+00
  %302 = fmul fast float %300, 2.000000e+00
  %303 = fadd fast float %301, -1.000000e+00
  %304 = fadd fast float %302, -1.000000e+00
  %305 = fsub fast float -0.000000e+00, %304
  %306 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %307 = extractvalue %dx.types.CBufRet.f32 %306, 0
  %308 = extractvalue %dx.types.CBufRet.f32 %306, 1
  %309 = extractvalue %dx.types.CBufRet.f32 %306, 3
  %310 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %311 = extractvalue %dx.types.CBufRet.f32 %310, 0
  %312 = extractvalue %dx.types.CBufRet.f32 %310, 1
  %313 = extractvalue %dx.types.CBufRet.f32 %310, 3
  %314 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %315 = extractvalue %dx.types.CBufRet.f32 %314, 0
  %316 = extractvalue %dx.types.CBufRet.f32 %314, 1
  %317 = extractvalue %dx.types.CBufRet.f32 %314, 3
  %318 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %319 = extractvalue %dx.types.CBufRet.f32 %318, 0
  %320 = extractvalue %dx.types.CBufRet.f32 %318, 1
  %321 = extractvalue %dx.types.CBufRet.f32 %318, 3
  %322 = fmul fast float %307, %303
  %323 = call float @dx.op.tertiary.f32(i32 46, float %308, float %305, float %322)  ; FMad(a,b,c)
  %324 = fadd fast float %323, %309
  %325 = fmul fast float %311, %303
  %326 = call float @dx.op.tertiary.f32(i32 46, float %312, float %305, float %325)  ; FMad(a,b,c)
  %327 = fadd fast float %326, %313
  %328 = fmul fast float %315, %303
  %329 = call float @dx.op.tertiary.f32(i32 46, float %316, float %305, float %328)  ; FMad(a,b,c)
  %330 = fadd fast float %329, %317
  %331 = fmul fast float %319, %303
  %332 = call float @dx.op.tertiary.f32(i32 46, float %320, float %305, float %331)  ; FMad(a,b,c)
  %333 = fadd fast float %332, %321
  %334 = fdiv fast float %324, %333
  %335 = fdiv fast float %327, %333
  %336 = fdiv fast float %330, %333
  %337 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %338 = extractvalue %dx.types.CBufRet.f32 %337, 0
  %339 = extractvalue %dx.types.CBufRet.f32 %337, 1
  %340 = extractvalue %dx.types.CBufRet.f32 %337, 2
  %341 = fsub fast float %334, %338
  %342 = fsub fast float %335, %339
  %343 = fsub fast float %336, %340
  %344 = call float @dx.op.dot3.f32(i32 55, float %341, float %342, float %343, float %341, float %342, float %343)  ; Dot3(ax,ay,az,bx,by,bz)
  %345 = call float @dx.op.unary.f32(i32 25, float %344)  ; Rsqrt(value)
  %346 = fmul fast float %341, %345
  %347 = fmul fast float %342, %345
  %348 = fmul fast float %343, %345
  %349 = add i32 %290, 1
  %350 = uitofp i32 %289 to float
  %351 = uitofp i32 %349 to float
  %352 = fadd fast float %350, 5.000000e-01
  %353 = fadd fast float %351, 5.000000e-01
  %354 = fdiv fast float %352, %297
  %355 = fdiv fast float %353, %298
  %356 = fmul fast float %354, 2.000000e+00
  %357 = fmul fast float %355, 2.000000e+00
  %358 = fadd fast float %356, -1.000000e+00
  %359 = fadd fast float %357, -1.000000e+00
  %360 = fsub fast float -0.000000e+00, %359
  %361 = fmul fast float %307, %358
  %362 = call float @dx.op.tertiary.f32(i32 46, float %308, float %360, float %361)  ; FMad(a,b,c)
  %363 = fadd fast float %362, %309
  %364 = fmul fast float %311, %358
  %365 = call float @dx.op.tertiary.f32(i32 46, float %312, float %360, float %364)  ; FMad(a,b,c)
  %366 = fadd fast float %365, %313
  %367 = fmul fast float %315, %358
  %368 = call float @dx.op.tertiary.f32(i32 46, float %316, float %360, float %367)  ; FMad(a,b,c)
  %369 = fadd fast float %368, %317
  %370 = fmul fast float %319, %358
  %371 = call float @dx.op.tertiary.f32(i32 46, float %320, float %360, float %370)  ; FMad(a,b,c)
  %372 = fadd fast float %371, %321
  %373 = fdiv fast float %363, %372
  %374 = fdiv fast float %366, %372
  %375 = fdiv fast float %369, %372
  %376 = fsub fast float %373, %338
  %377 = fsub fast float %374, %339
  %378 = fsub fast float %375, %340
  %379 = call float @dx.op.dot3.f32(i32 55, float %376, float %377, float %378, float %376, float %377, float %378)  ; Dot3(ax,ay,az,bx,by,bz)
  %380 = call float @dx.op.unary.f32(i32 25, float %379)  ; Rsqrt(value)
  %381 = fmul fast float %376, %380
  %382 = fmul fast float %377, %380
  %383 = fmul fast float %378, %380
  %384 = fsub fast float %338, %266
  %385 = fsub fast float %339, %267
  %386 = fsub fast float %340, %268
  %387 = fsub fast float -0.000000e+00, %286
  %388 = fsub fast float -0.000000e+00, %287
  %389 = fsub fast float -0.000000e+00, %288
  %390 = call float @dx.op.dot3.f32(i32 55, float %387, float %388, float %389, float %384, float %385, float %386)  ; Dot3(ax,ay,az,bx,by,bz)
  %391 = call float @dx.op.dot3.f32(i32 55, float %286, float %287, float %288, float %346, float %347, float %348)  ; Dot3(ax,ay,az,bx,by,bz)
  %392 = fdiv fast float %390, %391
  %393 = fmul fast float %392, %346
  %394 = fmul fast float %392, %347
  %395 = fmul fast float %392, %348
  %396 = call float @dx.op.dot3.f32(i32 55, float %286, float %287, float %288, float %381, float %382, float %383)  ; Dot3(ax,ay,az,bx,by,bz)
  %397 = fdiv fast float %390, %396
  %398 = fmul fast float %397, %381
  %399 = fmul fast float %397, %382
  %400 = fmul fast float %397, %383
  %401 = fsub fast float %338, %237
  %402 = fadd fast float %401, %393
  %403 = fsub fast float %339, %238
  %404 = fadd fast float %403, %394
  %405 = fsub fast float %340, %239
  %406 = fadd fast float %405, %395
  %407 = call float @dx.op.dot3.f32(i32 55, float %269, float %270, float %271, float %269, float %270, float %271)  ; Dot3(ax,ay,az,bx,by,bz)
  %408 = call float @dx.op.dot3.f32(i32 55, float %269, float %270, float %271, float %272, float %273, float %274)  ; Dot3(ax,ay,az,bx,by,bz)
  %409 = call float @dx.op.dot3.f32(i32 55, float %272, float %273, float %274, float %272, float %273, float %274)  ; Dot3(ax,ay,az,bx,by,bz)
  %410 = call float @dx.op.dot3.f32(i32 55, float %402, float %404, float %406, float %269, float %270, float %271)  ; Dot3(ax,ay,az,bx,by,bz)
  %411 = call float @dx.op.dot3.f32(i32 55, float %402, float %404, float %406, float %272, float %273, float %274)  ; Dot3(ax,ay,az,bx,by,bz)
  %412 = fmul fast float %409, %407
  %413 = fmul fast float %408, %408
  %414 = fsub fast float %412, %413
  %415 = fdiv fast float 1.000000e+00, %414
  %416 = fmul fast float %410, %409
  %417 = fmul fast float %411, %408
  %418 = fsub fast float %416, %417
  %419 = fmul fast float %418, %415
  %420 = fmul fast float %411, %407
  %421 = fmul fast float %410, %408
  %422 = fsub fast float %420, %421
  %423 = fmul fast float %422, %415
  %424 = fsub fast float 1.000000e+00, %419
  %425 = fsub fast float %424, %423
  %426 = fadd fast float %401, %398
  %427 = fadd fast float %403, %399
  %428 = fadd fast float %405, %400
  %429 = call float @dx.op.dot3.f32(i32 55, float %426, float %427, float %428, float %269, float %270, float %271)  ; Dot3(ax,ay,az,bx,by,bz)
  %430 = call float @dx.op.dot3.f32(i32 55, float %426, float %427, float %428, float %272, float %273, float %274)  ; Dot3(ax,ay,az,bx,by,bz)
  %431 = fmul fast float %429, %409
  %432 = fmul fast float %430, %408
  %433 = fsub fast float %431, %432
  %434 = fmul fast float %433, %415
  %435 = fmul fast float %430, %407
  %436 = fmul fast float %429, %408
  %437 = fsub fast float %435, %436
  %438 = fmul fast float %437, %415
  %439 = fsub fast float 1.000000e+00, %434
  %440 = fsub fast float %439, %438
  %441 = fmul fast float %425, %66
  %442 = call float @dx.op.tertiary.f32(i32 46, float %419, float %73, float %441)  ; FMad(a,b,c)
  %443 = call float @dx.op.tertiary.f32(i32 46, float %423, float %80, float %442)  ; FMad(a,b,c)
  %444 = fmul fast float %425, %67
  %445 = call float @dx.op.tertiary.f32(i32 46, float %419, float %74, float %444)  ; FMad(a,b,c)
  %446 = call float @dx.op.tertiary.f32(i32 46, float %423, float %81, float %445)  ; FMad(a,b,c)
  %447 = fsub fast float %443, %95
  %448 = fsub fast float %446, %97
  %449 = fmul fast float %440, %66
  %450 = call float @dx.op.tertiary.f32(i32 46, float %434, float %73, float %449)  ; FMad(a,b,c)
  %451 = call float @dx.op.tertiary.f32(i32 46, float %438, float %80, float %450)  ; FMad(a,b,c)
  %452 = fmul fast float %440, %67
  %453 = call float @dx.op.tertiary.f32(i32 46, float %434, float %74, float %452)  ; FMad(a,b,c)
  %454 = call float @dx.op.tertiary.f32(i32 46, float %438, float %81, float %453)  ; FMad(a,b,c)
  %455 = fsub fast float %451, %95
  %456 = fsub fast float %454, %97
  %457 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %5)  ; CreateHandleForLib(Resource)
  %458 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32 160, %struct.SamplerState %2)  ; CreateHandleForLib(Resource)
  %459 = call %dx.types.ResRet.f32 @dx.op.sampleGrad.f32(i32 63, %dx.types.Handle %457, %dx.types.Handle %458, float %95, float %97, float undef, float undef, i32 0, i32 0, i32 undef, float %447, float %448, float undef, float %455, float %456, float undef, float undef)  ; SampleGrad(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,ddx0,ddx1,ddx2,ddy0,ddy1,ddy2,clamp)
  %460 = extractvalue %dx.types.ResRet.f32 %459, 0
  %461 = extractvalue %dx.types.ResRet.f32 %459, 1
  %462 = extractvalue %dx.types.ResRet.f32 %459, 2
  %463 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %4)  ; CreateHandleForLib(Resource)
  %464 = call %dx.types.ResRet.f32 @dx.op.sampleGrad.f32(i32 63, %dx.types.Handle %463, %dx.types.Handle %458, float %95, float %97, float undef, float undef, i32 0, i32 0, i32 undef, float %447, float %448, float undef, float %455, float %456, float undef, float undef)  ; SampleGrad(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,ddx0,ddx1,ddx2,ddy0,ddy1,ddy2,clamp)
  %465 = extractvalue %dx.types.ResRet.f32 %464, 0
  %466 = extractvalue %dx.types.ResRet.f32 %464, 1
  %467 = extractvalue %dx.types.ResRet.f32 %464, 2
  %468 = fmul fast float %465, 2.000000e+00
  %469 = fmul fast float %466, 2.000000e+00
  %470 = fmul fast float %467, 2.000000e+00
  %471 = fadd fast float %468, -1.000000e+00
  %472 = fadd fast float %469, -1.000000e+00
  %473 = fadd fast float %470, -1.000000e+00
  %474 = call float @dx.op.dot3.f32(i32 55, float %471, float %472, float %473, float %471, float %472, float %473)  ; Dot3(ax,ay,az,bx,by,bz)
  %475 = call float @dx.op.unary.f32(i32 25, float %474)  ; Rsqrt(value)
  %476 = fmul fast float %471, %475
  %477 = fmul fast float %472, %475
  %478 = fmul fast float %473, %475
  %479 = fmul fast float %184, %476
  %480 = call float @dx.op.tertiary.f32(i32 46, float %477, float %229, float %479)  ; FMad(a,b,c)
  %481 = call float @dx.op.tertiary.f32(i32 46, float %478, float %140, float %480)  ; FMad(a,b,c)
  %482 = fmul fast float %185, %476
  %483 = call float @dx.op.tertiary.f32(i32 46, float %477, float %230, float %482)  ; FMad(a,b,c)
  %484 = call float @dx.op.tertiary.f32(i32 46, float %478, float %141, float %483)  ; FMad(a,b,c)
  %485 = fmul fast float %186, %476
  %486 = call float @dx.op.tertiary.f32(i32 46, float %477, float %231, float %485)  ; FMad(a,b,c)
  %487 = call float @dx.op.tertiary.f32(i32 46, float %478, float %142, float %486)  ; FMad(a,b,c)
  %488 = call float @dx.op.dot3.f32(i32 55, float %481, float %484, float %487, float %481, float %484, float %487)  ; Dot3(ax,ay,az,bx,by,bz)
  %489 = call float @dx.op.unary.f32(i32 25, float %488)  ; Rsqrt(value)
  %490 = fmul fast float %489, %481
  %491 = fmul fast float %489, %484
  %492 = fmul fast float %489, %487
  %493 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %494 = extractvalue %dx.types.CBufRet.f32 %493, 0
  %495 = extractvalue %dx.types.CBufRet.f32 %493, 1
  %496 = extractvalue %dx.types.CBufRet.f32 %493, 2
  %497 = fmul fast float %494, %460
  %498 = fmul fast float %495, %461
  %499 = fmul fast float %496, %462
  %500 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<float>"(i32 160, %"class.Texture2D<float>" %6)  ; CreateHandleForLib(Resource)
  %501 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %500, i32 0, i32 %289, i32 %290, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %502 = extractvalue %dx.types.ResRet.f32 %501, 0
  %503 = fmul fast float %497, %502
  %504 = fmul fast float %498, %502
  %505 = fmul fast float %499, %502
  %506 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %507 = extractvalue %dx.types.CBufRet.i32 %506, 1
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %520, label %509

; <label>:509                                     ; preds = %25
  %510 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %511 = extractvalue %dx.types.CBufRet.f32 %510, 0
  %512 = extractvalue %dx.types.CBufRet.f32 %510, 1
  %513 = extractvalue %dx.types.CBufRet.f32 %510, 2
  %514 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %19, i32 0, i32 0
  store i32 1, i32* %514, align 8
  %515 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %19, i32 0, i32 1
  store float 0x47EFFFFFE0000000, float* %515, align 4
  %516 = call %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32 160, %struct.RaytracingAccelerationStructure %11)  ; CreateHandleForLib(Resource)
  call void @dx.op.traceRay.struct.RayPayload(i32 157, %dx.types.Handle %516, i32 4, i32 -1, i32 0, i32 1, i32 0, float %266, float %267, float %268, float 0x3FB99999A0000000, float %511, float %512, float %513, float 0x47EFFFFFE0000000, %struct.RayPayload* nonnull %19)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  %517 = load float, float* %515, align 4
  %518 = fcmp fast olt float %517, 0x47EFFFFFE0000000
  br i1 %518, label %519, label %601

; <label>:519                                     ; preds = %509
  br label %601

; <label>:520                                     ; preds = %25
  %521 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %522 = extractvalue %dx.types.CBufRet.f32 %521, 0
  %523 = extractvalue %dx.types.CBufRet.f32 %521, 1
  %524 = extractvalue %dx.types.CBufRet.f32 %521, 2
  %525 = extractvalue %dx.types.CBufRet.f32 %521, 3
  %526 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %527 = extractvalue %dx.types.CBufRet.f32 %526, 0
  %528 = extractvalue %dx.types.CBufRet.f32 %526, 1
  %529 = extractvalue %dx.types.CBufRet.f32 %526, 2
  %530 = extractvalue %dx.types.CBufRet.f32 %526, 3
  %531 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %532 = extractvalue %dx.types.CBufRet.f32 %531, 0
  %533 = extractvalue %dx.types.CBufRet.f32 %531, 1
  %534 = extractvalue %dx.types.CBufRet.f32 %531, 2
  %535 = extractvalue %dx.types.CBufRet.f32 %531, 3
  %536 = fmul fast float %522, %266
  %537 = call float @dx.op.tertiary.f32(i32 46, float %523, float %267, float %536)  ; FMad(a,b,c)
  %538 = call float @dx.op.tertiary.f32(i32 46, float %524, float %268, float %537)  ; FMad(a,b,c)
  %539 = fadd fast float %538, %525
  %540 = fmul fast float %527, %266
  %541 = call float @dx.op.tertiary.f32(i32 46, float %528, float %267, float %540)  ; FMad(a,b,c)
  %542 = call float @dx.op.tertiary.f32(i32 46, float %529, float %268, float %541)  ; FMad(a,b,c)
  %543 = fadd fast float %542, %530
  %544 = fmul fast float %532, %266
  %545 = call float @dx.op.tertiary.f32(i32 46, float %533, float %267, float %544)  ; FMad(a,b,c)
  %546 = call float @dx.op.tertiary.f32(i32 46, float %534, float %268, float %545)  ; FMad(a,b,c)
  %547 = fadd fast float %546, %535
  %548 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %549 = extractvalue %dx.types.CBufRet.f32 %548, 0
  %550 = fmul fast float %549, 2.500000e-01
  %551 = fmul fast float %549, 1.750000e+00
  %552 = fmul fast float %549, 1.250000e+00
  %553 = fmul fast float %549, 7.500000e-01
  %554 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<float>"(i32 160, %"class.Texture2D<float>" %7)  ; CreateHandleForLib(Resource)
  %555 = call %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerComparisonState(i32 160, %struct.SamplerComparisonState %1)  ; CreateHandleForLib(Resource)
  %556 = call %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32 65, %dx.types.Handle %554, %dx.types.Handle %555, float %539, float %543, float undef, float undef, i32 0, i32 0, i32 undef, float %547)  ; SampleCmpLevelZero(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,compareValue)
  %557 = extractvalue %dx.types.ResRet.f32 %556, 0
  %558 = fmul fast float %557, 2.000000e+00
  %559 = fsub fast float %539, %551
  %560 = fadd fast float %550, %543
  %561 = call %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32 65, %dx.types.Handle %554, %dx.types.Handle %555, float %559, float %560, float undef, float undef, i32 0, i32 0, i32 undef, float %547)  ; SampleCmpLevelZero(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,compareValue)
  %562 = extractvalue %dx.types.ResRet.f32 %561, 0
  %563 = fadd fast float %562, %558
  %564 = fsub fast float %539, %550
  %565 = fsub fast float %543, %551
  %566 = call %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32 65, %dx.types.Handle %554, %dx.types.Handle %555, float %564, float %565, float undef, float undef, i32 0, i32 0, i32 undef, float %547)  ; SampleCmpLevelZero(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,compareValue)
  %567 = extractvalue %dx.types.ResRet.f32 %566, 0
  %568 = fadd fast float %563, %567
  %569 = fadd fast float %551, %539
  %570 = fsub fast float %543, %550
  %571 = call %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32 65, %dx.types.Handle %554, %dx.types.Handle %555, float %569, float %570, float undef, float undef, i32 0, i32 0, i32 undef, float %547)  ; SampleCmpLevelZero(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,compareValue)
  %572 = extractvalue %dx.types.ResRet.f32 %571, 0
  %573 = fadd fast float %568, %572
  %574 = fadd fast float %550, %539
  %575 = fadd fast float %551, %543
  %576 = call %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32 65, %dx.types.Handle %554, %dx.types.Handle %555, float %574, float %575, float undef, float undef, i32 0, i32 0, i32 undef, float %547)  ; SampleCmpLevelZero(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,compareValue)
  %577 = extractvalue %dx.types.ResRet.f32 %576, 0
  %578 = fadd fast float %573, %577
  %579 = fsub fast float %539, %553
  %580 = fadd fast float %552, %543
  %581 = call %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32 65, %dx.types.Handle %554, %dx.types.Handle %555, float %579, float %580, float undef, float undef, i32 0, i32 0, i32 undef, float %547)  ; SampleCmpLevelZero(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,compareValue)
  %582 = extractvalue %dx.types.ResRet.f32 %581, 0
  %583 = fadd fast float %578, %582
  %584 = fsub fast float %539, %552
  %585 = fsub fast float %543, %553
  %586 = call %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32 65, %dx.types.Handle %554, %dx.types.Handle %555, float %584, float %585, float undef, float undef, i32 0, i32 0, i32 undef, float %547)  ; SampleCmpLevelZero(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,compareValue)
  %587 = extractvalue %dx.types.ResRet.f32 %586, 0
  %588 = fadd fast float %583, %587
  %589 = fadd fast float %553, %539
  %590 = fsub fast float %543, %552
  %591 = call %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32 65, %dx.types.Handle %554, %dx.types.Handle %555, float %589, float %590, float undef, float undef, i32 0, i32 0, i32 undef, float %547)  ; SampleCmpLevelZero(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,compareValue)
  %592 = extractvalue %dx.types.ResRet.f32 %591, 0
  %593 = fadd fast float %588, %592
  %594 = fadd fast float %552, %539
  %595 = fadd fast float %553, %543
  %596 = call %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32 65, %dx.types.Handle %554, %dx.types.Handle %555, float %594, float %595, float undef, float undef, i32 0, i32 0, i32 undef, float %547)  ; SampleCmpLevelZero(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,compareValue)
  %597 = extractvalue %dx.types.ResRet.f32 %596, 0
  %598 = fadd fast float %593, %597
  %599 = fmul fast float %598, 0x3FB99999A0000000
  %600 = fmul fast float %599, %599
  br label %601

; <label>:601                                     ; preds = %520, %519, %509
  %602 = phi float [ 0.000000e+00, %519 ], [ 1.000000e+00, %509 ], [ %600, %520 ]
  %603 = fsub fast float -0.000000e+00, %259
  %604 = fsub fast float -0.000000e+00, %260
  %605 = fsub fast float -0.000000e+00, %261
  %606 = call float @dx.op.dot3.f32(i32 55, float %603, float %604, float %605, float %603, float %604, float %605)  ; Dot3(ax,ay,az,bx,by,bz)
  %607 = call float @dx.op.unary.f32(i32 25, float %606)  ; Rsqrt(value)
  %608 = fmul fast float %607, %603
  %609 = fmul fast float %607, %604
  %610 = fmul fast float %607, %605
  %611 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %612 = extractvalue %dx.types.CBufRet.f32 %611, 0
  %613 = extractvalue %dx.types.CBufRet.f32 %611, 1
  %614 = extractvalue %dx.types.CBufRet.f32 %611, 2
  %615 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %616 = extractvalue %dx.types.CBufRet.f32 %615, 0
  %617 = extractvalue %dx.types.CBufRet.f32 %615, 1
  %618 = extractvalue %dx.types.CBufRet.f32 %615, 2
  %619 = fsub fast float %616, %608
  %620 = fsub fast float %617, %609
  %621 = fsub fast float %618, %610
  %622 = call float @dx.op.dot3.f32(i32 55, float %619, float %620, float %621, float %619, float %620, float %621)  ; Dot3(ax,ay,az,bx,by,bz)
  %623 = call float @dx.op.unary.f32(i32 25, float %622)  ; Rsqrt(value)
  %624 = fmul fast float %619, %623
  %625 = fmul fast float %620, %623
  %626 = fmul fast float %621, %623
  %627 = call float @dx.op.dot3.f32(i32 55, float %616, float %617, float %618, float %624, float %625, float %626)  ; Dot3(ax,ay,az,bx,by,bz)
  %628 = call float @dx.op.unary.f32(i32 7, float %627)  ; Saturate(value)
  %629 = fsub fast float 1.000000e+00, %628
  %630 = call float @dx.op.unary.f32(i32 23, float %629)  ; Log(value)
  %631 = fmul fast float %630, 5.000000e+00
  %632 = call float @dx.op.unary.f32(i32 21, float %631)  ; Exp(value)
  %633 = fmul fast float %632, %460
  %634 = fmul fast float %632, %461
  %635 = fmul fast float %632, %462
  %636 = fsub fast float %460, %633
  %637 = fsub fast float %461, %634
  %638 = fsub fast float %462, %635
  %639 = call float @dx.op.dot3.f32(i32 55, float %490, float %491, float %492, float %616, float %617, float %618)  ; Dot3(ax,ay,az,bx,by,bz)
  %640 = call float @dx.op.unary.f32(i32 7, float %639)  ; Saturate(value)
  %641 = fmul fast float %612, %602
  %642 = fmul fast float %641, %640
  %643 = fmul fast float %642, %636
  %644 = fmul fast float %613, %602
  %645 = fmul fast float %644, %640
  %646 = fmul fast float %645, %637
  %647 = fmul fast float %614, %602
  %648 = fmul fast float %647, %640
  %649 = fmul fast float %648, %638
  %650 = fadd fast float %643, %503
  %651 = fadd fast float %646, %504
  %652 = fadd fast float %649, %505
  %653 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %654 = extractvalue %dx.types.CBufRet.i32 %653, 0
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %671, label %656

; <label>:656                                     ; preds = %601
  %657 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %3)  ; CreateHandleForLib(Resource)
  %658 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %657, i32 0, i32 %289, i32 %290, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %659 = extractvalue %dx.types.ResRet.f32 %658, 3
  %660 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32 160, %"class.RWTexture2D<vector<float, 4> >" %12)  ; CreateHandleForLib(Resource)
  %661 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %660, i32 undef, i32 %289, i32 %290, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %662 = extractvalue %dx.types.ResRet.f32 %661, 0
  %663 = extractvalue %dx.types.ResRet.f32 %661, 1
  %664 = extractvalue %dx.types.ResRet.f32 %661, 2
  %665 = fmul fast float %659, %650
  %666 = fmul fast float %659, %651
  %667 = fmul fast float %659, %652
  %668 = fadd fast float %662, %665
  %669 = fadd fast float %663, %666
  %670 = fadd fast float %664, %667
  br label %671

; <label>:671                                     ; preds = %656, %601
  %672 = phi float [ %668, %656 ], [ %650, %601 ]
  %673 = phi float [ %669, %656 ], [ %651, %601 ]
  %674 = phi float [ %670, %656 ], [ %652, %601 ]
  %675 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32 160, %"class.RWTexture2D<vector<float, 4> >" %12)  ; CreateHandleForLib(Resource)
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %675, i32 %289, i32 %290, i32 undef, float %672, float %673, float %674, float 1.000000e+00, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %676

; <label>:676                                     ; preds = %671, %0
  ret void
}

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleCmpLevelZero.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #2

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.primitiveIndex.i32(i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayDirection.f32(i32, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayOrigin.f32(i32, i8) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleGrad.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.traceRay.struct.RayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.RayPayload*) #3

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #3

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.HitShaderConstants(i32, %HitShaderConstants) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.b1(i32, %b1) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.Material(i32, %Material) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.ByteAddressBuffer(i32, %struct.ByteAddressBuffer) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<float>"(i32, %"class.Texture2D<float>") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerComparisonState(i32, %struct.SamplerComparisonState) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.StructuredBuffer<RayTraceMeshInfo>"(i32, %"class.StructuredBuffer<RayTraceMeshInfo>") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32, %"class.Texture2D<vector<float, 4> >") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.SamplerState(i32, %struct.SamplerState) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32, %struct.RaytracingAccelerationStructure) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32, %"class.RWTexture2D<vector<float, 4> >") #1

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!27, !49}
!dx.entryPoints = !{!55, !57}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 5}
!3 = !{!"lib", i32 6, i32 3}
!4 = !{!5, !18, !20, !24}
!5 = !{!6, !8, !10, !11, !12, !14, !15, !16, !17}
!6 = !{i32 0, %struct.RaytracingAccelerationStructure* @"\01?g_accel@@3URaytracingAccelerationStructure@@A", !"g_accel", i32 0, i32 0, i32 1, i32 16, i32 0, !7}
!7 = !{i32 0, i32 4}
!8 = !{i32 1, %"class.StructuredBuffer<RayTraceMeshInfo>"* @"\01?g_meshInfo@@3V?$StructuredBuffer@URayTraceMeshInfo@@@@A", !"g_meshInfo", i32 0, i32 1, i32 1, i32 12, i32 0, !9}
!9 = !{i32 1, i32 32}
!10 = !{i32 2, %struct.ByteAddressBuffer* @"\01?g_indices@@3UByteAddressBuffer@@A", !"g_indices", i32 0, i32 2, i32 1, i32 11, i32 0, null}
!11 = !{i32 3, %struct.ByteAddressBuffer* @"\01?g_attributes@@3UByteAddressBuffer@@A", !"g_attributes", i32 0, i32 3, i32 1, i32 11, i32 0, null}
!12 = !{i32 4, %"class.Texture2D<float>"* @"\01?texShadow@@3V?$Texture2D@M@@A", !"texShadow", i32 0, i32 4, i32 1, i32 2, i32 0, !13}
!13 = !{i32 0, i32 9}
!14 = !{i32 5, %"class.Texture2D<float>"* @"\01?texSSAO@@3V?$Texture2D@M@@A", !"texSSAO", i32 0, i32 5, i32 1, i32 2, i32 0, !13}
!15 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* @"\01?g_localTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", !"g_localTexture", i32 0, i32 6, i32 1, i32 2, i32 0, !13}
!16 = !{i32 7, %"class.Texture2D<vector<float, 4> >"* @"\01?g_localNormal@@3V?$Texture2D@V?$vector@M$03@@@@A", !"g_localNormal", i32 0, i32 7, i32 1, i32 2, i32 0, !13}
!17 = !{i32 8, %"class.Texture2D<vector<float, 4> >"* @"\01?normals@@3V?$Texture2D@V?$vector@M$03@@@@A", !"normals", i32 0, i32 13, i32 1, i32 2, i32 0, !13}
!18 = !{!19}
!19 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* @"\01?g_screenOutput@@3V?$RWTexture2D@V?$vector@M$03@@@@A", !"g_screenOutput", i32 0, i32 2, i32 1, i32 2, i1 false, i1 false, i1 false, !13}
!20 = !{!21, !22, !23}
!21 = !{i32 0, %HitShaderConstants* @HitShaderConstants, !"HitShaderConstants", i32 0, i32 0, i32 1, i32 136, null}
!22 = !{i32 1, %b1* @b1, !"b1", i32 0, i32 1, i32 1, i32 88, null}
!23 = !{i32 2, %Material* @Material, !"Material", i32 0, i32 3, i32 1, i32 4, null}
!24 = !{!25, !26}
!25 = !{i32 0, %struct.SamplerState* @"\01?g_s0@@3USamplerState@@A", !"g_s0", i32 0, i32 0, i32 1, i32 0, null}
!26 = !{i32 1, %struct.SamplerComparisonState* @"\01?shadowSampler@@3USamplerComparisonState@@A", !"shadowSampler", i32 0, i32 1, i32 1, i32 1, null}
!27 = !{i32 0, %struct.DynamicCB undef, !28, %"class.StructuredBuffer<RayTraceMeshInfo>" undef, !34, %"class.Texture2D<float>" undef, !36, %"class.Texture2D<vector<float, 4> >" undef, !36, %HitShaderConstants undef, !39, %b1 undef, !47}
!28 = !{i32 88, !29, !31, !32, !33}
!29 = !{i32 6, !"cameraToWorld", i32 2, !30, i32 3, i32 0, i32 7, i32 9}
!30 = !{i32 4, i32 4, i32 1}
!31 = !{i32 6, !"worldCameraPosition", i32 3, i32 64, i32 7, i32 9}
!32 = !{i32 6, !"padding", i32 3, i32 76, i32 7, i32 5}
!33 = !{i32 6, !"resolution", i32 3, i32 80, i32 7, i32 9}
!34 = !{i32 32, !35}
!35 = !{i32 6, !"h", i32 3, i32 0}
!36 = !{i32 20, !37, !38}
!37 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!38 = !{i32 6, !"mips", i32 3, i32 16}
!39 = !{i32 136, !40, !41, !42, !43, !44, !45, !46}
!40 = !{i32 6, !"SunDirection", i32 3, i32 0, i32 7, i32 9}
!41 = !{i32 6, !"SunColor", i32 3, i32 16, i32 7, i32 9}
!42 = !{i32 6, !"AmbientColor", i32 3, i32 32, i32 7, i32 9}
!43 = !{i32 6, !"ShadowTexelSize", i32 3, i32 48, i32 7, i32 9}
!44 = !{i32 6, !"ModelToShadow", i32 2, !30, i32 3, i32 64, i32 7, i32 9}
!45 = !{i32 6, !"IsReflection", i32 3, i32 128, i32 7, i32 5}
!46 = !{i32 6, !"UseShadowRays", i32 3, i32 132, i32 7, i32 5}
!47 = !{i32 88, !48}
!48 = !{i32 6, !"g_dynamic", i32 3, i32 0}
!49 = !{i32 1, void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @"\01?Hit@@YAXURayPayload@@UBuiltInTriangleIntersectionAttributes@@@Z", !50}
!50 = !{!51, !53, !54}
!51 = !{i32 1, !52, !52}
!52 = !{}
!53 = !{i32 2, !52, !52}
!54 = !{i32 0, !52, !52}
!55 = !{null, !"", null, !4, !56}
!56 = !{i32 0, i64 73744}
!57 = !{void (%struct.RayPayload*, %struct.BuiltInTriangleIntersectionAttributes*)* @"\01?Hit@@YAXURayPayload@@UBuiltInTriangleIntersectionAttributes@@@Z", !"\01?Hit@@YAXURayPayload@@UBuiltInTriangleIntersectionAttributes@@@Z", null, null, !58}
!58 = !{i32 8, i32 10, i32 6, i32 8, i32 7, i32 8, i32 5, !59}
!59 = !{i32 0}
!60 = !{!61, !61, i64 0}
!61 = !{!"float", !62, i64 0}
!62 = !{!"omnipotent char", !63, i64 0}
!63 = !{!"Simple C/C++ TBAA"}
!64 = !{!65, !65, i64 0}
!65 = !{!"bool", !62, i64 0}
!66 = !{i32 0, i32 2}

#endif

const unsigned char g_pDiffuseHitShaderLib[] = {
  0x44, 0x58, 0x42, 0x43, 0xca, 0xf5, 0xc5, 0xa1, 0x45, 0x02, 0xf7, 0x0c,
  0xa2, 0x5e, 0xa2, 0x44, 0xf9, 0x1a, 0x68, 0x2e, 0x01, 0x00, 0x00, 0x00,
  0xb4, 0x40, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0xcc, 0x03, 0x00, 0x00, 0xb0, 0x1a, 0x00, 0x00,
  0xcc, 0x1a, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x44, 0x41, 0x54,
  0x80, 0x03, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 0xfc, 0x02, 0x00, 0x00,
  0x38, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00,
  0x00, 0x48, 0x69, 0x74, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f,
  0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x00, 0x62, 0x31, 0x00, 0x4d,
  0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x00, 0x67, 0x5f, 0x73, 0x30,
  0x00, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x53, 0x61, 0x6d, 0x70, 0x6c,
  0x65, 0x72, 0x00, 0x67, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x00, 0x67,
  0x5f, 0x6d, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x00, 0x67, 0x5f,
  0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x00, 0x67, 0x5f, 0x61, 0x74,
  0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x00, 0x74, 0x65, 0x78,
  0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x00, 0x74, 0x65, 0x78, 0x53, 0x53,
  0x41, 0x4f, 0x00, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x65,
  0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
  0x6c, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x6e, 0x6f, 0x72, 0x6d,
  0x61, 0x6c, 0x73, 0x00, 0x67, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
  0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x00, 0x01, 0x3f, 0x48, 0x69, 0x74,
  0x40, 0x40, 0x59, 0x41, 0x58, 0x55, 0x52, 0x61, 0x79, 0x50, 0x61, 0x79,
  0x6c, 0x6f, 0x61, 0x64, 0x40, 0x40, 0x55, 0x42, 0x75, 0x69, 0x6c, 0x74,
  0x49, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x6e,
  0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
  0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x40, 0x40, 0x40, 0x5a,
  0x00, 0x48, 0x69, 0x74, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xe8, 0x01, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x63, 0x00, 0x0a, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0xdc, 0x16, 0x00, 0x00, 0x63, 0x00, 0x06, 0x00,
  0xb7, 0x05, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xc4, 0x16, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xae, 0x05, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x1c, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xe4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x72, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x91, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x39, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0x20, 0x00,
  0x12, 0x60, 0xd9, 0x60, 0x08, 0x02, 0xb0, 0x00, 0xd5, 0x06, 0xf0, 0x18,
  0xfe, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x24, 0x82, 0x1c, 0xd2, 0x61, 0x1e,
  0xc2, 0x41, 0x1c, 0xd8, 0xa1, 0x1c, 0xda, 0x80, 0x1e, 0xc2, 0x21, 0x1d,
  0xd8, 0xa1, 0x0d, 0xc6, 0x21, 0x1c, 0xd8, 0x81, 0x1d, 0xe6, 0x01, 0x30,
  0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x60, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x68, 0x03, 0x78, 0x90, 0x87, 0x72, 0x18, 0x87, 0x74, 0x98,
  0x87, 0x72, 0x68, 0x03, 0x73, 0x80, 0x87, 0x76, 0x08, 0x07, 0x72, 0x00,
  0xcc, 0x21, 0x1c, 0xd8, 0x61, 0x1e, 0xca, 0x01, 0x20, 0xdc, 0xe1, 0x1d,
  0xda, 0xc0, 0x1c, 0xe4, 0x21, 0x1c, 0xda, 0xa1, 0x1c, 0xda, 0x00, 0x1e,
  0xde, 0x21, 0x1d, 0xdc, 0x81, 0x1e, 0xca, 0x41, 0x1e, 0xda, 0xa0, 0x1c,
  0xd8, 0x21, 0x1d, 0xda, 0x01, 0x30, 0x87, 0x70, 0x60, 0x87, 0x79, 0x28,
  0x07, 0x80, 0x70, 0x87, 0x77, 0x68, 0x83, 0x74, 0x70, 0x07, 0x73, 0x98,
  0x87, 0x36, 0x30, 0x07, 0x78, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40,
  0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xc2, 0x1d,
  0xde, 0xa1, 0x0d, 0xdc, 0x21, 0x1c, 0xdc, 0x61, 0x1e, 0xda, 0xc0, 0x1c,
  0xe0, 0xa1, 0x0d, 0xda, 0x21, 0x1c, 0xe8, 0x01, 0x1d, 0x00, 0x73, 0x08,
  0x07, 0x76, 0x98, 0x87, 0x72, 0x00, 0x06, 0x77, 0x78, 0x87, 0x36, 0x90,
  0x87, 0x72, 0x08, 0x07, 0x76, 0x48, 0x87, 0x73, 0x70, 0x87, 0x36, 0x98,
  0x07, 0x7a, 0x08, 0x87, 0x71, 0x58, 0x07, 0x80, 0x98, 0x07, 0x7a, 0x08,
  0x87, 0x71, 0x58, 0x87, 0x36, 0x80, 0x07, 0x79, 0x78, 0x07, 0x7a, 0x28,
  0x87, 0x71, 0xa0, 0x87, 0x77, 0x90, 0x87, 0x36, 0x10, 0x87, 0x7a, 0x30,
  0x07, 0x73, 0x28, 0x07, 0x79, 0x68, 0x83, 0x79, 0x48, 0x07, 0x7d, 0x28,
  0x07, 0x00, 0x0e, 0x00, 0xa2, 0x1e, 0xdc, 0x61, 0x1e, 0xc2, 0xc1, 0x1c,
  0xca, 0xa1, 0x0d, 0xcc, 0x01, 0x1e, 0xda, 0xa0, 0x1d, 0xc2, 0x81, 0x1e,
  0xd0, 0x01, 0x30, 0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0xa8,
  0x87, 0x79, 0x28, 0x87, 0x36, 0x98, 0x87, 0x77, 0x30, 0x07, 0x7a, 0x68,
  0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x00, 0xcc, 0x21, 0x1c,
  0xd8, 0x61, 0x1e, 0xca, 0x01, 0xd8, 0x60, 0x10, 0xff, 0xff, 0xff, 0xff,
  0x3f, 0x00, 0x12, 0x50, 0x6d, 0x30, 0x8a, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa0, 0x36, 0x10, 0xc6, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x80,
  0x04, 0x00, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x13, 0x86, 0x40, 0x18, 0x26, 0x04, 0xc4, 0x84, 0xa0, 0x98, 0x10, 0x18,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0xfd, 0x00, 0x00, 0x00,
  0x32, 0x22, 0xc8, 0x09, 0x20, 0x64, 0x85, 0x04, 0x93, 0x23, 0xa4, 0x84,
  0x04, 0x93, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8e, 0x8c,
  0x0b, 0x84, 0xe4, 0x4c, 0x10, 0xb0, 0xc3, 0x1c, 0x01, 0x18, 0x9c, 0x19,
  0x48, 0x53, 0x44, 0x09, 0x93, 0xbf, 0x02, 0xd8, 0x14, 0x01, 0x02, 0xd2,
  0x18, 0x9a, 0x20, 0x10, 0x0b, 0x11, 0x01, 0x13, 0xe2, 0x34, 0xec, 0x14,
  0x51, 0xc2, 0x44, 0x45, 0x04, 0x0a, 0x00, 0x14, 0x98, 0x01, 0x18, 0x46,
  0x20, 0x86, 0x99, 0xc8, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e,
  0xdc, 0x40, 0x16, 0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e,
  0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c,
  0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c,
  0xe8, 0x81, 0x0d, 0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x05,
  0x04, 0x2a, 0xdc, 0x25, 0x4d, 0x11, 0x25, 0x4c, 0xfe, 0x0a, 0x60, 0x6d,
  0x04, 0x08, 0x84, 0x49, 0x48, 0x87, 0xd8, 0x14, 0x0e, 0x42, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x42, 0x83, 0x71, 0x60, 0x87, 0x70,
  0x98, 0x87, 0x79, 0x70, 0x83, 0x59, 0xa0, 0x07, 0x79, 0xa8, 0x87, 0x71,
  0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x20, 0x07, 0x51, 0xa8, 0x07, 0x73,
  0x30, 0x87, 0x72, 0x90, 0x07, 0x3e, 0x90, 0x85, 0x70, 0xc8, 0x07, 0x5a,
  0x90, 0x87, 0x70, 0x18, 0x87, 0x72, 0x68, 0x85, 0x72, 0x98, 0x07, 0x74,
  0x48, 0x05, 0x77, 0x30, 0x87, 0x77, 0xf0, 0x03, 0x14, 0x1c, 0x08, 0x71,
  0x98, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x1b, 0x36, 0x11, 0xda, 0x30, 0x44,
  0x84, 0x24, 0x6d, 0x54, 0x51, 0x10, 0x11, 0x0a, 0x00, 0xa4, 0x98, 0x29,
  0x0c, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1,
  0x1c, 0xf0, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81,
  0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0xc1, 0x0f, 0xf4, 0x40,
  0x0f, 0xda, 0x21, 0x1d, 0xe0, 0x61, 0x1e, 0x7e, 0x81, 0x1e, 0xf2, 0x01,
  0x1e, 0xca, 0x01, 0x05, 0x80, 0x99, 0xac, 0x71, 0x60, 0x87, 0x70, 0x98,
  0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90,
  0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08,
  0x07, 0x7a, 0xf0, 0x03, 0x24, 0x0c, 0x18, 0xd4, 0xb8, 0x49, 0x9a, 0x22,
  0x4a, 0x98, 0x7c, 0x16, 0x60, 0x9e, 0x85, 0x88, 0xd8, 0x09, 0x98, 0x08,
  0x14, 0x00, 0xe8, 0x71, 0x9d, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x2c, 0xc0,
  0x3c, 0x0b, 0x11, 0x71, 0x0e, 0xf3, 0x00, 0x11, 0x22, 0x39, 0x0d, 0x3b,
  0x01, 0x13, 0x81, 0x02, 0x00, 0x45, 0x66, 0x6a, 0x83, 0x71, 0x60, 0x87,
  0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87,
  0x7a, 0x90, 0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87,
  0x71, 0xa0, 0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87,
  0x70, 0xa0, 0x07, 0x36, 0x00, 0x03, 0x3a, 0xf0, 0x03, 0x30, 0xf0, 0x03,
  0x3d, 0xd0, 0x83, 0x76, 0x48, 0x07, 0x78, 0x98, 0x87, 0x5f, 0xa0, 0x87,
  0x7c, 0x80, 0x87, 0x72, 0x40, 0x01, 0x60, 0x26, 0x31, 0x18, 0x07, 0x76,
  0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a,
  0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72,
  0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77,
  0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00, 0x03, 0x3f,
  0x40, 0x02, 0x61, 0x42, 0x94, 0x11, 0x80, 0x12, 0x58, 0xe8, 0x32, 0x47,
  0x80, 0x50, 0xc6, 0x0c, 0x00, 0x8c, 0x26, 0x01, 0x36, 0xc4, 0x19, 0x46,
  0x18, 0x86, 0x24, 0x20, 0x9c, 0x25, 0x2c, 0x80, 0x24, 0xf9, 0x0c, 0x30,
  0x45, 0xc8, 0xe5, 0x17, 0x8b, 0x03, 0x4c, 0x3e, 0xee, 0xe3, 0x28, 0xf8,
  0x9c, 0x14, 0x22, 0x13, 0x7b, 0x00, 0x03, 0x11, 0x71, 0x4e, 0x23, 0x4d,
  0x40, 0x33, 0x49, 0xe8, 0xf0, 0x78, 0x3c, 0x04, 0x10, 0x00, 0x40, 0xa1,
  0x61, 0x04, 0x61, 0x38, 0x48, 0x9a, 0x22, 0x4a, 0x98, 0xfc, 0x0e, 0x6b,
  0x00, 0x06, 0x11, 0xb8, 0x0d, 0x11, 0x20, 0x0f, 0x60, 0x74, 0x42, 0x50,
  0xa3, 0x80, 0x44, 0xa5, 0x43, 0x4c, 0x60, 0x22, 0x22, 0x04, 0x58, 0x50,
  0x00, 0xa0, 0xd3, 0x45, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xaf, 0x00, 0x96,
  0x02, 0xd8, 0xe2, 0x00, 0x03, 0x12, 0x00, 0x03, 0x4a, 0x1d, 0x1b, 0x48,
  0x53, 0x44, 0x09, 0x93, 0xbf, 0x51, 0xc8, 0x32, 0x89, 0x4d, 0x1b, 0x21,
  0x40, 0x63, 0x2c, 0x84, 0xd8, 0x4c, 0x44, 0x24, 0x11, 0xc2, 0x84, 0x38,
  0x8d, 0x36, 0x4d, 0x11, 0x12, 0x50, 0x13, 0x21, 0xa1, 0x60, 0x44, 0xab,
  0x32, 0x58, 0x54, 0x2c, 0x6a, 0x1d, 0x35, 0x5c, 0xfe, 0x84, 0x3d, 0x84,
  0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4, 0xe4, 0x17, 0xb7, 0x8d, 0x88, 0xc1,
  0x60, 0x30, 0xb8, 0x67, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81,
  0x66, 0x58, 0x08, 0x14, 0x68, 0x0a, 0xf1, 0x02, 0xc0, 0x00, 0x14, 0x3b,
  0x6a, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89,
  0xc9, 0x47, 0x6e, 0x1b, 0x11, 0x00, 0x00, 0x00, 0x50, 0x88, 0x19, 0x00,
  0x06, 0x20, 0xda, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a,
  0x48, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0xa3, 0x02, 0x00, 0x00, 0x00, 0x00,
  0xe5, 0xb0, 0x01, 0x60, 0x00, 0x40, 0x06, 0x40, 0xb7, 0x9b, 0x86, 0xcb,
  0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x95, 0x90, 0x56, 0x62, 0xf2, 0x8b, 0xdb,
  0x46, 0xc5, 0x60, 0x30, 0x18, 0x00, 0x0a, 0x93, 0x03, 0xc0, 0x60, 0x83,
  0xc1, 0x60, 0x00, 0x00, 0x00, 0x06, 0xa4, 0x2b, 0xc8, 0x00, 0x30, 0x18,
  0x0c, 0x06, 0x83, 0x01, 0xf1, 0xca, 0x30, 0x00, 0x0c, 0xc8, 0x57, 0x8a,
  0x01, 0x60, 0x30, 0x18, 0x10, 0xb0, 0x08, 0x03, 0x00, 0x09, 0x8b, 0x00,
  0x00, 0x10, 0xb1, 0x0c, 0x03, 0x40, 0x86, 0x8c, 0x65, 0x00, 0x00, 0x32,
  0x84, 0x2c, 0x52, 0x0e, 0x00, 0x83, 0x0d, 0x06, 0x83, 0x01, 0x00, 0x00,
  0x18, 0x0c, 0x06, 0x83, 0xc1, 0x60, 0x40, 0xca, 0xa2, 0xe4, 0x00, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x2c, 0x91, 0x05, 0x00, 0x03,
  0x00, 0x00, 0x00, 0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x83, 0x81, 0x8a,
  0x9c, 0x65, 0xb1, 0x00, 0x60, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0c, 0x32,
  0x04, 0x2d, 0x03, 0x0c, 0x10, 0x22, 0x69, 0x19, 0x60, 0x80, 0x12, 0x51,
  0xcb, 0x00, 0x03, 0x9c, 0xc8, 0x5a, 0x06, 0x18, 0x40, 0x41, 0xd8, 0x32,
  0xc0, 0x00, 0x0d, 0xd2, 0x96, 0x01, 0x06, 0x88, 0x10, 0xb7, 0x0c, 0x30,
  0x00, 0x82, 0xbc, 0x65, 0x80, 0x01, 0x28, 0x04, 0x2e, 0x03, 0x0c, 0xf0,
  0x20, 0x71, 0x19, 0x60, 0x80, 0x00, 0x91, 0xcb, 0x00, 0x03, 0x14, 0xc8,
  0x3c, 0x10, 0x30, 0x47, 0x10, 0x9c, 0x23, 0x4d, 0x11, 0x25, 0x4c, 0xfe,
  0x0a, 0x60, 0x1d, 0x21, 0x09, 0x88, 0xf0, 0x0c, 0x3c, 0x83, 0x39, 0x02,
  0x50, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0xc4, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x06, 0x03, 0x00, 0x66, 0x31,
  0x00, 0x60, 0x22, 0x03, 0x00, 0xa6, 0x32, 0x00, 0x60, 0x2a, 0x03, 0x00,
  0x66, 0x33, 0x00, 0x60, 0x36, 0x03, 0x00, 0xe6, 0x33, 0x00, 0x60, 0x46,
  0x03, 0x00, 0x26, 0x35, 0x00, 0x60, 0x52, 0x03, 0x00, 0x26, 0x35, 0x00,
  0x60, 0x72, 0xc2, 0x2c, 0x08, 0x18, 0x0e, 0x00, 0x80, 0xe5, 0x00, 0x00,
  0x78, 0x0e, 0x00, 0x60, 0xc8, 0xd3, 0x06, 0x40, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x89, 0x03, 0x20, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0xd0, 0x01, 0x10,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xee,
  0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x7a, 0x00, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x1e, 0x3e, 0x00, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x1f, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x14, 0x80, 0x00, 0x18, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x23, 0x0a, 0x40, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x21, 0x05,
  0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x98, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x4c, 0x01, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0xa8, 0x00, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x55, 0x00, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x2b, 0x00, 0x01, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xc7, 0x15, 0x80,
  0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x03,
  0x0b, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
  0xe4, 0x91, 0x05, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0xd0, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0x6c, 0x01, 0x08, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0xb8, 0x00, 0x04, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x5d, 0x00, 0x02,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x2f,
  0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0xc7, 0x17, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x03, 0x0e, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x11, 0x07, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x90, 0x03, 0x10, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xcc, 0x01, 0x08, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x40, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x1c, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02, 0x94, 0x40, 0x19, 0x8c,
  0x00, 0x14, 0x43, 0x81, 0x14, 0x42, 0x61, 0x14, 0x50, 0x11, 0x94, 0x45,
  0x49, 0x94, 0x42, 0x39, 0x14, 0x44, 0x69, 0x14, 0xa4, 0x40, 0xc1, 0x06,
  0x14, 0x60, 0x40, 0x61, 0x06, 0x14, 0x68, 0x40, 0xa1, 0x14, 0x4c, 0xe1,
  0x14, 0x58, 0x01, 0x0a, 0x14, 0xa2, 0x40, 0x51, 0xd0, 0xba, 0x40, 0x01,
  0x13, 0x28, 0x5d, 0x03, 0x23, 0x00, 0x54, 0x98, 0x01, 0xa0, 0xc3, 0x0c,
  0x00, 0x21, 0x66, 0x00, 0x48, 0x31, 0x03, 0x40, 0x8c, 0x19, 0x00, 0x6a,
  0xcc, 0x00, 0xd0, 0x64, 0x06, 0x80, 0x28, 0x33, 0x00, 0xc4, 0x19, 0x01,
  0xa0, 0xd0, 0x0c, 0x00, 0x91, 0x66, 0x00, 0xa8, 0x34, 0x03, 0x40, 0xa7,
  0x19, 0x00, 0x4a, 0xcd, 0x00, 0xd0, 0x6a, 0x06, 0x80, 0x08, 0x33, 0x00,
  0x34, 0x98, 0x01, 0x20, 0xf5, 0x0c, 0x00, 0x05, 0x66, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0xd4, 0x01, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c, 0x24, 0xc6, 0x45, 0x66,
  0x43, 0x10, 0x4c, 0x10, 0x00, 0x36, 0x98, 0x20, 0x00, 0x6d, 0xb0, 0x41,
  0x18, 0x88, 0x09, 0x02, 0xe0, 0x06, 0x1b, 0x04, 0xc3, 0xe0, 0xc0, 0x96,
  0x26, 0x36, 0x41, 0x00, 0xde, 0x60, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x41,
  0x00, 0x78, 0x9c, 0x7d, 0x85, 0x8d, 0x8d, 0x95, 0xb1, 0x4d, 0x10, 0x00,
  0x38, 0x98, 0x20, 0x00, 0x71, 0xb0, 0x41, 0x30, 0x9c, 0x0d, 0x89, 0xb1,
  0x30, 0x86, 0x31, 0x34, 0xc6, 0x33, 0x41, 0x48, 0x04, 0x2a, 0x67, 0x5f,
  0x6d, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x13, 0x04, 0x40, 0x0e,
  0x26, 0x08, 0xc0, 0x1c, 0x6c, 0x10, 0x06, 0x6a, 0x43, 0x32, 0x44, 0x92,
  0x31, 0x0c, 0x93, 0x51, 0x4d, 0x10, 0x00, 0x3a, 0x98, 0x20, 0x2c, 0x03,
  0x93, 0xb3, 0xaf, 0x34, 0x37, 0xb2, 0xb4, 0xb1, 0xb2, 0xb9, 0x09, 0x02,
  0x50, 0x07, 0x1b, 0x92, 0x0b, 0xcb, 0x8c, 0x6b, 0xd0, 0x0c, 0x60, 0x82,
  0xb0, 0x10, 0x64, 0xce, 0xbe, 0xc2, 0xe8, 0xe8, 0xe4, 0xd2, 0xc4, 0xea,
  0xe8, 0xca, 0xe6, 0x36, 0x24, 0x04, 0xd7, 0x19, 0xc4, 0xa0, 0x19, 0xc0,
  0x04, 0xc1, 0x29, 0x98, 0xd0, 0x95, 0xe1, 0x4d, 0xa1, 0x85, 0x91, 0xbd,
  0xdd, 0x4d, 0x10, 0x00, 0x3b, 0xd8, 0x20, 0x18, 0x61, 0xb0, 0x21, 0x71,
  0x3e, 0x30, 0x30, 0x9c, 0xe1, 0x32, 0xc4, 0x60, 0x82, 0x00, 0xdc, 0xc1,
  0x04, 0xc1, 0x31, 0x78, 0xd0, 0x95, 0xe1, 0x4d, 0x4d, 0x05, 0x3d, 0x6d,
  0x48, 0xc8, 0xa0, 0x0c, 0xcc, 0xc0, 0x20, 0x83, 0xe1, 0x32, 0xc4, 0x60,
  0x82, 0x50, 0x25, 0x74, 0xce, 0xbe, 0xd8, 0xde, 0xc6, 0xc2, 0xd8, 0xa8,
  0xca, 0xf0, 0xe8, 0xea, 0xe4, 0xca, 0x36, 0x24, 0x09, 0x1a, 0xa4, 0x81,
  0x91, 0x0c, 0x97, 0x21, 0x06, 0x13, 0x04, 0x00, 0x0f, 0x26, 0x08, 0x95,
  0xc2, 0xe6, 0xec, 0x8b, 0xed, 0x6d, 0x2c, 0x8c, 0xcd, 0xe9, 0x4d, 0xae,
  0x2d, 0x8c, 0x6d, 0x43, 0xb2, 0x06, 0x6c, 0xd0, 0x06, 0xc6, 0x1a, 0x0c,
  0x97, 0x21, 0x06, 0x13, 0x04, 0x20, 0x0f, 0x26, 0x08, 0xd5, 0xc2, 0xc3,
  0xed, 0x4d, 0xae, 0x2d, 0x8c, 0x6d, 0x6e, 0x82, 0x00, 0xe8, 0xc1, 0x86,
  0xe4, 0x0d, 0xe0, 0x20, 0x0e, 0x0c, 0x39, 0x18, 0x2e, 0x43, 0x0c, 0x36,
  0x24, 0x90, 0xb5, 0x79, 0x63, 0x70, 0x06, 0x6a, 0xe0, 0x06, 0x73, 0x30,
  0x41, 0x30, 0x02, 0x3a, 0x67, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
  0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x13, 0x84, 0x74, 0x48, 0x85, 0x0d,
  0x8b, 0x51, 0x07, 0x76, 0x60, 0x5c, 0xc3, 0x75, 0x07, 0x77, 0x70, 0x07,
  0x62, 0xb0, 0x21, 0xc0, 0x83, 0x09, 0x82, 0x18, 0x34, 0x94, 0x90, 0xd2,
  0xe8, 0xa6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0x86, 0xde, 0xdc, 0xe6, 0xe8,
  0xc2, 0xdc, 0xe8, 0xe6, 0x26, 0x08, 0xc0, 0x1e, 0x6c, 0x40, 0x0c, 0x3d,
  0xd8, 0x03, 0xc3, 0x18, 0xf8, 0x00, 0x98, 0x20, 0x98, 0x81, 0x43, 0x41,
  0x2c, 0x66, 0x82, 0x00, 0xf0, 0xc1, 0x06, 0x64, 0xf0, 0x83, 0x3f, 0x30,
  0x86, 0x01, 0x14, 0x80, 0x09, 0x02, 0x1a, 0x3c, 0x44, 0x9a, 0xc2, 0xe8,
  0xca, 0xe4, 0xd2, 0xc2, 0xd8, 0x36, 0x20, 0x97, 0x28, 0x8c, 0x82, 0x41,
  0x0c, 0x0e, 0xb0, 0x61, 0xe8, 0x83, 0x50, 0x20, 0x85, 0x09, 0x02, 0x74,
  0x90, 0x38, 0xfb, 0x9a, 0x83, 0xd9, 0x80, 0x18, 0xa6, 0x70, 0x0a, 0x86,
  0x31, 0x18, 0xc0, 0x04, 0x41, 0x42, 0xd8, 0xcc, 0xa1, 0x85, 0x91, 0xbd,
  0xdd, 0x4d, 0x85, 0xb5, 0xc1, 0xb1, 0x95, 0xc9, 0x6d, 0x40, 0x86, 0x54,
  0x50, 0x05, 0x63, 0x18, 0x06, 0x60, 0x83, 0x80, 0x0a, 0xab, 0xb0, 0x81,
  0xa0, 0x83, 0x3c, 0x28, 0x05, 0x56, 0x98, 0x20, 0x04, 0xbc, 0xc0, 0x00,
  0x6d, 0x83, 0x91, 0xbc, 0x02, 0x61, 0xac, 0x81, 0xb3, 0x41, 0x70, 0x60,
  0x61, 0x82, 0x50, 0xa8, 0xc2, 0x06, 0x23, 0x79, 0x05, 0xc2, 0x58, 0x83,
  0x30, 0x98, 0x20, 0x10, 0xb9, 0xb0, 0x41, 0x30, 0x68, 0x61, 0x43, 0x50,
  0x0b, 0x1b, 0x04, 0xc3, 0x16, 0x36, 0x0c, 0xcd, 0x2c, 0xdc, 0xc2, 0x04,
  0x81, 0x0c, 0x68, 0x81, 0xcd, 0x58, 0x58, 0x5b, 0x99, 0x5c, 0x18, 0xd5,
  0xdb, 0xd5, 0x9b, 0x1c, 0x1b, 0xd9, 0x86, 0xc1, 0x71, 0x86, 0x0d, 0x48,
  0xa2, 0x0b, 0xd7, 0x2e, 0x10, 0xc6, 0x1a, 0x84, 0x01, 0xa7, 0xbb, 0x37,
  0x39, 0x36, 0xb2, 0xa1, 0xb0, 0xb6, 0x32, 0xb9, 0x30, 0xa8, 0xb7, 0xb9,
  0x34, 0xba, 0xb4, 0x37, 0xb7, 0x09, 0x02, 0xd0, 0x07, 0x1b, 0x8c, 0xa4,
  0x17, 0x08, 0x5f, 0x58, 0x83, 0x30, 0xe0, 0x01, 0x17, 0x46, 0x46, 0x96,
  0xe6, 0x76, 0x36, 0x41, 0x00, 0xfc, 0x60, 0x83, 0x91, 0x80, 0x03, 0x11,
  0x0e, 0x6b, 0x40, 0x06, 0x54, 0xe4, 0xca, 0xe6, 0xde, 0xd8, 0xea, 0xe8,
  0xd2, 0xde, 0xdc, 0x26, 0x08, 0xc0, 0x1f, 0x6c, 0x30, 0x92, 0x71, 0x20,
  0xc8, 0x61, 0x0d, 0xc2, 0x60, 0x43, 0x01, 0x0a, 0xbc, 0xf0, 0x0b, 0xe2,
  0x50, 0x0e, 0x13, 0x04, 0x84, 0x15, 0x36, 0x10, 0xc9, 0x2b, 0x10, 0xc6,
  0x04, 0xe1, 0x58, 0x85, 0x0d, 0x82, 0x91, 0x0e, 0x1b, 0x02, 0x75, 0xd8,
  0x20, 0x18, 0xeb, 0xb0, 0x61, 0xa0, 0xd0, 0x81, 0x1d, 0x28, 0xb5, 0x7d,
  0xa5, 0xb9, 0x91, 0x95, 0xe1, 0x3d, 0x99, 0x99, 0xcd, 0x95, 0xd1, 0x09,
  0xe5, 0xd1, 0x95, 0xcd, 0x6d, 0x30, 0x12, 0x77, 0x20, 0x8c, 0x35, 0x20,
  0x03, 0x62, 0x6d, 0x5f, 0x75, 0x76, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
  0x75, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x79, 0x74,
  0x65, 0x73, 0x1b, 0x8c, 0x04, 0x1e, 0x08, 0x67, 0x0d, 0xc8, 0x80, 0x5c,
  0xdb, 0x97, 0xdb, 0x9b, 0x5c, 0x5b, 0x18, 0x5b, 0x10, 0x1d, 0x9d, 0x5c,
  0x9a, 0x58, 0x1d, 0x5d, 0xd9, 0x93, 0x99, 0xd9, 0x5c, 0x19, 0x9d, 0x50,
  0x1e, 0x5d, 0xd9, 0xdc, 0x06, 0x23, 0x91, 0x07, 0xe2, 0x0d, 0xd6, 0x80,
  0x0c, 0xd8, 0xb5, 0x7d, 0xd1, 0x85, 0xb9, 0x9d, 0x95, 0xb9, 0xd1, 0x05,
  0xd1, 0xd1, 0xc9, 0xa5, 0x89, 0xd5, 0xd1, 0x95, 0x3d, 0x99, 0x99, 0xcd,
  0x95, 0xd1, 0x09, 0xe5, 0xd1, 0x95, 0xcd, 0x6d, 0x30, 0x12, 0x7a, 0x20,
  0xa6, 0x35, 0x20, 0x03, 0x7e, 0x6d, 0x5f, 0x62, 0x69, 0x74, 0x61, 0x6e,
  0x67, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
  0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73,
  0x1b, 0x8c, 0xc4, 0x1e, 0x88, 0x66, 0x0d, 0xc8, 0x80, 0x5e, 0xdb, 0x17,
  0xdc, 0xdb, 0x5c, 0x1a, 0x5d, 0xda, 0x9b, 0x5b, 0x10, 0x1d, 0x9d, 0x5c,
  0x9a, 0x58, 0x1d, 0x5d, 0xd9, 0x93, 0x99, 0xd9, 0x5c, 0x19, 0x9d, 0x50,
  0x1e, 0x5d, 0xd9, 0xdc, 0x04, 0x01, 0x00, 0x85, 0x0d, 0x46, 0x82, 0x0f,
  0x44, 0x3e, 0xac, 0x01, 0x19, 0xd0, 0x6a, 0xfb, 0x0a, 0xa3, 0xa3, 0x93,
  0x4b, 0x13, 0xab, 0xa3, 0x2b, 0x9b, 0xa2, 0x93, 0x4b, 0x23, 0x2b, 0x13,
  0xca, 0xa3, 0x2b, 0x9b, 0x9b, 0x20, 0x00, 0xa1, 0xb0, 0xc1, 0x48, 0xf6,
  0x81, 0xe0, 0x87, 0x35, 0x20, 0x03, 0x52, 0x6d, 0x5f, 0x6d, 0x61, 0x74,
  0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
  0x65, 0x49, 0x64, 0x13, 0x04, 0x40, 0x14, 0x36, 0x18, 0x89, 0x3f, 0x10,
  0xff, 0xb0, 0x06, 0x64, 0xb0, 0x21, 0xa1, 0xde, 0x21, 0x1e, 0xe6, 0xa1,
  0x1e, 0xee, 0x41, 0x1f, 0xfa, 0x01, 0x24, 0x26, 0x08, 0x4a, 0x2b, 0x4c,
  0x10, 0x9a, 0x57, 0x20, 0xd1, 0x96, 0x06, 0x37, 0xb7, 0x81, 0x48, 0x48,
  0x82, 0x68, 0x26, 0x08, 0x83, 0x2e, 0x6c, 0x10, 0x0c, 0x93, 0xd8, 0x10,
  0x9c, 0xc4, 0x06, 0xc1, 0x40, 0x89, 0x0d, 0x44, 0x3e, 0xcc, 0x42, 0x49,
  0xa4, 0xc4, 0x04, 0x81, 0x71, 0x05, 0x1a, 0x68, 0x61, 0x6e, 0x64, 0x6c,
  0x65, 0x1b, 0x8c, 0x84, 0x25, 0x08, 0x63, 0x0d, 0xc8, 0x60, 0x83, 0xe0,
  0xb4, 0xc4, 0x04, 0x81, 0x8a, 0x85, 0x0d, 0x44, 0x3e, 0xcc, 0x42, 0x49,
  0xdc, 0xc2, 0x04, 0x61, 0x82, 0x85, 0x09, 0x42, 0x1a, 0xdc, 0x02, 0x97,
  0xa9, 0xb5, 0x34, 0xb8, 0x29, 0xb4, 0x30, 0xb2, 0x34, 0xb7, 0xb3, 0x0d,
  0x46, 0x32, 0x13, 0x84, 0xb1, 0x06, 0x03, 0x0f, 0xa9, 0xb0, 0x3c, 0xa4,
  0x34, 0x3a, 0xaa, 0x0d, 0x46, 0x52, 0x13, 0x84, 0xb3, 0x06, 0x61, 0xb0,
  0x61, 0x78, 0x03, 0x9a, 0xb0, 0x89, 0x09, 0xc2, 0x1a, 0xe0, 0x02, 0x19,
  0xb1, 0x30, 0xb9, 0xbc, 0xb1, 0x32, 0x37, 0x3a, 0xb9, 0xb4, 0xb1, 0xb9,
  0x0d, 0x46, 0x92, 0x13, 0x84, 0xb1, 0x06, 0x61, 0xb0, 0x41, 0x78, 0x03,
  0x9d, 0x98, 0x20, 0xa8, 0xc3, 0x2e, 0xd0, 0x78, 0x92, 0x4b, 0x3b, 0x4b,
  0x73, 0xdb, 0x60, 0x24, 0x3d, 0x41, 0x18, 0x6b, 0x10, 0x06, 0x24, 0xa8,
  0x9a, 0xd2, 0xdc, 0x36, 0x18, 0xc9, 0x4f, 0x10, 0xd3, 0x1a, 0x84, 0x01,
  0x13, 0xa2, 0x34, 0xb9, 0xb2, 0x31, 0xba, 0xb4, 0x37, 0xb7, 0x0d, 0x46,
  0x12, 0x16, 0x44, 0xb3, 0x06, 0x61, 0x40, 0x82, 0xaa, 0x29, 0x0c, 0x6f,
  0x83, 0x91, 0x8c, 0x05, 0xf1, 0x0f, 0x6b, 0x10, 0x06, 0x1b, 0x0a, 0xca,
  0x27, 0xc0, 0x42, 0x2c, 0xc8, 0x62, 0x82, 0x10, 0x06, 0xb3, 0x40, 0x66,
  0xaa, 0xce, 0x8d, 0x28, 0x4d, 0xae, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x6d,
  0x82, 0x90, 0x0e, 0xa8, 0xb0, 0x01, 0x49, 0xce, 0x82, 0x30, 0xd6, 0x20,
  0x0c, 0xc2, 0x00, 0x2d, 0x88, 0x4c, 0xd5, 0xb9, 0x0d, 0xbd, 0xb1, 0xbd,
  0xc9, 0x6d, 0x40, 0x12, 0xb5, 0x20, 0x9a, 0x35, 0x08, 0x83, 0x30, 0x40,
  0x0b, 0x32, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c,
  0x6f, 0x72, 0x1b, 0x90, 0x84, 0x2d, 0x08, 0x6a, 0x0d, 0xc2, 0x20, 0x0c,
  0xd0, 0x82, 0xcf, 0x14, 0x5a, 0x18, 0xd9, 0xdb, 0x1d, 0x55, 0x19, 0x5e,
  0x19, 0xdb, 0x54, 0x9a, 0x5e, 0xd9, 0x04, 0x01, 0x18, 0x85, 0x0d, 0x48,
  0xe2, 0x16, 0xc4, 0x5b, 0xac, 0x41, 0x18, 0x84, 0x01, 0x5a, 0xb0, 0x69,
  0x7a, 0x23, 0x2b, 0x63, 0xa3, 0x7a, 0x9b, 0x42, 0x0b, 0x23, 0x7b, 0xbb,
  0xdb, 0xa0, 0x24, 0x71, 0x71, 0xed, 0x02, 0xe1, 0x0b, 0x6b, 0x10, 0x06,
  0x61, 0x80, 0x16, 0x64, 0x92, 0xe6, 0xa4, 0xca, 0xcc, 0xd8, 0xca, 0xc6,
  0xe8, 0xd2, 0xde, 0xdc, 0x26, 0x08, 0x00, 0x29, 0x6c, 0x40, 0x92, 0xb9,
  0x20, 0xe8, 0x62, 0x0d, 0xc8, 0x20, 0x0c, 0xd0, 0x82, 0x4d, 0xd5, 0x5c,
  0xd9, 0x14, 0x5a, 0x18, 0xd9, 0xdb, 0x9d, 0x54, 0x58, 0xde, 0xdc, 0x04,
  0x01, 0x28, 0x85, 0x0d, 0x48, 0x62, 0x17, 0xc4, 0x5d, 0xac, 0x01, 0x19,
  0x84, 0x01, 0x5a, 0x6c, 0x40, 0xf8, 0x20, 0x2d, 0xd6, 0xa2, 0x2d, 0xe0,
  0x42, 0x2e, 0xea, 0x02, 0x2f, 0x26, 0x08, 0x65, 0x50, 0x0b, 0x4c, 0xce,
  0xbe, 0xc8, 0xf2, 0xdc, 0xc2, 0xda, 0xd2, 0xc6, 0x36, 0x10, 0xc9, 0x5e,
  0x10, 0xc6, 0x06, 0x01, 0x14, 0xf8, 0x62, 0x82, 0x70, 0x06, 0xb6, 0x40,
  0xa5, 0x29, 0x8c, 0xae, 0x4c, 0x2e, 0x2d, 0x8c, 0x2d, 0x89, 0x68, 0x83,
  0x91, 0xfc, 0x05, 0x61, 0xac, 0x01, 0x19, 0x6c, 0x10, 0x1c, 0xd0, 0xd8,
  0x10, 0x06, 0x86, 0x2b, 0xc4, 0x82, 0x2c, 0xe0, 0x42, 0x2e, 0x98, 0xc3,
  0x39, 0xb4, 0x43, 0x3a, 0x84, 0x84, 0x48, 0xc4, 0xc2, 0x48, 0xa8, 0xc4,
  0x4a, 0xb8, 0xc4, 0x4b, 0xc0, 0x44, 0x4c, 0xb8, 0x84, 0x4c, 0xdc, 0x04,
  0x4e, 0xec, 0x04, 0x4f, 0x94, 0x85, 0x59, 0xe4, 0x85, 0x5e, 0xf4, 0x85,
  0x5f, 0x84, 0xc6, 0x04, 0xc1, 0x0d, 0xa0, 0x0d, 0xc0, 0x86, 0x61, 0x20,
  0x0d, 0xd2, 0xd8, 0x30, 0x5c, 0xa4, 0x41, 0x1a, 0x1b, 0x06, 0x83, 0x34,
  0x48, 0x63, 0xc3, 0x50, 0x1a, 0xa6, 0x71, 0x1a, 0x1b, 0x86, 0x61, 0x34,
  0x50, 0x83, 0xc0, 0x04, 0x61, 0x1d, 0x4e, 0x61, 0x83, 0x60, 0xac, 0xc6,
  0x86, 0x02, 0x50, 0x0d, 0xa0, 0x15, 0x58, 0x83, 0xa1, 0x10, 0xf0, 0x83,
  0x94, 0x46, 0x07, 0x04, 0x94, 0x15, 0x84, 0x55, 0x25, 0x15, 0x96, 0x07,
  0x15, 0x96, 0xc7, 0xf6, 0x16, 0x46, 0x06, 0x04, 0x54, 0x25, 0x54, 0x97,
  0xc6, 0x46, 0x97, 0xe4, 0x46, 0x25, 0x97, 0x16, 0xe6, 0x76, 0xc6, 0x56,
  0x96, 0xe4, 0x46, 0x57, 0x26, 0x37, 0x57, 0x36, 0x46, 0x97, 0xf6, 0xe6,
  0x16, 0x44, 0x47, 0x27, 0x97, 0x26, 0x56, 0x47, 0x57, 0x36, 0x07, 0x04,
  0x04, 0xa4, 0x35, 0x41, 0x00, 0x4c, 0x61, 0x43, 0x60, 0x6c, 0x40, 0xde,
  0xe0, 0x35, 0x92, 0x37, 0x58, 0x83, 0x37, 0x20, 0x03, 0xd8, 0xd8, 0x50,
  0x8c, 0x86, 0x6b, 0x00, 0x40, 0x6c, 0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73,
  0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x04, 0x55, 0xc8, 0xf0, 0x5c,
  0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x44, 0x13, 0x32,
  0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x81, 0x51, 0x87,
  0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac,
  0x8c, 0x6d, 0x4a, 0x90, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b,
  0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0xb0, 0x42, 0x25, 0x32, 0x3c,
  0x17, 0xba, 0x3c, 0xb8, 0xb2, 0x20, 0x37, 0xb7, 0x37, 0xba, 0x30, 0xba,
  0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x42, 0x68, 0xa0, 0x46, 0x1d, 0x32, 0x3c,
  0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9,
  0x29, 0x02, 0x6b, 0xc4, 0x06, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x74, 0x60, 0x07,
  0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8, 0x07, 0x79, 0x18, 0x87,
  0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90, 0x87, 0x74, 0x10, 0x87,
  0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x55, 0x01, 0x00, 0x00, 0x05, 0x11, 0x0a, 0x81, 0x1f, 0x32, 0x4d, 0x07,
  0x02, 0xb3, 0x41, 0x6c, 0x55, 0x1a, 0xce, 0x43, 0xc3, 0x79, 0xf6, 0x3b,
  0x4c, 0x06, 0x02, 0xab, 0xc2, 0x7a, 0x9a, 0x4d, 0x4f, 0xba, 0xa9, 0xf2,
  0x74, 0xd8, 0x7d, 0x66, 0x97, 0x93, 0x6e, 0x7a, 0x59, 0x3e, 0x2f, 0x8f,
  0xe9, 0xe9, 0xb7, 0x3b, 0x48, 0xa7, 0xcb, 0xd3, 0xe2, 0x3a, 0xbd, 0x3c,
  0x07, 0x02, 0x81, 0xda, 0x02, 0x78, 0x83, 0xc0, 0xef, 0xfc, 0x0d, 0x8f,
  0xc7, 0x65, 0x36, 0x10, 0x38, 0xab, 0x4a, 0xc3, 0x79, 0xba, 0x3c, 0x3c,
  0x4e, 0xbb, 0xcf, 0xc1, 0xf1, 0xb8, 0xcc, 0x2e, 0xcb, 0xc3, 0xf4, 0xf4,
  0xdb, 0x3d, 0xa5, 0xcb, 0xeb, 0x63, 0x7a, 0x5d, 0x5e, 0x06, 0x02, 0x83,
  0x45, 0x60, 0x06, 0x81, 0xdf, 0xf9, 0x1b, 0xa6, 0xd3, 0xe5, 0x69, 0x71,
  0x9d, 0x5e, 0x9e, 0x03, 0x81, 0xb3, 0xaa, 0x30, 0x4f, 0x2f, 0x07, 0xc9,
  0x64, 0x79, 0x79, 0x3e, 0x17, 0xd6, 0xcd, 0xe6, 0xb2, 0x1c, 0x08, 0x0c,
  0xd6, 0xc0, 0x18, 0x04, 0x7e, 0xe7, 0x6f, 0xda, 0x4d, 0x4e, 0x8f, 0xcb,
  0x73, 0x20, 0x70, 0x56, 0x15, 0xe6, 0xe9, 0xe5, 0x20, 0x99, 0x2c, 0x2f,
  0xcf, 0xe7, 0xc2, 0xba, 0xd9, 0x5c, 0x96, 0x03, 0x81, 0xc1, 0x52, 0x90,
  0x83, 0xc0, 0xef, 0xfc, 0x65, 0xbf, 0xc7, 0x61, 0xb6, 0xf3, 0x2d, 0x6f,
  0x87, 0xd9, 0x40, 0xe0, 0xcc, 0xfa, 0x23, 0x51, 0xcb, 0x78, 0x7a, 0x5d,
  0x5e, 0x96, 0x11, 0x81, 0xd6, 0x1f, 0xc9, 0x5e, 0x1e, 0xd3, 0xdf, 0x72,
  0x60, 0x93, 0x04, 0x9b, 0x01, 0x81, 0x40, 0x60, 0xb0, 0x12, 0xe6, 0x20,
  0xf0, 0x3b, 0x7f, 0xd9, 0xef, 0x71, 0x98, 0x4d, 0x2d, 0xe3, 0xe9, 0x75,
  0x79, 0x19, 0x08, 0x9c, 0x59, 0x7f, 0x24, 0x6a, 0x19, 0x4f, 0xaf, 0xcb,
  0xcb, 0x32, 0x22, 0xd0, 0xfa, 0x23, 0xd9, 0xcb, 0x63, 0xfa, 0x5b, 0x0e,
  0x6c, 0x92, 0x60, 0x33, 0x20, 0x10, 0x08, 0x0c, 0x96, 0x40, 0x1e, 0x04,
  0x7e, 0xe7, 0x6f, 0xbb, 0x3c, 0x47, 0x27, 0xdd, 0xe6, 0x37, 0x10, 0x38,
  0xb3, 0xfe, 0x48, 0x53, 0xba, 0xbc, 0x3e, 0xa6, 0xd7, 0xe5, 0x65, 0xb2,
  0xb0, 0x6e, 0x36, 0x97, 0xe5, 0xc0, 0xaa, 0x34, 0x9c, 0xa7, 0xca, 0xc3,
  0xe3, 0x72, 0xb3, 0x3c, 0x47, 0x27, 0xdd, 0xe6, 0x37, 0x10, 0x08, 0x04,
  0x06, 0xeb, 0x20, 0x0b, 0xfc, 0xce, 0xdf, 0x39, 0x0c, 0x08, 0x9c, 0x55,
  0xa7, 0xe1, 0x36, 0x9c, 0x5d, 0x96, 0x4f, 0xe9, 0x61, 0x7a, 0x19, 0x08,
  0x0c, 0x56, 0x40, 0x1d, 0x04, 0x7e, 0xe7, 0xef, 0x7c, 0x2c, 0x2f, 0x97,
  0xdd, 0xcf, 0x3a, 0x1d, 0x5e, 0xa7, 0x03, 0x81, 0x33, 0xeb, 0x8f, 0x24,
  0xbd, 0x52, 0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x81, 0xd6, 0x1f,
  0xc9, 0x5e, 0x1e, 0xd3, 0xdf, 0x72, 0x60, 0x93, 0x04, 0x9b, 0x01, 0x81,
  0x40, 0x60, 0xb0, 0x16, 0xd8, 0x20, 0xf0, 0x73, 0xbf, 0xe5, 0xed, 0x30,
  0x7b, 0x0e, 0x04, 0xce, 0xac, 0x3f, 0x12, 0xb5, 0x8c, 0xa7, 0xd7, 0xe5,
  0x65, 0x19, 0x11, 0x68, 0xfd, 0x91, 0xec, 0xe5, 0x31, 0xfd, 0x2d, 0x07,
  0x36, 0x49, 0xb0, 0x19, 0x10, 0x08, 0x04, 0x06, 0x0b, 0x81, 0x0d, 0x02,
  0xbf, 0x39, 0x3a, 0x4c, 0x7e, 0xdf, 0xa7, 0xe1, 0x36, 0x9c, 0x5d, 0x96,
  0x03, 0x81, 0xb3, 0xea, 0x34, 0xdc, 0x86, 0xb3, 0xcb, 0xf2, 0xe1, 0xbb,
  0x0d, 0x0f, 0xcb, 0xd3, 0xf3, 0xb7, 0x7b, 0x4a, 0x0f, 0xd3, 0xcb, 0x40,
  0x60, 0xb0, 0x0c, 0xba, 0xc0, 0x8f, 0x5e, 0xc6, 0x4f, 0xa7, 0xc1, 0x27,
  0x10, 0x38, 0xb3, 0xfe, 0x48, 0xd4, 0x32, 0x9e, 0x5e, 0x97, 0x97, 0x65,
  0x44, 0x60, 0x13, 0x08, 0x0c, 0x56, 0xc1, 0x17, 0xf8, 0xd1, 0xcb, 0xf8,
  0x29, 0x3a, 0x4c, 0x7e, 0xdf, 0x81, 0xc0, 0x99, 0xf5, 0x47, 0xa2, 0x96,
  0xf1, 0xf4, 0xba, 0xbc, 0x2c, 0x23, 0x02, 0x9b, 0x40, 0x60, 0xd0, 0x1a,
  0xa4, 0x10, 0x99, 0xd8, 0x03, 0x18, 0x88, 0x88, 0x73, 0x1a, 0x69, 0x02,
  0x9a, 0x49, 0xb2, 0x07, 0xc4, 0x04, 0x26, 0x22, 0x42, 0x80, 0xc5, 0x1c,
  0x84, 0xa0, 0xb6, 0x88, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x80, 0x2a,
  0x0a, 0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09, 0x03, 0x10, 0x30, 0xbf, 0xb8,
  0x6d, 0x93, 0xd8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x08, 0xa8, 0xa2, 0x20,
  0xa2, 0xd2, 0x01, 0x86, 0x92, 0x30, 0x00, 0x01, 0xf3, 0x91, 0xdb, 0xb6,
  0x90, 0x35, 0x18, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0x22, 0x80, 0x89, 0x08,
  0x81, 0x66, 0x58, 0x88, 0xcf, 0x89, 0x4a, 0x24, 0xf0, 0x43, 0x64, 0x62,
  0x0f, 0x60, 0x20, 0x22, 0xce, 0x69, 0xa4, 0x09, 0x68, 0x26, 0xc9, 0x46,
  0xc2, 0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x88, 0x00, 0x26, 0x22, 0x04,
  0x9a, 0x61, 0x21, 0x3e, 0x27, 0x2a, 0x91, 0xc0, 0x37, 0x81, 0x89, 0x88,
  0x10, 0x60, 0x31, 0x91, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x88, 0x00,
  0x26, 0x22, 0x04, 0x9a, 0x61, 0x21, 0x3e, 0x27, 0x2a, 0x91, 0xc0, 0x0f,
  0xea, 0x5a, 0xe9, 0x03, 0x32, 0xde, 0xf5, 0x86, 0xbb, 0xc6, 0xf2, 0x72,
  0x98, 0x5e, 0x46, 0x86, 0xdd, 0x64, 0x76, 0xd9, 0xf8, 0x96, 0x33, 0xd3,
  0x62, 0xd7, 0x98, 0x1d, 0x9e, 0xcf, 0x5d, 0xd2, 0x2b, 0xb5, 0x8c, 0xa7,
  0xd7, 0xe5, 0x65, 0x19, 0x91, 0x67, 0x2f, 0x8f, 0xe9, 0x6f, 0x39, 0xcf,
  0xcc, 0x7e, 0x87, 0xe9, 0x2c, 0x10, 0xcd, 0x07, 0xf2, 0xd5, 0x49, 0x28,
  0x90, 0xf1, 0xae, 0x37, 0xdc, 0x35, 0x96, 0x97, 0xc3, 0xf4, 0x32, 0x32,
  0xec, 0x26, 0xb3, 0xcb, 0xc6, 0xb7, 0x9c, 0x99, 0x16, 0xbb, 0xc6, 0xec,
  0xf0, 0x7c, 0xee, 0x9a, 0xd2, 0xe5, 0xf5, 0x31, 0xbd, 0x2e, 0x2f, 0x93,
  0x85, 0x75, 0xb3, 0xb9, 0x2c, 0xe7, 0x49, 0xc3, 0x79, 0xaa, 0x3c, 0x3c,
  0x2e, 0x37, 0xcb, 0x73, 0x74, 0xd2, 0x6d, 0x7e, 0xfb, 0xaa, 0xe4, 0x0d,
  0xc8, 0x78, 0xd7, 0x1b, 0xee, 0x1a, 0xcb, 0xcb, 0x61, 0x7a, 0x19, 0x19,
  0x76, 0x93, 0xd9, 0x65, 0xe3, 0x5b, 0xce, 0x4c, 0x8b, 0x5d, 0x63, 0x76,
  0x78, 0x3e, 0x77, 0x51, 0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x79,
  0x66, 0xf6, 0x3b, 0x4c, 0xf7, 0x15, 0xca, 0x1e, 0x90, 0xf1, 0xae, 0x37,
  0xdc, 0x35, 0x96, 0x97, 0xc3, 0xf4, 0x32, 0x32, 0xec, 0x26, 0xb3, 0xcb,
  0xc6, 0xb7, 0x9c, 0x99, 0x16, 0xbb, 0xc6, 0xec, 0xf0, 0x7c, 0xee, 0xa2,
  0x96, 0xf1, 0xf4, 0xba, 0xbc, 0x2c, 0x23, 0xf2, 0xec, 0xe5, 0x31, 0xfd,
  0x2d, 0xe7, 0x99, 0xd9, 0xef, 0x30, 0x9d, 0x05, 0xa2, 0xf9, 0x40, 0x3e,
  0x23, 0x89, 0x83, 0xe1, 0xf2, 0x9d, 0xc7, 0x17, 0x22, 0x02, 0x98, 0x88,
  0x10, 0x68, 0x86, 0x85, 0xf8, 0x9c, 0xa8, 0x44, 0x02, 0x5f, 0x9a, 0x22,
  0x4a, 0x98, 0xfc, 0x0d, 0x9b, 0x08, 0x6d, 0x18, 0x22, 0x42, 0x92, 0x36,
  0xaa, 0x28, 0x88, 0xc8, 0x54, 0xfe, 0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x85,
  0x88, 0x00, 0x26, 0x22, 0x04, 0x9a, 0x61, 0x21, 0x3e, 0x27, 0x2a, 0x91,
  0xc0, 0x97, 0xa6, 0x88, 0x12, 0x26, 0x7f, 0x05, 0xb0, 0x29, 0x02, 0x04,
  0xa4, 0x31, 0x34, 0x41, 0x20, 0x16, 0x22, 0x02, 0x26, 0xc4, 0x69, 0xd8,
  0x29, 0xa2, 0x84, 0x89, 0x8a, 0x08, 0x33, 0xb1, 0x83, 0xe1, 0xf2, 0x9d,
  0xc7, 0x17, 0x22, 0x02, 0x98, 0x88, 0x10, 0x68, 0x86, 0x85, 0xf8, 0x9c,
  0xa8, 0x44, 0x02, 0x5f, 0x9a, 0x22, 0x4a, 0x98, 0x7c, 0x16, 0x60, 0x9e,
  0x85, 0x88, 0x38, 0x87, 0x79, 0x80, 0x08, 0x91, 0x9c, 0x86, 0x9d, 0x80,
  0x89, 0xb0, 0x14, 0x36, 0x18, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0x22, 0x80,
  0x89, 0x08, 0x81, 0x66, 0x58, 0x88, 0xcf, 0x89, 0x4a, 0x24, 0xf0, 0xa5,
  0x29, 0xa2, 0x84, 0xc9, 0x67, 0x01, 0xe6, 0x59, 0x88, 0x88, 0x9d, 0x80,
  0x89, 0x30, 0x8e, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x07, 0x44, 0x7a, 0x80,
  0x49, 0x38, 0x56, 0x00, 0x93, 0xc4, 0x66, 0x20, 0x2e, 0x1f, 0xb9, 0x6d,
  0xab, 0x70, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x70, 0xa6, 0xdb, 0x2f, 0x6e,
  0xdb, 0x32, 0xb0, 0xe1, 0xf2, 0x9d, 0xc7, 0x7f, 0x22, 0x84, 0x41, 0x26,
  0xa4, 0x22, 0xc4, 0x66, 0x20, 0x2e, 0x1f, 0xb9, 0x6d, 0x9b, 0xb8, 0x86,
  0xcb, 0x77, 0x1e, 0x3f, 0x02, 0xac, 0x8d, 0x2a, 0x0a, 0x22, 0x2a, 0x1d,
  0x60, 0xf0, 0x91, 0xdb, 0x36, 0x8c, 0x6a, 0xb8, 0x7c, 0xe7, 0xf1, 0x23,
  0x00, 0x6b, 0x39, 0x2a, 0x8a, 0x88, 0x66, 0xf2, 0x8b, 0xdb, 0x36, 0x0a,
  0x6e, 0xb8, 0x7c, 0xe7, 0xf1, 0x25, 0x80, 0x79, 0x16, 0x82, 0x63, 0x9e,
  0x92, 0xa8, 0x88, 0x65, 0x26, 0x22, 0xc7, 0x2f, 0x6e, 0xdb, 0x3a, 0xa8,
  0xe1, 0xf2, 0x9d, 0xc7, 0x97, 0x00, 0xe6, 0x59, 0x08, 0x30, 0x02, 0x06,
  0xbf, 0xb8, 0x6d, 0xbb, 0x90, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xa2,
  0x09, 0x01, 0x22, 0xcc, 0x2f, 0x6e, 0xdb, 0x3c, 0xaa, 0xe1, 0xf2, 0x9d,
  0xc7, 0x9f, 0x88, 0x6b, 0xa2, 0x22, 0xa2, 0x74, 0x80, 0xc1, 0x2f, 0x6e,
  0xdb, 0x40, 0xac, 0xe1, 0xf2, 0x9d, 0xc7, 0x9f, 0x88, 0x6b, 0xa2, 0x22,
  0x82, 0x9d, 0x9c, 0x88, 0xf0, 0x8b, 0xdb, 0xb6, 0x0f, 0x30, 0x18, 0x2e,
  0xdf, 0x79, 0xfc, 0x29, 0x02, 0x04, 0x62, 0x05, 0x30, 0x5f, 0x9a, 0x22,
  0x4a, 0x98, 0xfc, 0x15, 0xc0, 0x52, 0x00, 0x5b, 0x1c, 0x60, 0x30, 0x8b,
  0x67, 0xb8, 0x7c, 0xe7, 0xf1, 0xa9, 0x06, 0x88, 0x30, 0xbf, 0xb8, 0x6d,
  0xd3, 0xd8, 0x86, 0xcb, 0x77, 0x1e, 0xdf, 0x72, 0xa2, 0x65, 0x58, 0x01,
  0xac, 0x43, 0x22, 0x42, 0x98, 0x10, 0xa7, 0xf1, 0x8b, 0xdb, 0xb6, 0x0d,
  0x6c, 0xb8, 0x7c, 0xe7, 0xf1, 0x2d, 0x27, 0x5a, 0x86, 0x15, 0xc0, 0xd0,
  0x08, 0x31, 0x90, 0xc6, 0x2f, 0x6e, 0xdb, 0x18, 0xa2, 0x65, 0xa9, 0x18,
  0xdf, 0x58, 0x9c, 0x00, 0x58, 0x7e, 0x61, 0x72, 0x22, 0x09, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb8, 0x59, 0x74, 0xe5, 0x9b, 0x25, 0x7f, 0x0a,
  0x1f, 0xb3, 0x83, 0x05, 0xd0, 0x1e, 0xd8, 0x32, 0x44, 0x58, 0x49, 0x4c,
  0xe0, 0x25, 0x00, 0x00, 0x63, 0x00, 0x06, 0x00, 0x78, 0x09, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xc8, 0x25, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x6f, 0x09, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x1c, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xe4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x72, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x91, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x39, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0x20, 0x00, 0x12, 0x60, 0xd9, 0x60,
  0x08, 0x02, 0xb0, 0x00, 0xd5, 0x06, 0xf0, 0x18, 0xfe, 0xff, 0xff, 0xff,
  0x7f, 0x00, 0x24, 0x82, 0x1c, 0xd2, 0x61, 0x1e, 0xc2, 0x41, 0x1c, 0xd8,
  0xa1, 0x1c, 0xda, 0x80, 0x1e, 0xc2, 0x21, 0x1d, 0xd8, 0xa1, 0x0d, 0xc6,
  0x21, 0x1c, 0xd8, 0x81, 0x1d, 0xe6, 0x01, 0x30, 0x87, 0x70, 0x60, 0x87,
  0x79, 0x28, 0x07, 0x80, 0x60, 0x87, 0x72, 0x98, 0x87, 0x79, 0x68, 0x03,
  0x78, 0x90, 0x87, 0x72, 0x18, 0x87, 0x74, 0x98, 0x87, 0x72, 0x68, 0x03,
  0x73, 0x80, 0x87, 0x76, 0x08, 0x07, 0x72, 0x00, 0xcc, 0x21, 0x1c, 0xd8,
  0x61, 0x1e, 0xca, 0x01, 0x20, 0xdc, 0xe1, 0x1d, 0xda, 0xc0, 0x1c, 0xe4,
  0x21, 0x1c, 0xda, 0xa1, 0x1c, 0xda, 0x00, 0x1e, 0xde, 0x21, 0x1d, 0xdc,
  0x81, 0x1e, 0xca, 0x41, 0x1e, 0xda, 0xa0, 0x1c, 0xd8, 0x21, 0x1d, 0xda,
  0x01, 0x30, 0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x70, 0x87,
  0x77, 0x68, 0x83, 0x74, 0x70, 0x07, 0x73, 0x98, 0x87, 0x36, 0x30, 0x07,
  0x78, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0xc0, 0x1c, 0xc2,
  0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xdc,
  0x21, 0x1c, 0xdc, 0x61, 0x1e, 0xda, 0xc0, 0x1c, 0xe0, 0xa1, 0x0d, 0xda,
  0x21, 0x1c, 0xe8, 0x01, 0x1d, 0x00, 0x73, 0x08, 0x07, 0x76, 0x98, 0x87,
  0x72, 0x00, 0x06, 0x77, 0x78, 0x87, 0x36, 0x90, 0x87, 0x72, 0x08, 0x07,
  0x76, 0x48, 0x87, 0x73, 0x70, 0x87, 0x36, 0x98, 0x07, 0x7a, 0x08, 0x87,
  0x71, 0x58, 0x07, 0x80, 0x98, 0x07, 0x7a, 0x08, 0x87, 0x71, 0x58, 0x87,
  0x36, 0x80, 0x07, 0x79, 0x78, 0x07, 0x7a, 0x28, 0x87, 0x71, 0xa0, 0x87,
  0x77, 0x90, 0x87, 0x36, 0x10, 0x87, 0x7a, 0x30, 0x07, 0x73, 0x28, 0x07,
  0x79, 0x68, 0x83, 0x79, 0x48, 0x07, 0x7d, 0x28, 0x07, 0x00, 0x0e, 0x00,
  0xa2, 0x1e, 0xdc, 0x61, 0x1e, 0xc2, 0xc1, 0x1c, 0xca, 0xa1, 0x0d, 0xcc,
  0x01, 0x1e, 0xda, 0xa0, 0x1d, 0xc2, 0x81, 0x1e, 0xd0, 0x01, 0x30, 0x87,
  0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0xa8, 0x87, 0x79, 0x28, 0x87,
  0x36, 0x98, 0x87, 0x77, 0x30, 0x07, 0x7a, 0x68, 0x03, 0x73, 0x60, 0x87,
  0x77, 0x08, 0x07, 0x7a, 0x00, 0xcc, 0x21, 0x1c, 0xd8, 0x61, 0x1e, 0xca,
  0x01, 0xd8, 0x60, 0x10, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x12, 0x50,
  0x6d, 0x30, 0x8a, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa0, 0x36,
  0x10, 0xc6, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x80, 0xb4, 0x81, 0x38, 0x20,
  0xe0, 0x0c, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x13, 0x86, 0x40, 0x18, 0x26, 0x04, 0xc4, 0x84, 0xa0, 0x98, 0x10, 0x18,
  0x13, 0x82, 0x03, 0x00, 0x89, 0x20, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00,
  0x32, 0x22, 0xc8, 0x09, 0x20, 0x64, 0x85, 0x04, 0x93, 0x23, 0xa4, 0x84,
  0x04, 0x93, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8e, 0x8c,
  0x0b, 0x84, 0xe4, 0x4c, 0x10, 0xbc, 0xc3, 0x1c, 0x01, 0x18, 0x9c, 0x19,
  0x48, 0x53, 0x44, 0x09, 0x93, 0xbf, 0x02, 0xd8, 0x14, 0x01, 0x02, 0xd2,
  0x18, 0x9a, 0x20, 0x10, 0x0b, 0x11, 0x01, 0x13, 0xe2, 0x34, 0xec, 0x14,
  0x51, 0xc2, 0x44, 0x45, 0x04, 0x0a, 0x00, 0x14, 0x98, 0x01, 0x18, 0x46,
  0x20, 0x86, 0x99, 0xc8, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e,
  0xdc, 0x40, 0x16, 0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e,
  0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c,
  0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c,
  0xe8, 0x81, 0x0d, 0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x05,
  0x04, 0x2a, 0xdc, 0x25, 0x4d, 0x11, 0x25, 0x4c, 0xfe, 0x0a, 0x60, 0x6d,
  0x04, 0x08, 0x84, 0x49, 0x48, 0x87, 0xd8, 0x14, 0x0e, 0x42, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x42, 0x83, 0x71, 0x60, 0x87, 0x70,
  0x98, 0x87, 0x79, 0x70, 0x83, 0x59, 0xa0, 0x07, 0x79, 0xa8, 0x87, 0x71,
  0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x20, 0x07, 0x51, 0xa8, 0x07, 0x73,
  0x30, 0x87, 0x72, 0x90, 0x07, 0x3e, 0x90, 0x85, 0x70, 0xc8, 0x07, 0x5a,
  0x90, 0x87, 0x70, 0x18, 0x87, 0x72, 0x68, 0x85, 0x72, 0x98, 0x07, 0x74,
  0x48, 0x05, 0x77, 0x30, 0x87, 0x77, 0xf0, 0x03, 0x14, 0x1c, 0x08, 0x71,
  0x98, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x1b, 0x36, 0x11, 0xda, 0x30, 0x44,
  0x84, 0x24, 0x6d, 0x54, 0x51, 0x10, 0x11, 0x0a, 0x00, 0xa4, 0x98, 0x29,
  0x0c, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1,
  0x1c, 0xf0, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81,
  0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0xc1, 0x0f, 0xf4, 0x40,
  0x0f, 0xda, 0x21, 0x1d, 0xe0, 0x61, 0x1e, 0x7e, 0x81, 0x1e, 0xf2, 0x01,
  0x1e, 0xca, 0x01, 0x05, 0x80, 0x99, 0xac, 0x71, 0x60, 0x87, 0x70, 0x98,
  0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90,
  0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08,
  0x07, 0x7a, 0xf0, 0x03, 0x24, 0x0c, 0x18, 0xd4, 0xb8, 0x49, 0x9a, 0x22,
  0x4a, 0x98, 0x7c, 0x16, 0x60, 0x9e, 0x85, 0x88, 0xd8, 0x09, 0x98, 0x08,
  0x14, 0x00, 0xe8, 0x71, 0x9d, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x2c, 0xc0,
  0x3c, 0x0b, 0x11, 0x71, 0x0e, 0xf3, 0x00, 0x11, 0x22, 0x39, 0x0d, 0x3b,
  0x01, 0x13, 0x81, 0x02, 0x00, 0x45, 0x66, 0x6a, 0x83, 0x71, 0x60, 0x87,
  0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87,
  0x7a, 0x90, 0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87,
  0x71, 0xa0, 0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87,
  0x70, 0xa0, 0x07, 0x36, 0x00, 0x03, 0x3a, 0xf0, 0x03, 0x30, 0xf0, 0x03,
  0x3d, 0xd0, 0x83, 0x76, 0x48, 0x07, 0x78, 0x98, 0x87, 0x5f, 0xa0, 0x87,
  0x7c, 0x80, 0x87, 0x72, 0x40, 0x01, 0x60, 0x26, 0x31, 0x18, 0x07, 0x76,
  0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a,
  0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72,
  0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77,
  0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00, 0x03, 0x3f,
  0x40, 0x02, 0x61, 0x42, 0x94, 0x11, 0x80, 0x12, 0x58, 0xe8, 0x32, 0x47,
  0x80, 0x50, 0xc6, 0x0c, 0x00, 0x8c, 0x26, 0x01, 0x36, 0xc4, 0x19, 0x46,
  0x18, 0x86, 0x24, 0x20, 0x9c, 0x25, 0x2c, 0x80, 0x24, 0xf9, 0x0c, 0x30,
  0x45, 0xc8, 0xe5, 0x17, 0x8b, 0x03, 0x4c, 0x3e, 0xee, 0xe3, 0x28, 0xf8,
  0x9c, 0x14, 0x22, 0x13, 0x7b, 0x00, 0x03, 0x11, 0x71, 0x4e, 0x23, 0x4d,
  0x40, 0x33, 0x49, 0xe8, 0xf0, 0x78, 0x3c, 0x04, 0x10, 0x00, 0x40, 0xa1,
  0x61, 0x04, 0x61, 0x38, 0x48, 0x9a, 0x22, 0x4a, 0x98, 0xfc, 0x0e, 0x6b,
  0x00, 0x06, 0x11, 0xb8, 0x0d, 0x11, 0x20, 0x0f, 0x60, 0x74, 0x42, 0x50,
  0xa3, 0x80, 0x44, 0xa5, 0x43, 0x4c, 0x60, 0x22, 0x22, 0x04, 0x58, 0x50,
  0x00, 0xa0, 0xd3, 0x45, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xaf, 0x00, 0x96,
  0x02, 0xd8, 0xe2, 0x00, 0x03, 0x12, 0x00, 0x03, 0x4a, 0x1d, 0x1b, 0x48,
  0x53, 0x44, 0x09, 0x93, 0xbf, 0x51, 0xc8, 0x32, 0x89, 0x4d, 0x1b, 0x21,
  0x40, 0x63, 0x2c, 0x84, 0xd8, 0x4c, 0x44, 0x24, 0x11, 0xc2, 0x84, 0x38,
  0x8d, 0x36, 0x4d, 0x11, 0x12, 0x50, 0x13, 0x21, 0xa1, 0x60, 0x44, 0xab,
  0x32, 0x58, 0x54, 0x2c, 0x6a, 0x1d, 0x35, 0x5c, 0xfe, 0x84, 0x3d, 0x84,
  0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4, 0xe4, 0x17, 0xb7, 0x8d, 0x88, 0xc1,
  0x60, 0x30, 0xb8, 0x67, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81,
  0x66, 0x58, 0x08, 0x14, 0x68, 0x0a, 0xf1, 0x02, 0xc0, 0x00, 0x14, 0x3b,
  0x6a, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89,
  0xc9, 0x47, 0x6e, 0x1b, 0x11, 0x00, 0x00, 0x00, 0x50, 0x88, 0x19, 0x00,
  0x06, 0x20, 0xda, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a,
  0x48, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0xa3, 0x02, 0x00, 0x00, 0x00, 0x00,
  0xe5, 0xb0, 0x01, 0x60, 0x00, 0x40, 0x06, 0x40, 0xb7, 0x9b, 0x86, 0xcb,
  0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x95, 0x90, 0x56, 0x62, 0xf2, 0x8b, 0xdb,
  0x46, 0xc5, 0x60, 0x30, 0x18, 0x00, 0x0a, 0x93, 0x03, 0xc0, 0x60, 0x83,
  0xc1, 0x60, 0x00, 0x00, 0x00, 0x06, 0xa4, 0x2b, 0xc8, 0x00, 0x30, 0x18,
  0x0c, 0x06, 0x83, 0x01, 0xf1, 0xca, 0x30, 0x00, 0x0c, 0xc8, 0x57, 0x8a,
  0x01, 0x60, 0x30, 0x18, 0x10, 0xb0, 0x08, 0x03, 0x00, 0x09, 0x8b, 0x00,
  0x00, 0x10, 0xb1, 0x0c, 0x03, 0x40, 0x86, 0x8c, 0x65, 0x00, 0x00, 0x32,
  0x84, 0x2c, 0x52, 0x0e, 0x00, 0x83, 0x0d, 0x06, 0x83, 0x01, 0x00, 0x00,
  0x18, 0x0c, 0x06, 0x83, 0xc1, 0x60, 0x40, 0xca, 0xa2, 0xe4, 0x00, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x2c, 0x91, 0x05, 0x00, 0x03,
  0x00, 0x00, 0x00, 0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x83, 0x81, 0x8a,
  0x9c, 0x65, 0xb1, 0x00, 0x60, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0c, 0x32,
  0x04, 0x2d, 0x03, 0x0c, 0x10, 0x22, 0x69, 0x19, 0x60, 0x80, 0x12, 0x51,
  0xcb, 0x00, 0x03, 0x9c, 0xc8, 0x5a, 0x06, 0x18, 0x40, 0x41, 0xd8, 0x32,
  0xc0, 0x00, 0x0d, 0xd2, 0x96, 0x01, 0x06, 0x88, 0x10, 0xb7, 0x0c, 0x30,
  0x00, 0x82, 0xbc, 0x65, 0x80, 0x01, 0x28, 0x04, 0x2e, 0x03, 0x0c, 0xf0,
  0x20, 0x71, 0x19, 0x60, 0x80, 0x00, 0x91, 0xcb, 0x00, 0x03, 0x14, 0xc8,
  0x3c, 0x10, 0x30, 0x47, 0x10, 0xcc, 0x11, 0x80, 0x02, 0x0d, 0x08, 0x30,
  0x05, 0x40, 0x23, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0xc4, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x06, 0x03, 0x00, 0x66, 0x31,
  0x00, 0x60, 0x22, 0x03, 0x00, 0xa6, 0x32, 0x00, 0x60, 0x2a, 0x03, 0x00,
  0x66, 0x33, 0x00, 0x60, 0x36, 0x03, 0x00, 0xe6, 0x33, 0x00, 0x60, 0x46,
  0x03, 0x00, 0x26, 0x35, 0x00, 0x60, 0x52, 0x03, 0x00, 0x26, 0x35, 0x00,
  0x60, 0x72, 0x42, 0x2a, 0x08, 0x18, 0x0e, 0x00, 0x80, 0xe5, 0x00, 0x00,
  0x78, 0x0e, 0x00, 0x60, 0xc8, 0xd3, 0x06, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x89, 0x03, 0x20, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0xd0, 0x01, 0x10,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xee,
  0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x7a, 0x00, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x1e, 0x3e, 0x00, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x1f, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x14, 0x80, 0x00, 0x18, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x23, 0x0a, 0x40, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x21, 0x05,
  0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x98, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x4c, 0x01, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0xa8, 0x00, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x55, 0x00, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x2b, 0x00, 0x01, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xc7, 0x15, 0x80,
  0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x03,
  0x0b, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
  0xe4, 0x91, 0x05, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0xd0, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0x6c, 0x01, 0x08, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0xb8, 0x00, 0x04, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x5d, 0x00, 0x02,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x2f,
  0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0xc7, 0x17, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x03, 0x0e, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x11, 0x07, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x90, 0x03, 0x10, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xcc, 0x01, 0x08, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x40, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x1c, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02, 0x94, 0x40, 0x19, 0x94,
  0x42, 0x31, 0x8c, 0x00, 0x14, 0x48, 0x21, 0x14, 0x46, 0x01, 0x15, 0x41,
  0x59, 0x94, 0x44, 0x39, 0x14, 0x44, 0x69, 0x14, 0xa4, 0x40, 0xc1, 0x06,
  0x14, 0x60, 0x40, 0x61, 0x06, 0x14, 0x68, 0x40, 0xa1, 0x14, 0x58, 0x01,
  0x0a, 0x14, 0xa2, 0x40, 0x51, 0x90, 0x7a, 0x04, 0xa0, 0x40, 0x01, 0x13,
  0x28, 0x3d, 0x02, 0x40, 0x9c, 0x11, 0x00, 0x0a, 0xcd, 0x00, 0x10, 0x69,
  0x06, 0x80, 0x4a, 0x33, 0x00, 0x44, 0x99, 0x01, 0xa0, 0xc6, 0x0c, 0x00,
  0x21, 0x66, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x43, 0x01, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c,
  0x24, 0xc6, 0x45, 0x66, 0x43, 0x10, 0x4c, 0x10, 0x00, 0x36, 0x98, 0x20,
  0x00, 0x6d, 0xb0, 0x41, 0x18, 0x88, 0x09, 0x02, 0xe0, 0x06, 0x1b, 0x84,
  0xc1, 0xe0, 0xc0, 0x96, 0x26, 0x36, 0x41, 0x00, 0xde, 0x60, 0xc3, 0x80,
  0x24, 0xc4, 0x04, 0x01, 0x80, 0x83, 0x09, 0x82, 0x00, 0xf0, 0x38, 0xfb,
  0x0a, 0x1b, 0x1b, 0x2b, 0x63, 0x9b, 0x20, 0x00, 0x71, 0x30, 0x41, 0x00,
  0xe4, 0x60, 0x83, 0xb0, 0x3c, 0x1b, 0x92, 0x85, 0x69, 0x96, 0x65, 0x70,
  0x16, 0x68, 0x82, 0x90, 0x08, 0x54, 0xce, 0xbe, 0xda, 0xca, 0xe6, 0xd0,
  0x92, 0xdc, 0xcc, 0xde, 0x26, 0x08, 0xc0, 0x1c, 0x4c, 0x10, 0x00, 0x3a,
  0xd8, 0x20, 0x0c, 0xd5, 0x86, 0x64, 0x90, 0xa6, 0x65, 0x18, 0xa8, 0xc5,
  0x9a, 0x20, 0x00, 0x75, 0x30, 0x41, 0x58, 0x06, 0x26, 0x67, 0x5f, 0x69,
  0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x13, 0x04, 0xc0, 0x0e, 0x36, 0x24,
  0x58, 0xa6, 0x2d, 0xd8, 0xb0, 0x2d, 0xc0, 0x04, 0x61, 0x21, 0xc8, 0x9c,
  0x7d, 0x85, 0xd1, 0xd1, 0xc9, 0xa5, 0x89, 0xd5, 0xd1, 0x95, 0xcd, 0x6d,
  0x48, 0x88, 0xce, 0x5b, 0x88, 0x61, 0x5b, 0x80, 0x09, 0x82, 0x53, 0x30,
  0xa1, 0x2b, 0xc3, 0x9b, 0x42, 0x0b, 0x23, 0x7b, 0xbb, 0x9b, 0x20, 0x00,
  0x77, 0xb0, 0x41, 0x58, 0xc4, 0x60, 0x43, 0xf2, 0x80, 0x41, 0x18, 0x2c,
  0xcf, 0x80, 0x2d, 0x63, 0x30, 0x41, 0x70, 0x0c, 0x1e, 0x74, 0x65, 0x78,
  0x53, 0x53, 0x41, 0x4f, 0x1b, 0x12, 0xa3, 0x0c, 0xcc, 0x60, 0x31, 0x06,
  0x6c, 0x19, 0x83, 0x09, 0x42, 0x95, 0xd0, 0x39, 0xfb, 0x62, 0x7b, 0x1b,
  0x0b, 0x63, 0xa3, 0x2a, 0xc3, 0xa3, 0xab, 0x93, 0x2b, 0xdb, 0x90, 0x24,
  0x68, 0x90, 0x06, 0x4b, 0x32, 0x60, 0xcb, 0x18, 0x4c, 0x10, 0x00, 0x3c,
  0x98, 0x20, 0x54, 0x0a, 0x9b, 0xb3, 0x2f, 0xb6, 0xb7, 0xb1, 0x30, 0x36,
  0xa7, 0x37, 0xb9, 0xb6, 0x30, 0xb6, 0x0d, 0xc9, 0x1a, 0xb0, 0x41, 0x1b,
  0x2c, 0x6b, 0x30, 0x60, 0xcb, 0x18, 0x4c, 0x10, 0x80, 0x3c, 0x98, 0x20,
  0x54, 0x0b, 0x0f, 0xb7, 0x37, 0xb9, 0xb6, 0x30, 0xb6, 0xb9, 0x09, 0x02,
  0xa0, 0x07, 0x1b, 0x92, 0x37, 0x80, 0x83, 0x38, 0x58, 0xe4, 0x60, 0xc0,
  0x96, 0x31, 0xd8, 0x90, 0x44, 0x17, 0xf7, 0x91, 0xc1, 0x19, 0xa8, 0x81,
  0x1b, 0xcc, 0xc1, 0x04, 0xc1, 0x08, 0xe8, 0x9c, 0x7d, 0xcd, 0x8d, 0xc9,
  0x95, 0x95, 0xb9, 0x3d, 0xd5, 0xd1, 0xc1, 0xd5, 0xd1, 0x4d, 0x10, 0xd2,
  0xe1, 0x14, 0x36, 0x2c, 0x4b, 0x1d, 0xd8, 0xc1, 0x82, 0x0d, 0xd8, 0x1d,
  0xdc, 0xc1, 0x1d, 0x8c, 0xc1, 0x86, 0x00, 0x0f, 0x26, 0x08, 0x62, 0xd0,
  0x50, 0x42, 0x4a, 0xa3, 0x9b, 0x42, 0x0b, 0x23, 0x2b, 0x93, 0x1b, 0x7a,
  0x73, 0x9b, 0xa3, 0x0b, 0x73, 0xa3, 0x9b, 0x9b, 0x20, 0x00, 0x7b, 0xb0,
  0x01, 0x59, 0xf4, 0x60, 0x0f, 0x96, 0x65, 0xe0, 0x03, 0x60, 0x82, 0x60,
  0x06, 0x0e, 0x05, 0xb1, 0x98, 0x09, 0x02, 0xc0, 0x07, 0x1b, 0x90, 0xc1,
  0x0f, 0xfe, 0x60, 0x19, 0x06, 0x50, 0x00, 0x26, 0x08, 0x68, 0xf0, 0x10,
  0x69, 0x0a, 0xa3, 0x2b, 0x93, 0x4b, 0x0b, 0x63, 0xdb, 0x80, 0x60, 0xa2,
  0x30, 0x0a, 0x0b, 0x31, 0x3c, 0xc0, 0x86, 0xa1, 0x0f, 0x42, 0x81, 0x14,
  0x26, 0x08, 0xd0, 0x41, 0xe2, 0xec, 0x6b, 0x0e, 0x66, 0x03, 0xb2, 0x98,
  0xc2, 0x29, 0x2c, 0xcb, 0xb0, 0x00, 0x13, 0x04, 0x09, 0x61, 0x33, 0x87,
  0x16, 0x46, 0xf6, 0x76, 0x37, 0x15, 0xd6, 0x06, 0xc7, 0x56, 0x26, 0xb7,
  0x01, 0x19, 0x52, 0x41, 0x15, 0x96, 0x61, 0x18, 0x80, 0x0d, 0x02, 0x2a,
  0xac, 0xc2, 0x06, 0x82, 0x0e, 0xf2, 0xa0, 0x14, 0x58, 0x61, 0x82, 0x40,
  0x06, 0xaa, 0xc0, 0x66, 0x2c, 0xac, 0xad, 0x4c, 0x2e, 0x8c, 0xea, 0xed,
  0xea, 0x4d, 0x8e, 0x8d, 0x6c, 0xc3, 0xf0, 0x3c, 0xc3, 0x06, 0x24, 0x79,
  0x05, 0x0c, 0x16, 0x88, 0x65, 0x0d, 0xc4, 0x80, 0xd3, 0xdd, 0x9b, 0x1c,
  0x1b, 0xd9, 0x50, 0x58, 0x5b, 0x99, 0x5c, 0x18, 0xd4, 0xdb, 0x5c, 0x1a,
  0x5d, 0xda, 0x9b, 0xdb, 0x04, 0x01, 0xe8, 0x83, 0x0d, 0x46, 0x22, 0x0b,
  0xc4, 0x2c, 0xac, 0x81, 0x18, 0xf0, 0x80, 0x0b, 0x23, 0x23, 0x4b, 0x73,
  0x3b, 0x9b, 0x20, 0x00, 0x7e, 0xb0, 0xc1, 0x48, 0x6a, 0x81, 0xb0, 0x85,
  0x35, 0x30, 0xa8, 0xc8, 0x95, 0xcd, 0xbd, 0xb1, 0xd5, 0xd1, 0xa5, 0xbd,
  0xb9, 0x4d, 0x10, 0x80, 0x3f, 0xd8, 0x60, 0x24, 0xb8, 0x40, 0xe4, 0xc2,
  0x1a, 0x88, 0xc1, 0x86, 0x02, 0x14, 0x62, 0x81, 0x16, 0x6e, 0x41, 0x17,
  0x26, 0x08, 0x88, 0x2b, 0x30, 0x40, 0xdb, 0x40, 0x24, 0xbd, 0x40, 0x2c,
  0x1b, 0x84, 0xca, 0x17, 0x26, 0x08, 0x4d, 0x2b, 0x4c, 0x10, 0x00, 0x50,
  0xd8, 0x60, 0x24, 0xbd, 0x40, 0x2c, 0x6b, 0x20, 0x06, 0x24, 0xda, 0xd2,
  0xe0, 0xe6, 0x36, 0x10, 0xc9, 0x38, 0x10, 0xce, 0x86, 0x21, 0x1c, 0xc4,
  0x81, 0x1c, 0x26, 0x08, 0x14, 0x2b, 0x4c, 0x10, 0xc2, 0x20, 0x15, 0xc8,
  0x4c, 0xd5, 0xb9, 0x11, 0xa5, 0xc9, 0x95, 0x8d, 0xd1, 0xa5, 0xbd, 0xb9,
  0x6d, 0x30, 0x12, 0x74, 0x20, 0x96, 0x35, 0x10, 0x03, 0x22, 0x53, 0x75,
  0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x1b, 0x8c, 0x44, 0x1d, 0x08, 0x67,
  0x0d, 0xc4, 0x80, 0x4c, 0x50, 0x9b, 0x58, 0x5a, 0x99, 0x1b, 0xdd, 0xd0,
  0x1b, 0xdb, 0x9b, 0xdc, 0x06, 0x23, 0x61, 0x07, 0xa2, 0x5a, 0x03, 0x31,
  0xe0, 0x33, 0x85, 0x16, 0x46, 0xf6, 0x76, 0x47, 0x55, 0x86, 0x57, 0xc6,
  0x36, 0x95, 0xa6, 0x57, 0x36, 0x41, 0x00, 0x42, 0x61, 0x83, 0x91, 0xb8,
  0x03, 0xf1, 0x0e, 0x6b, 0x20, 0x06, 0x6c, 0x9a, 0xde, 0xc8, 0xca, 0xd8,
  0xa8, 0xde, 0xa6, 0xd0, 0xc2, 0xc8, 0xde, 0xee, 0x36, 0x20, 0x49, 0x3c,
  0x60, 0xb0, 0x40, 0xcc, 0xc2, 0x1a, 0x88, 0x01, 0x99, 0xa4, 0x39, 0xa9,
  0x32, 0x33, 0xb6, 0xb2, 0x31, 0xba, 0xb4, 0x37, 0xb7, 0x09, 0x02, 0x20,
  0x0a, 0x1b, 0x8c, 0x64, 0x1e, 0x08, 0x7a, 0x58, 0x03, 0x83, 0x4d, 0xd5,
  0x5c, 0xd9, 0x14, 0x5a, 0x18, 0xd9, 0xdb, 0x9d, 0x54, 0x58, 0xde, 0xdc,
  0x04, 0x01, 0x18, 0x85, 0x0d, 0x46, 0x62, 0x0f, 0xc4, 0x3d, 0xac, 0x81,
  0xb1, 0x01, 0xe1, 0x83, 0x74, 0x58, 0x87, 0x76, 0x80, 0x07, 0x79, 0xa8,
  0x07, 0x7c, 0x98, 0x20, 0x94, 0xc1, 0x2a, 0x30, 0x39, 0xfb, 0x22, 0xcb,
  0x73, 0x0b, 0x6b, 0x4b, 0x1b, 0xdb, 0x40, 0x24, 0xfb, 0x40, 0x2c, 0x1b,
  0x04, 0x50, 0xe0, 0x87, 0x0d, 0xcd, 0xe2, 0x0a, 0xbb, 0xc0, 0x0b, 0xbf,
  0x00, 0x0e, 0xe5, 0x60, 0x0e, 0xe5, 0x70, 0x0e, 0xf9, 0xa0, 0x0f, 0xfd,
  0x30, 0x41, 0x70, 0x03, 0x68, 0x03, 0xb0, 0x61, 0x18, 0x40, 0x02, 0x24,
  0x36, 0x0c, 0x18, 0x48, 0x80, 0xc4, 0x86, 0x61, 0x01, 0x09, 0x90, 0xd8,
  0x30, 0x84, 0x84, 0x48, 0x8c, 0xc4, 0x86, 0x61, 0xf8, 0x07, 0x92, 0x20,
  0x30, 0x41, 0x50, 0x07, 0x53, 0xd8, 0x20, 0x2c, 0x27, 0xb1, 0xa1, 0x00,
  0x4c, 0x02, 0x68, 0x05, 0x94, 0x60, 0x28, 0x04, 0xfc, 0x20, 0xa5, 0xd1,
  0x01, 0x01, 0x65, 0x05, 0x61, 0x55, 0x49, 0x85, 0xe5, 0x41, 0x85, 0xe5,
  0xb1, 0xbd, 0x85, 0x91, 0x01, 0x01, 0x55, 0x09, 0xd5, 0xa5, 0xb1, 0xd1,
  0x25, 0xb9, 0x51, 0xc9, 0xa5, 0x85, 0xb9, 0x9d, 0xb1, 0x95, 0x25, 0xb9,
  0xd1, 0x95, 0xc9, 0xcd, 0x95, 0x8d, 0xd1, 0xa5, 0xbd, 0xb9, 0x05, 0xd1,
  0xd1, 0xc9, 0xa5, 0x89, 0xd5, 0xd1, 0x95, 0xcd, 0x01, 0x01, 0x01, 0x69,
  0x4d, 0x10, 0x00, 0x52, 0xd8, 0x10, 0x2c, 0x1b, 0x90, 0x37, 0x58, 0x89,
  0xe4, 0x0d, 0xd6, 0xe0, 0x0d, 0x0c, 0x96, 0xd8, 0x50, 0xfc, 0x83, 0x4a,
  0x00, 0x40, 0x4b, 0xb0, 0x30, 0x63, 0x7b, 0x0b, 0xa3, 0xe3, 0xf3, 0xd6,
  0xe6, 0x96, 0x06, 0xf7, 0x46, 0x57, 0xe6, 0x46, 0x07, 0x32, 0x86, 0x16,
  0x26, 0xc7, 0x68, 0x2a, 0xad, 0x0d, 0x8e, 0xad, 0x0c, 0x64, 0xe8, 0x65,
  0x68, 0x65, 0x05, 0x84, 0x4a, 0x28, 0x28, 0x68, 0x43, 0x10, 0x13, 0x13,
  0x04, 0x75, 0x28, 0x85, 0x0d, 0x03, 0x4c, 0xc8, 0xc4, 0x4c, 0x6c, 0x18,
  0x5e, 0x82, 0x26, 0x66, 0x62, 0xc3, 0x50, 0x13, 0x35, 0x31, 0x13, 0x24,
  0xc4, 0xde, 0xde, 0xd8, 0x36, 0x0c, 0x37, 0x41, 0x13, 0x33, 0xb1, 0x61,
  0xc0, 0x09, 0x9c, 0x98, 0x89, 0x0d, 0xc2, 0x82, 0x55, 0x61, 0x63, 0xb3,
  0x6b, 0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x04, 0x55, 0xc8,
  0xf0, 0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x44,
  0x13, 0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x81,
  0x51, 0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9,
  0x8d, 0xac, 0x8c, 0x6d, 0x4a, 0x90, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b,
  0x9b, 0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0xb0, 0x42, 0x25,
  0x32, 0x3c, 0x17, 0xba, 0x3c, 0xb8, 0xb2, 0x20, 0x37, 0xb7, 0x37, 0xba,
  0x30, 0xba, 0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x42, 0x3f, 0x90, 0x44, 0x1d,
  0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37,
  0xba, 0xb9, 0x29, 0x02, 0x4a, 0xb4, 0x04, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x74, 0x60, 0x07,
  0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8, 0x07, 0x79, 0x18, 0x87,
  0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90, 0x87, 0x74, 0x10, 0x87,
  0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x55, 0x01, 0x00, 0x00, 0x05, 0x11, 0x0a, 0x81, 0x1f, 0x32, 0x4d, 0x07,
  0x02, 0xb3, 0x41, 0x6c, 0x55, 0x1a, 0xce, 0x43, 0xc3, 0x79, 0xf6, 0x3b,
  0x4c, 0x06, 0x02, 0xab, 0xc2, 0x7a, 0x9a, 0x4d, 0x4f, 0xba, 0xa9, 0xf2,
  0x74, 0xd8, 0x7d, 0x66, 0x97, 0x93, 0x6e, 0x7a, 0x59, 0x3e, 0x2f, 0x8f,
  0xe9, 0xe9, 0xb7, 0x3b, 0x48, 0xa7, 0xcb, 0xd3, 0xe2, 0x3a, 0xbd, 0x3c,
  0x07, 0x02, 0x81, 0xda, 0x02, 0x78, 0x83, 0xc0, 0xef, 0xfc, 0x0d, 0x8f,
  0xc7, 0x65, 0x36, 0x10, 0x38, 0xab, 0x4a, 0xc3, 0x79, 0xba, 0x3c, 0x3c,
  0x4e, 0xbb, 0xcf, 0xc1, 0xf1, 0xb8, 0xcc, 0x2e, 0xcb, 0xc3, 0xf4, 0xf4,
  0xdb, 0x3d, 0xa5, 0xcb, 0xeb, 0x63, 0x7a, 0x5d, 0x5e, 0x06, 0x02, 0x83,
  0x45, 0x60, 0x06, 0x81, 0xdf, 0xf9, 0x1b, 0xa6, 0xd3, 0xe5, 0x69, 0x71,
  0x9d, 0x5e, 0x9e, 0x03, 0x81, 0xb3, 0xaa, 0x30, 0x4f, 0x2f, 0x07, 0xc9,
  0x64, 0x79, 0x79, 0x3e, 0x17, 0xd6, 0xcd, 0xe6, 0xb2, 0x1c, 0x08, 0x0c,
  0xd6, 0xc0, 0x18, 0x04, 0x7e, 0xe7, 0x6f, 0xda, 0x4d, 0x4e, 0x8f, 0xcb,
  0x73, 0x20, 0x70, 0x56, 0x15, 0xe6, 0xe9, 0xe5, 0x20, 0x99, 0x2c, 0x2f,
  0xcf, 0xe7, 0xc2, 0xba, 0xd9, 0x5c, 0x96, 0x03, 0x81, 0xc1, 0x52, 0x90,
  0x83, 0xc0, 0xef, 0xfc, 0x65, 0xbf, 0xc7, 0x61, 0xb6, 0xf3, 0x2d, 0x6f,
  0x87, 0xd9, 0x40, 0xe0, 0xcc, 0xfa, 0x23, 0x51, 0xcb, 0x78, 0x7a, 0x5d,
  0x5e, 0x96, 0x11, 0x81, 0xd6, 0x1f, 0xc9, 0x5e, 0x1e, 0xd3, 0xdf, 0x72,
  0x60, 0x93, 0x04, 0x9b, 0x01, 0x81, 0x40, 0x60, 0xb0, 0x12, 0xe6, 0x20,
  0xf0, 0x3b, 0x7f, 0xd9, 0xef, 0x71, 0x98, 0x4d, 0x2d, 0xe3, 0xe9, 0x75,
  0x79, 0x19, 0x08, 0x9c, 0x59, 0x7f, 0x24, 0x6a, 0x19, 0x4f, 0xaf, 0xcb,
  0xcb, 0x32, 0x22, 0xd0, 0xfa, 0x23, 0xd9, 0xcb, 0x63, 0xfa, 0x5b, 0x0e,
  0x6c, 0x92, 0x60, 0x33, 0x20, 0x10, 0x08, 0x0c, 0x96, 0x40, 0x1e, 0x04,
  0x7e, 0xe7, 0x6f, 0xbb, 0x3c, 0x47, 0x27, 0xdd, 0xe6, 0x37, 0x10, 0x38,
  0xb3, 0xfe, 0x48, 0x53, 0xba, 0xbc, 0x3e, 0xa6, 0xd7, 0xe5, 0x65, 0xb2,
  0xb0, 0x6e, 0x36, 0x97, 0xe5, 0xc0, 0xaa, 0x34, 0x9c, 0xa7, 0xca, 0xc3,
  0xe3, 0x72, 0xb3, 0x3c, 0x47, 0x27, 0xdd, 0xe6, 0x37, 0x10, 0x08, 0x04,
  0x06, 0xeb, 0x20, 0x0b, 0xfc, 0xce, 0xdf, 0x39, 0x0c, 0x08, 0x9c, 0x55,
  0xa7, 0xe1, 0x36, 0x9c, 0x5d, 0x96, 0x4f, 0xe9, 0x61, 0x7a, 0x19, 0x08,
  0x0c, 0x56, 0x40, 0x1d, 0x04, 0x7e, 0xe7, 0xef, 0x7c, 0x2c, 0x2f, 0x97,
  0xdd, 0xcf, 0x3a, 0x1d, 0x5e, 0xa7, 0x03, 0x81, 0x33, 0xeb, 0x8f, 0x24,
  0xbd, 0x52, 0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x81, 0xd6, 0x1f,
  0xc9, 0x5e, 0x1e, 0xd3, 0xdf, 0x72, 0x60, 0x93, 0x04, 0x9b, 0x01, 0x81,
  0x40, 0x60, 0xb0, 0x16, 0xd8, 0x20, 0xf0, 0x73, 0xbf, 0xe5, 0xed, 0x30,
  0x7b, 0x0e, 0x04, 0xce, 0xac, 0x3f, 0x12, 0xb5, 0x8c, 0xa7, 0xd7, 0xe5,
  0x65, 0x19, 0x11, 0x68, 0xfd, 0x91, 0xec, 0xe5, 0x31, 0xfd, 0x2d, 0x07,
  0x36, 0x49, 0xb0, 0x19, 0x10, 0x08, 0x04, 0x06, 0x0b, 0x81, 0x0d, 0x02,
  0xbf, 0x39, 0x3a, 0x4c, 0x7e, 0xdf, 0xa7, 0xe1, 0x36, 0x9c, 0x5d, 0x96,
  0x03, 0x81, 0xb3, 0xea, 0x34, 0xdc, 0x86, 0xb3, 0xcb, 0xf2, 0xe1, 0xbb,
  0x0d, 0x0f, 0xcb, 0xd3, 0xf3, 0xb7, 0x7b, 0x4a, 0x0f, 0xd3, 0xcb, 0x40,
  0x60, 0xb0, 0x0c, 0xba, 0xc0, 0x8f, 0x5e, 0xc6, 0x4f, 0xa7, 0xc1, 0x27,
  0x10, 0x38, 0xb3, 0xfe, 0x48, 0xd4, 0x32, 0x9e, 0x5e, 0x97, 0x97, 0x65,
  0x44, 0x60, 0x13, 0x08, 0x0c, 0x56, 0xc1, 0x17, 0xf8, 0xd1, 0xcb, 0xf8,
  0x29, 0x3a, 0x4c, 0x7e, 0xdf, 0x81, 0xc0, 0x99, 0xf5, 0x47, 0xa2, 0x96,
  0xf1, 0xf4, 0xba, 0xbc, 0x2c, 0x23, 0x02, 0x9b, 0x40, 0x60, 0xd0, 0x1a,
  0xa4, 0x10, 0x99, 0xd8, 0x03, 0x18, 0x88, 0x88, 0x73, 0x1a, 0x69, 0x02,
  0x9a, 0x49, 0xb2, 0x07, 0xc4, 0x04, 0x26, 0x22, 0x42, 0x80, 0xc5, 0x1c,
  0x84, 0xa0, 0xb6, 0x88, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x80, 0x2a,
  0x0a, 0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09, 0x03, 0x10, 0x30, 0xbf, 0xb8,
  0x6d, 0x93, 0xd8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x08, 0xa8, 0xa2, 0x20,
  0xa2, 0xd2, 0x01, 0x86, 0x92, 0x30, 0x00, 0x01, 0xf3, 0x91, 0xdb, 0xb6,
  0x90, 0x35, 0x18, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0x22, 0x80, 0x89, 0x08,
  0x81, 0x66, 0x58, 0x88, 0xcf, 0x89, 0x4a, 0x24, 0xf0, 0x43, 0x64, 0x62,
  0x0f, 0x60, 0x20, 0x22, 0xce, 0x69, 0xa4, 0x09, 0x68, 0x26, 0xc9, 0x46,
  0xc2, 0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x88, 0x00, 0x26, 0x22, 0x04,
  0x9a, 0x61, 0x21, 0x3e, 0x27, 0x2a, 0x91, 0xc0, 0x37, 0x81, 0x89, 0x88,
  0x10, 0x60, 0x31, 0x91, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x88, 0x00,
  0x26, 0x22, 0x04, 0x9a, 0x61, 0x21, 0x3e, 0x27, 0x2a, 0x91, 0xc0, 0x0f,
  0xea, 0x5a, 0xe9, 0x03, 0x32, 0xde, 0xf5, 0x86, 0xbb, 0xc6, 0xf2, 0x72,
  0x98, 0x5e, 0x46, 0x86, 0xdd, 0x64, 0x76, 0xd9, 0xf8, 0x96, 0x33, 0xd3,
  0x62, 0xd7, 0x98, 0x1d, 0x9e, 0xcf, 0x5d, 0xd2, 0x2b, 0xb5, 0x8c, 0xa7,
  0xd7, 0xe5, 0x65, 0x19, 0x91, 0x67, 0x2f, 0x8f, 0xe9, 0x6f, 0x39, 0xcf,
  0xcc, 0x7e, 0x87, 0xe9, 0x2c, 0x10, 0xcd, 0x07, 0xf2, 0xd5, 0x49, 0x28,
  0x90, 0xf1, 0xae, 0x37, 0xdc, 0x35, 0x96, 0x97, 0xc3, 0xf4, 0x32, 0x32,
  0xec, 0x26, 0xb3, 0xcb, 0xc6, 0xb7, 0x9c, 0x99, 0x16, 0xbb, 0xc6, 0xec,
  0xf0, 0x7c, 0xee, 0x9a, 0xd2, 0xe5, 0xf5, 0x31, 0xbd, 0x2e, 0x2f, 0x93,
  0x85, 0x75, 0xb3, 0xb9, 0x2c, 0xe7, 0x49, 0xc3, 0x79, 0xaa, 0x3c, 0x3c,
  0x2e, 0x37, 0xcb, 0x73, 0x74, 0xd2, 0x6d, 0x7e, 0xfb, 0xaa, 0xe4, 0x0d,
  0xc8, 0x78, 0xd7, 0x1b, 0xee, 0x1a, 0xcb, 0xcb, 0x61, 0x7a, 0x19, 0x19,
  0x76, 0x93, 0xd9, 0x65, 0xe3, 0x5b, 0xce, 0x4c, 0x8b, 0x5d, 0x63, 0x76,
  0x78, 0x3e, 0x77, 0x51, 0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x79,
  0x66, 0xf6, 0x3b, 0x4c, 0xf7, 0x15, 0xca, 0x1e, 0x90, 0xf1, 0xae, 0x37,
  0xdc, 0x35, 0x96, 0x97, 0xc3, 0xf4, 0x32, 0x32, 0xec, 0x26, 0xb3, 0xcb,
  0xc6, 0xb7, 0x9c, 0x99, 0x16, 0xbb, 0xc6, 0xec, 0xf0, 0x7c, 0xee, 0xa2,
  0x96, 0xf1, 0xf4, 0xba, 0xbc, 0x2c, 0x23, 0xf2, 0xec, 0xe5, 0x31, 0xfd,
  0x2d, 0xe7, 0x99, 0xd9, 0xef, 0x30, 0x9d, 0x05, 0xa2, 0xf9, 0x40, 0x3e,
  0x23, 0x89, 0x83, 0xe1, 0xf2, 0x9d, 0xc7, 0x17, 0x22, 0x02, 0x98, 0x88,
  0x10, 0x68, 0x86, 0x85, 0xf8, 0x9c, 0xa8, 0x44, 0x02, 0x5f, 0x9a, 0x22,
  0x4a, 0x98, 0xfc, 0x0d, 0x9b, 0x08, 0x6d, 0x18, 0x22, 0x42, 0x92, 0x36,
  0xaa, 0x28, 0x88, 0xc8, 0x54, 0xfe, 0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x85,
  0x88, 0x00, 0x26, 0x22, 0x04, 0x9a, 0x61, 0x21, 0x3e, 0x27, 0x2a, 0x91,
  0xc0, 0x97, 0xa6, 0x88, 0x12, 0x26, 0x7f, 0x05, 0xb0, 0x29, 0x02, 0x04,
  0xa4, 0x31, 0x34, 0x41, 0x20, 0x16, 0x22, 0x02, 0x26, 0xc4, 0x69, 0xd8,
  0x29, 0xa2, 0x84, 0x89, 0x8a, 0x08, 0x33, 0xb1, 0x83, 0xe1, 0xf2, 0x9d,
  0xc7, 0x17, 0x22, 0x02, 0x98, 0x88, 0x10, 0x68, 0x86, 0x85, 0xf8, 0x9c,
  0xa8, 0x44, 0x02, 0x5f, 0x9a, 0x22, 0x4a, 0x98, 0x7c, 0x16, 0x60, 0x9e,
  0x85, 0x88, 0x38, 0x87, 0x79, 0x80, 0x08, 0x91, 0x9c, 0x86, 0x9d, 0x80,
  0x89, 0xb0, 0x14, 0x36, 0x18, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0x22, 0x80,
  0x89, 0x08, 0x81, 0x66, 0x58, 0x88, 0xcf, 0x89, 0x4a, 0x24, 0xf0, 0xa5,
  0x29, 0xa2, 0x84, 0xc9, 0x67, 0x01, 0xe6, 0x59, 0x88, 0x88, 0x9d, 0x80,
  0x89, 0x30, 0x8e, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x07, 0x44, 0x7a, 0x80,
  0x49, 0x38, 0x56, 0x00, 0x93, 0xc4, 0x66, 0x20, 0x2e, 0x1f, 0xb9, 0x6d,
  0xab, 0x70, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x70, 0xa6, 0xdb, 0x2f, 0x6e,
  0xdb, 0x32, 0xb0, 0xe1, 0xf2, 0x9d, 0xc7, 0x7f, 0x22, 0x84, 0x41, 0x26,
  0xa4, 0x22, 0xc4, 0x66, 0x20, 0x2e, 0x1f, 0xb9, 0x6d, 0x9b, 0xb8, 0x86,
  0xcb, 0x77, 0x1e, 0x3f, 0x02, 0xac, 0x8d, 0x2a, 0x0a, 0x22, 0x2a, 0x1d,
  0x60, 0xf0, 0x91, 0xdb, 0x36, 0x8c, 0x6a, 0xb8, 0x7c, 0xe7, 0xf1, 0x23,
  0x00, 0x6b, 0x39, 0x2a, 0x8a, 0x88, 0x66, 0xf2, 0x8b, 0xdb, 0x36, 0x0a,
  0x6e, 0xb8, 0x7c, 0xe7, 0xf1, 0x25, 0x80, 0x79, 0x16, 0x82, 0x63, 0x9e,
  0x92, 0xa8, 0x88, 0x65, 0x26, 0x22, 0xc7, 0x2f, 0x6e, 0xdb, 0x3a, 0xa8,
  0xe1, 0xf2, 0x9d, 0xc7, 0x97, 0x00, 0xe6, 0x59, 0x08, 0x30, 0x02, 0x06,
  0xbf, 0xb8, 0x6d, 0xbb, 0x90, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xa2,
  0x09, 0x01, 0x22, 0xcc, 0x2f, 0x6e, 0xdb, 0x3c, 0xaa, 0xe1, 0xf2, 0x9d,
  0xc7, 0x9f, 0x88, 0x6b, 0xa2, 0x22, 0xa2, 0x74, 0x80, 0xc1, 0x2f, 0x6e,
  0xdb, 0x40, 0xac, 0xe1, 0xf2, 0x9d, 0xc7, 0x9f, 0x88, 0x6b, 0xa2, 0x22,
  0x82, 0x9d, 0x9c, 0x88, 0xf0, 0x8b, 0xdb, 0xb6, 0x0f, 0x30, 0x18, 0x2e,
  0xdf, 0x79, 0xfc, 0x29, 0x02, 0x04, 0x62, 0x05, 0x30, 0x5f, 0x9a, 0x22,
  0x4a, 0x98, 0xfc, 0x15, 0xc0, 0x52, 0x00, 0x5b, 0x1c, 0x60, 0x30, 0x8b,
  0x67, 0xb8, 0x7c, 0xe7, 0xf1, 0xa9, 0x06, 0x88, 0x30, 0xbf, 0xb8, 0x6d,
  0xd3, 0xd8, 0x86, 0xcb, 0x77, 0x1e, 0xdf, 0x72, 0xa2, 0x65, 0x58, 0x01,
  0xac, 0x43, 0x22, 0x42, 0x98, 0x10, 0xa7, 0xf1, 0x8b, 0xdb, 0xb6, 0x0d,
  0x6c, 0xb8, 0x7c, 0xe7, 0xf1, 0x2d, 0x27, 0x5a, 0x86, 0x15, 0xc0, 0xd0,
  0x08, 0x31, 0x90, 0xc6, 0x2f, 0x6e, 0xdb, 0x18, 0xa2, 0x65, 0xa9, 0x18,
  0xdf, 0x58, 0x9c, 0x00, 0x58, 0x7e, 0x61, 0x72, 0x22, 0x09, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x5d, 0x04, 0x00, 0x00, 0x13, 0x04, 0x49, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x04, 0x98, 0x01, 0x28,
  0xae, 0xb2, 0x14, 0x28, 0xb7, 0x02, 0x16, 0x28, 0xbb, 0x92, 0x29, 0xc1,
  0x80, 0xf2, 0xff, 0x3f, 0x28, 0x53, 0x81, 0x42, 0x15, 0x28, 0xc2, 0x80,
  0xa2, 0x15, 0x28, 0x51, 0x81, 0xf2, 0x2b, 0x98, 0x12, 0x16, 0xa8, 0x84,
  0xd2, 0x15, 0xa8, 0x81, 0x72, 0x29, 0x95, 0x32, 0x0c, 0xa0, 0x4c, 0x79,
  0x14, 0xc1, 0x08, 0x40, 0x19, 0x94, 0x40, 0x39, 0xd0, 0x60, 0x8c, 0xe0,
  0xff, 0xff, 0xff, 0xfe, 0x83, 0x31, 0x82, 0xd6, 0x9c, 0x73, 0xde, 0x1b,
  0x23, 0x00, 0x41, 0x10, 0x44, 0xbf, 0x31, 0x02, 0x10, 0x04, 0x41, 0xff,
  0x1b, 0x23, 0x00, 0x41, 0x10, 0xd4, 0xbf, 0x31, 0x02, 0x10, 0x04, 0x41,
  0xfa, 0x1b, 0x01, 0x18, 0x23, 0x00, 0x41, 0x10, 0x54, 0xc1, 0x60, 0x8c,
  0x00, 0x04, 0x41, 0x10, 0xfe, 0xc6, 0x08, 0x40, 0x10, 0x04, 0xf1, 0x5f,
  0x18, 0x23, 0x00, 0x41, 0x10, 0xc4, 0xbf, 0x31, 0x02, 0x10, 0x04, 0x41,
  0x10, 0x14, 0xc6, 0x08, 0x40, 0x10, 0x04, 0x41, 0x30, 0x98, 0x01, 0x00,
  0x44, 0x0f, 0x91, 0x41, 0xf6, 0xf0, 0x18, 0x34, 0x0f, 0x94, 0x41, 0xf5,
  0x40, 0x19, 0x74, 0x0f, 0x94, 0x41, 0xfb, 0xd0, 0x18, 0xd4, 0x0f, 0x8d,
  0x41, 0xff, 0xa0, 0x18, 0x14, 0x12, 0x8a, 0x41, 0x23, 0x81, 0x18, 0x64,
  0x12, 0x81, 0x41, 0x26, 0x51, 0x18, 0x94, 0x0f, 0xa7, 0x41, 0xfb, 0x50,
  0x1a, 0xd4, 0x0f, 0xa1, 0x31, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xb6,
  0x80, 0x0e, 0x76, 0x30, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0x2d,
  0xa8, 0xc3, 0x1d, 0x0c, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x20, 0x0b,
  0xec, 0x80, 0x07, 0xc3, 0x4c, 0x44, 0x1a, 0x00, 0x6c, 0x40, 0x0a, 0x23,
  0x06, 0x05, 0x00, 0x82, 0x60, 0x20, 0x0a, 0xf7, 0x20, 0x07, 0x3b, 0x35,
  0x84, 0x02, 0x38, 0x90, 0xc3, 0xb0, 0x01, 0x11, 0x08, 0x03, 0xb0, 0x53,
  0x83, 0x28, 0x84, 0x43, 0x38, 0x50, 0x00, 0x18, 0xc3, 0x0d, 0xc1, 0x38,
  0x80, 0xc1, 0x2c, 0x43, 0x80, 0x04, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60,
  0x40, 0x07, 0x22, 0xe1, 0x07, 0x09, 0x39, 0x8c, 0x26, 0x04, 0xc0, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0xf8, 0xc2, 0x3b, 0x84, 0x42, 0x34, 0x62,
  0xa0, 0x00, 0x20, 0x08, 0x06, 0x77, 0x40, 0x12, 0xa4, 0x10, 0x08, 0xe7,
  0xb0, 0x06, 0xe5, 0x30, 0x9a, 0x10, 0x00, 0x23, 0x06, 0x0a, 0x00, 0x82,
  0x60, 0x70, 0x07, 0x26, 0x61, 0x0a, 0x03, 0x71, 0x0e, 0x6d, 0x70, 0x0e,
  0xa3, 0x09, 0x01, 0x30, 0x62, 0xa0, 0x00, 0x20, 0x08, 0x06, 0x77, 0x80,
  0x12, 0xa8, 0x50, 0x18, 0xe2, 0xf0, 0x06, 0xe9, 0x30, 0x9a, 0x10, 0x00,
  0x23, 0x06, 0x0a, 0x00, 0x82, 0x60, 0x70, 0x07, 0x2a, 0xa1, 0x0a, 0x07,
  0xa2, 0x0e, 0x71, 0xb0, 0x0e, 0xa3, 0x09, 0x01, 0x30, 0x62, 0xa0, 0x00,
  0x20, 0x08, 0x06, 0x77, 0xc0, 0x12, 0xac, 0x90, 0x28, 0xee, 0x30, 0x07,
  0xed, 0x30, 0x9a, 0x10, 0x00, 0x23, 0x06, 0x0a, 0x00, 0x82, 0x60, 0x70,
  0x07, 0x2e, 0xe1, 0x0a, 0x0b, 0x13, 0x0e, 0x75, 0xf0, 0x0e, 0xa3, 0x09,
  0x01, 0x30, 0x62, 0xa0, 0x00, 0x20, 0x08, 0x06, 0x77, 0x00, 0x13, 0xb0,
  0xd0, 0x38, 0xa3, 0x70, 0x07, 0xf1, 0x30, 0x9a, 0x10, 0x00, 0x23, 0x06,
  0x05, 0x00, 0x82, 0x60, 0x40, 0x0a, 0x2c, 0x41, 0x0a, 0x15, 0xdc, 0x83,
  0x54, 0xf0, 0x40, 0x05, 0xa6, 0xa0, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0x80, 0x0b, 0x25, 0x41, 0x0b, 0x65, 0x30, 0x62, 0xa0, 0x00, 0x20, 0x08,
  0x06, 0x77, 0x70, 0x13, 0xb7, 0x10, 0x08, 0xb9, 0xf0, 0x07, 0xf8, 0x30,
  0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0xdc, 0x50, 0x18, 0x60, 0x50,
  0x43, 0x2d, 0x68, 0x11, 0xfe, 0x80, 0x45, 0xfc, 0x03, 0x4e, 0x37, 0x14,
  0x01, 0x31, 0xdd, 0x40, 0x0c, 0xc5, 0x74, 0x03, 0x71, 0x18, 0x15, 0xec,
  0x82, 0x16, 0xc1, 0x0b, 0x5a, 0x84, 0x24, 0x15, 0x74, 0x30, 0x62, 0x60,
  0x00, 0x20, 0x08, 0x06, 0xb8, 0x40, 0x13, 0xe3, 0x50, 0x07, 0x23, 0x06,
  0x0a, 0x00, 0x82, 0x60, 0x70, 0x07, 0x66, 0x61, 0x0e, 0x81, 0x80, 0x0e,
  0xae, 0x70, 0x12, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0x27, 0x0c,
  0xf6, 0x84, 0xc1, 0x96, 0xa2, 0x49, 0x05, 0x65, 0x00, 0x23, 0x06, 0x0a,
  0x00, 0x82, 0x60, 0x70, 0x07, 0x6d, 0xd1, 0x0e, 0x48, 0xf0, 0x0e, 0xb5,
  0xe0, 0x12, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0x27, 0x0c, 0xf6,
  0x84, 0xc1, 0x16, 0x14, 0x06, 0x52, 0x01, 0x1b, 0xc0, 0x88, 0x81, 0x02,
  0x80, 0x20, 0x18, 0xdc, 0x01, 0x5d, 0xd0, 0xc3, 0x13, 0xd8, 0x03, 0x2f,
  0xd4, 0xc4, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x09, 0x83, 0x3d,
  0x61, 0xb0, 0x7b, 0x35, 0xf0, 0x03, 0x4f, 0xf0, 0x04, 0x05, 0xa3, 0x31,
  0x86, 0x10, 0xf8, 0x84, 0xdd, 0x42, 0x10, 0x9f, 0x31, 0x84, 0x81, 0x2c,
  0x4c, 0x08, 0xe2, 0x63, 0x81, 0x25, 0x1f, 0x13, 0x2c, 0xf9, 0x98, 0x11,
  0xc9, 0xc7, 0x8e, 0x48, 0x3e, 0x66, 0x30, 0xf2, 0xb1, 0x83, 0x91, 0x8f,
  0x09, 0x04, 0x7c, 0x2c, 0x38, 0xe0, 0x63, 0x43, 0x01, 0x1f, 0x0b, 0x10,
  0xf8, 0x94, 0x19, 0x80, 0x02, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01,
  0x2e, 0xe4, 0x05, 0x4a, 0xe8, 0xc2, 0x88, 0x81, 0x02, 0x80, 0x20, 0x18,
  0xdc, 0xc1, 0x6a, 0xac, 0x44, 0x20, 0xb4, 0x44, 0x3c, 0xb0, 0xc5, 0x68,
  0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xdc, 0x30, 0xd8,
  0x1b, 0x06, 0x7b, 0xc3, 0x60, 0xeb, 0x0c, 0x52, 0x01, 0x46, 0x0c, 0x14,
  0x00, 0x04, 0xc1, 0xe0, 0x0e, 0x66, 0x63, 0x26, 0x92, 0xa0, 0x26, 0xf2,
  0x81, 0x2e, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06,
  0xe1, 0x86, 0xc1, 0xde, 0x30, 0xd8, 0x1b, 0x06, 0x5b, 0x68, 0x10, 0x0b,
  0x30, 0x62, 0xa0, 0x00, 0x20, 0x08, 0x06, 0x77, 0xb0, 0x1b, 0x3b, 0x11,
  0x05, 0x3d, 0x11, 0x12, 0x7c, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0x37, 0x0c, 0xf6, 0x86, 0xc1, 0xde, 0x30, 0x58,
  0x9b, 0xc8, 0x40, 0x3e, 0x36, 0x95, 0x81, 0x7c, 0x6c, 0x32, 0x03, 0xf9,
  0x98, 0xa3, 0x06, 0xf2, 0x31, 0x67, 0x0d, 0xe4, 0x63, 0x0e, 0x1b, 0xc8,
  0xc7, 0x06, 0x03, 0x3e, 0x36, 0x18, 0xf0, 0xb1, 0xc1, 0x80, 0x8f, 0x31,
  0x6e, 0x20, 0x1f, 0x63, 0xde, 0x40, 0x3e, 0xc6, 0xc0, 0x81, 0x7c, 0xcc,
  0x18, 0xe0, 0x63, 0xc6, 0x00, 0x1f, 0x33, 0x06, 0xf8, 0x8c, 0x18, 0x2c,
  0x00, 0x08, 0x82, 0x01, 0x1f, 0xbc, 0x07, 0x5c, 0x0c, 0x42, 0x30, 0x08,
  0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0xf8, 0xc1, 0x7b, 0xb8, 0x45,
  0x60, 0x45, 0x20, 0x1f, 0x2b, 0x04, 0xf9, 0x58, 0x31, 0xc8, 0xa7, 0x66,
  0x61, 0x1d, 0x60, 0xc4, 0x40, 0x01, 0x40, 0x10, 0x0c, 0xee, 0xe0, 0x3e,
  0xee, 0xa2, 0x0d, 0x82, 0xbc, 0xe8, 0x09, 0xdc, 0x18, 0x4d, 0x08, 0x80,
  0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x1b, 0x06, 0x7b, 0xc3, 0x60,
  0x6f, 0x18, 0x6c, 0xcd, 0xc2, 0x3c, 0xc0, 0x88, 0x81, 0x02, 0x80, 0x20,
  0x18, 0xdc, 0xc1, 0x7f, 0xfc, 0x45, 0x1d, 0x04, 0xa1, 0x51, 0x16, 0xe0,
  0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x37,
  0x0c, 0xf6, 0x86, 0xc1, 0xde, 0x30, 0xd8, 0xa2, 0x85, 0x7d, 0x80, 0x11,
  0x03, 0x05, 0x00, 0x41, 0x30, 0xb8, 0x83, 0x13, 0x39, 0x8d, 0x3e, 0x08,
  0x52, 0xa3, 0x2d, 0xd0, 0x63, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60,
  0x34, 0x61, 0x10, 0x6e, 0x18, 0xec, 0x0d, 0x83, 0xbd, 0x61, 0xb0, 0x36,
  0xc1, 0x82, 0x7c, 0x6c, 0x8a, 0x05, 0xf9, 0xd8, 0x24, 0x0b, 0xf2, 0x31,
  0xc7, 0x16, 0xe4, 0x63, 0xce, 0x2d, 0xc8, 0xc7, 0x1c, 0x5c, 0x90, 0x8f,
  0x0d, 0x06, 0x7c, 0x6c, 0x30, 0xe0, 0x63, 0x83, 0x01, 0x1f, 0x63, 0x74,
  0x41, 0x3e, 0xc6, 0xec, 0x82, 0x7c, 0x8c, 0xe1, 0x05, 0xf9, 0x98, 0x31,
  0xc0, 0xc7, 0x8c, 0x01, 0x3e, 0x66, 0x0c, 0xf0, 0x19, 0x31, 0x58, 0x00,
  0x10, 0x04, 0x03, 0x3e, 0xd8, 0x11, 0xde, 0x18, 0x84, 0x60, 0x10, 0x82,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0xf0, 0x83, 0x1d, 0xd1, 0x8d, 0xc0,
  0x8a, 0x40, 0x3e, 0x56, 0x08, 0xf2, 0xb1, 0x62, 0x90, 0x4f, 0xfd, 0x43,
  0x4d, 0xc0, 0x88, 0x81, 0x02, 0x80, 0x20, 0x18, 0xdc, 0xc1, 0x98, 0x8c,
  0x47, 0x2e, 0x04, 0xe5, 0x91, 0x1a, 0x24, 0x32, 0x9a, 0x10, 0x00, 0xa3,
  0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x37, 0x0c, 0xf6, 0x86, 0xc1, 0xde,
  0x30, 0xd8, 0xfa, 0x87, 0x9e, 0x80, 0x11, 0x03, 0x05, 0x00, 0x41, 0x30,
  0xb8, 0x83, 0x35, 0x59, 0x8f, 0x70, 0x08, 0xda, 0x23, 0x36, 0x58, 0x64,
  0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x6e, 0x18,
  0xec, 0x0d, 0x83, 0xbd, 0x61, 0xb0, 0x05, 0x12, 0x65, 0x01, 0x23, 0x06,
  0x06, 0x00, 0x82, 0x60, 0x80, 0x0b, 0x62, 0x12, 0x1f, 0xa3, 0x31, 0x62,
  0xa0, 0x00, 0x20, 0x08, 0x06, 0x77, 0x40, 0x27, 0xf4, 0x11, 0x08, 0xf6,
  0xa1, 0x1b, 0x35, 0x32, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a,
  0x30, 0x08, 0x37, 0x0c, 0xf6, 0x86, 0xc1, 0xde, 0x30, 0x58, 0xa3, 0xfa,
  0x41, 0x3e, 0x46, 0xf9, 0x83, 0x7c, 0x8c, 0xfa, 0x07, 0xf9, 0xd8, 0x33,
  0x12, 0xf2, 0xb1, 0x87, 0x24, 0xe4, 0x63, 0x4f, 0x49, 0xc8, 0xc7, 0x06,
  0x03, 0x3e, 0x36, 0x18, 0xf0, 0xb1, 0xc1, 0x80, 0x8f, 0x31, 0x27, 0x21,
  0x1f, 0x63, 0x50, 0x42, 0x3e, 0xc6, 0xa4, 0x84, 0x7c, 0xcc, 0x18, 0xe0,
  0x63, 0xc6, 0x00, 0x1f, 0x33, 0x06, 0xf8, 0x8c, 0x18, 0x2c, 0x00, 0x08,
  0x82, 0x01, 0x1f, 0xa0, 0x4a, 0x8a, 0x0c, 0x42, 0x30, 0x08, 0xc1, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0xf8, 0x01, 0xaa, 0x9c, 0x48, 0x60, 0x45,
  0x20, 0x1f, 0x2b, 0x04, 0xf9, 0x58, 0x31, 0xc8, 0xa7, 0xd8, 0x02, 0x34,
  0x60, 0xc4, 0x40, 0x01, 0x40, 0x10, 0x0c, 0xee, 0x00, 0x56, 0x60, 0xa4,
  0x0b, 0x64, 0xc4, 0x3e, 0xe2, 0x64, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84,
  0x60, 0x34, 0x61, 0x10, 0x6e, 0x18, 0xec, 0x0d, 0x83, 0xbd, 0x61, 0xb0,
  0xc5, 0x16, 0xa8, 0x01, 0x23, 0x06, 0x0a, 0x00, 0x82, 0x60, 0x70, 0x07,
  0xb8, 0x82, 0x23, 0x65, 0x10, 0xe8, 0x88, 0x7f, 0xe4, 0xc9, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xdc, 0x30, 0xd8, 0x1b,
  0x06, 0x7b, 0xc3, 0x60, 0xab, 0x2d, 0x60, 0x03, 0x46, 0x0c, 0x14, 0x00,
  0x04, 0xc1, 0xe0, 0x0e, 0xc0, 0x05, 0x4c, 0xda, 0x20, 0x10, 0x13, 0x13,
  0x09, 0x95, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41,
  0xb8, 0x61, 0xb0, 0x37, 0x0c, 0xf6, 0x86, 0xc1, 0x8e, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x81, 0x29, 0xfc, 0x0a, 0x98, 0xc0, 0xc8, 0x88, 0x81, 0x01,
  0x80, 0x20, 0x18, 0x98, 0x02, 0xb8, 0x84, 0xc9, 0x8b, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x81, 0x29, 0x84, 0x8b, 0x98, 0xcc, 0xc8, 0x88, 0x81,
  0x01, 0x80, 0x20, 0x18, 0x98, 0xc2, 0xb8, 0x88, 0xc9, 0x8c, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0x81, 0x29, 0x90, 0xcb, 0x98, 0xc8, 0xc8, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0x98, 0x42, 0xb9, 0x90, 0x89, 0x8d, 0x8c,
  0x18, 0x14, 0x00, 0x08, 0x82, 0x81, 0x28, 0xa0, 0xcb, 0x98, 0x58, 0x40,
  0xc8, 0xc7, 0x04, 0x42, 0x3e, 0x36, 0x10, 0xf2, 0xb1, 0x41, 0x81, 0x8f,
  0x0d, 0x0a, 0x7c, 0x6c, 0x50, 0xe0, 0x63, 0x18, 0x18, 0xc4, 0xc7, 0x30,
  0x30, 0x88, 0x8f, 0x61, 0x60, 0x10, 0x1f, 0x9b, 0xc6, 0x20, 0x3e, 0x36,
  0x8d, 0x41, 0x7c, 0x6c, 0x1a, 0x83, 0xf8, 0x98, 0x40, 0xc8, 0xc7, 0x04,
  0x43, 0x3e, 0x26, 0x04, 0xf1, 0x31, 0x22, 0x91, 0x8f, 0x1d, 0x88, 0x7c,
  0x4c, 0x08, 0xe2, 0x63, 0xc9, 0x22, 0x1f, 0x4b, 0x1a, 0xf9, 0x98, 0x10,
  0xc4, 0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0xf8, 0x20, 0x64, 0x44,
  0xe5, 0x20, 0x82, 0x83, 0x08, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xc0,
  0x0f, 0x42, 0x06, 0x54, 0x02, 0x0b, 0x12, 0xf9, 0x98, 0x70, 0xc8, 0xc7,
  0x86, 0x42, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x80, 0x0a, 0xff,
  0xd2, 0x27, 0x71, 0x32, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xa8, 0x00,
  0x32, 0x7e, 0x02, 0x27, 0x25, 0xc4, 0x0b, 0x5c, 0x30, 0xa8, 0x1b, 0x06,
  0x65, 0x82, 0x9a, 0xc0, 0xc7, 0x84, 0x35, 0x81, 0xcf, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0xc4, 0x41, 0xcc, 0xb0, 0x8a, 0x8d, 0xd0, 0xcb, 0x68,
  0x42, 0x00, 0x8c, 0x26, 0x08, 0x81, 0x15, 0x02, 0x7d, 0xac, 0x10, 0xe8,
  0x63, 0x42, 0x9b, 0xc8, 0xc7, 0x04, 0x37, 0x91, 0x8f, 0x09, 0x72, 0x02,
  0x1f, 0x13, 0xe6, 0x04, 0x3e, 0x26, 0x27, 0x41, 0x7c, 0x46, 0x0c, 0x0e,
  0x00, 0x04, 0xc1, 0x20, 0x0e, 0x76, 0xc6, 0x56, 0xc0, 0x84, 0x5f, 0x46,
  0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x86, 0x61, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0xe2, 0xe0, 0x67, 0x74, 0x85, 0x4c, 0x48, 0x66,
  0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x18, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0x20, 0x0e, 0xc6, 0xc6, 0x57, 0xd0, 0xe4, 0x5f,
  0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x86, 0x61, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0xe2, 0xe0, 0x6c, 0xc4, 0x85, 0x4d, 0x56,
  0x66, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x18, 0xec,
  0x99, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xa0, 0x60, 0x36,
  0xeb, 0xf2, 0x48, 0x81, 0x05, 0x0f, 0x74, 0xcc, 0xb1, 0xe4, 0x33, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0xa0, 0x90, 0x36, 0xee, 0xe2, 0x54, 0x81,
  0x05, 0x0e, 0x74, 0xac, 0xc9, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xa0, 0xc0, 0x36, 0xf1, 0xd2, 0x60, 0x81, 0x05, 0x0d, 0x74, 0x8c,
  0xe1, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xa0, 0xf0, 0x36,
  0xf4, 0xc2, 0x6c, 0x81, 0x05, 0x0c, 0x74, 0x4c, 0x09, 0xe8, 0x63, 0x88,
  0x40, 0x1f, 0x33, 0x06, 0xfa, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41,
  0x1c, 0xe8, 0x4d, 0xbd, 0xfc, 0x49, 0xce, 0x8c, 0x26, 0x04, 0xc0, 0x68,
  0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x1d, 0x43, 0x7c, 0xec, 0x18, 0xe2,
  0x63, 0xc7, 0x10, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0xe0, 0x83,
  0xbe, 0xf1, 0x97, 0x41, 0x08, 0x06, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x03, 0x3f, 0xe8, 0x1b, 0x7e, 0x09, 0xac, 0x08, 0xe4, 0x63, 0x85,
  0x20, 0x1f, 0x2b, 0x06, 0xf9, 0xd4, 0x1e, 0xac, 0x0d, 0x5c, 0x1f, 0x0c,
  0xea, 0x84, 0x41, 0x99, 0x40, 0x2e, 0xf0, 0x31, 0xa1, 0x5c, 0xe0, 0x63,
  0x42, 0x1e, 0xd0, 0xc7, 0x84, 0x3c, 0xa0, 0x8f, 0x09, 0xe4, 0x22, 0x1f,
  0x13, 0xca, 0x45, 0x3e, 0x26, 0xa4, 0x0b, 0x7c, 0x4c, 0x50, 0x17, 0xf8,
  0x58, 0xba, 0x04, 0xf1, 0x31, 0x3b, 0x18, 0xe4, 0x33, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0xa0, 0xd0, 0x3a, 0x32, 0x63, 0x07, 0x42, 0x60, 0x81,
  0x1d, 0x40, 0xc7, 0xea, 0xc0, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x80, 0x02, 0xec, 0xd4, 0x4c, 0x1d, 0x14, 0x81, 0x05, 0x75, 0x00,
  0x1d, 0xa3, 0x83, 0x44, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x00,
  0x0a, 0xb3, 0x83, 0x33, 0x74, 0x80, 0x04, 0x16, 0xd0, 0x01, 0x74, 0x6c,
  0x0e, 0x18, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x28, 0xd8,
  0xce, 0xce, 0xcc, 0xc1, 0x12, 0x58, 0x30, 0x07, 0xd0, 0x31, 0x25, 0xa0,
  0x8f, 0x21, 0x02, 0x7d, 0xcc, 0x18, 0xe8, 0x63, 0x83, 0x19, 0xc4, 0xc7,
  0x06, 0x33, 0x88, 0x8f, 0x0d, 0x66, 0x10, 0x9f, 0x11, 0x83, 0x05, 0x00,
  0x41, 0x30, 0xe0, 0x03, 0xf0, 0x09, 0x9b, 0x41, 0x08, 0x06, 0x21, 0x18,
  0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x3f, 0x00, 0x9f, 0x9f, 0x09, 0xac,
  0x08, 0xe4, 0x63, 0x85, 0x20, 0x1f, 0x2b, 0x06, 0xf9, 0x98, 0x1b, 0xd8,
  0x43, 0x7c, 0xcc, 0x0d, 0xec, 0x21, 0x3e, 0xe6, 0x06, 0xf6, 0x10, 0x1f,
  0x23, 0x99, 0x72, 0x88, 0x8f, 0x95, 0x4c, 0x39, 0xc4, 0xc7, 0x4c, 0xa6,
  0x1c, 0xe2, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x7c, 0xb0, 0x3e,
  0x6c, 0x33, 0x08, 0x81, 0x51, 0x10, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60,
  0xc0, 0x07, 0xec, 0xd3, 0x36, 0xe9, 0x80, 0x0e, 0xe7, 0xd0, 0x06, 0x6c,
  0xb0, 0x06, 0x26, 0x04, 0xf4, 0xb1, 0xe0, 0x0d, 0xe4, 0x63, 0xc2, 0x1b,
  0xc8, 0xc7, 0x86, 0x37, 0x90, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18,
  0xf0, 0x41, 0xfc, 0xc8, 0x8d, 0x3b, 0xb4, 0x03, 0x3b, 0x3c, 0x4e, 0x63,
  0x47, 0x40, 0x1f, 0x0b, 0x22, 0xf9, 0x98, 0x10, 0xc9, 0xc7, 0x86, 0x48,
  0x3e, 0xf6, 0x07, 0x64, 0x11, 0x1f, 0x0b, 0x12, 0xf8, 0x18, 0x28, 0x94,
  0x45, 0x7c, 0x2c, 0x50, 0xe0, 0x63, 0xa1, 0x60, 0x16, 0xf1, 0xb1, 0x60,
  0x81, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0xf0, 0x01, 0xff, 0xf4,
  0x8d, 0x4a, 0xa4, 0x04, 0x4a, 0xa8, 0x44, 0x4a, 0xa0, 0xc4, 0x88, 0xc1,
  0x02, 0x80, 0x20, 0x18, 0xf0, 0x41, 0xff, 0xf8, 0xcd, 0x4a, 0xa8, 0x44,
  0x4a, 0xa0, 0xc4, 0x49, 0x98, 0xc4, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18,
  0xf0, 0x81, 0xff, 0xfc, 0x4d, 0x4a, 0xa0, 0xc4, 0x49, 0xa4, 0x04, 0x4a,
  0x9c, 0xc4, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0xf0, 0xc1, 0xff, 0x80,
  0x0e, 0x62, 0x10, 0x2d, 0xc1, 0x12, 0x2b, 0x31, 0x62, 0xb0, 0x00, 0x20,
  0x08, 0x06, 0x7c, 0x00, 0x42, 0xa1, 0x93, 0x1c, 0xc5, 0x4a, 0xa8, 0x44,
  0x4a, 0xd8, 0x50, 0xc8, 0xc7, 0x8a, 0x42, 0x3e, 0x26, 0x04, 0xf1, 0xb1,
  0xb0, 0x09, 0xe8, 0x63, 0xc6, 0x21, 0x1f, 0x33, 0x12, 0xf9, 0x98, 0x10,
  0xc4, 0xc7, 0x02, 0x42, 0x3e, 0x96, 0x34, 0xf2, 0xb1, 0xa5, 0x91, 0x8f,
  0x09, 0x41, 0x7c, 0x2c, 0x40, 0xe4, 0x63, 0x6a, 0x53, 0xc4, 0xc7, 0x02,
  0x21, 0x3e, 0x96, 0x71, 0xf0, 0x31, 0x8c, 0x83, 0x8f, 0x5d, 0x1c, 0x7c,
  0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0x80, 0x0f, 0x64, 0x68, 0x76, 0x06,
  0x21, 0x00, 0x8b, 0x9f, 0xf0, 0x89, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30,
  0xe0, 0x83, 0x19, 0xa2, 0x1d, 0x62, 0x10, 0x7c, 0xa2, 0x27, 0x78, 0xc2,
  0x04, 0x4b, 0x3e, 0x26, 0x60, 0xf2, 0x31, 0x21, 0x88, 0x8f, 0x05, 0x93,
  0x7c, 0xac, 0xe0, 0xe4, 0x63, 0x07, 0x27, 0x1f, 0x13, 0x82, 0xf8, 0x58,
  0x70, 0xc9, 0xc7, 0xf2, 0xa6, 0x88, 0x8f, 0x05, 0x42, 0x7c, 0x0c, 0xba,
  0x17, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x28, 0xf4, 0x90,
  0xf8, 0x5c, 0xf1, 0x12, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x28,
  0xf8, 0xd0, 0xf8, 0x50, 0xeb, 0x12, 0xd8, 0x94, 0x2f, 0xf2, 0x19, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x03, 0x50, 0x00, 0xa3, 0xf2, 0xd1, 0xe6, 0x25,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x50, 0x08, 0x23, 0xf3, 0xb9,
  0xda, 0x25, 0x30, 0x02, 0x5c, 0xe2, 0x63, 0xc2, 0xaf, 0xc4, 0xc7, 0x92,
  0x7f, 0x91, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x80, 0x42, 0x19,
  0xa9, 0x0f, 0x94, 0x2f, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x80,
  0x82, 0x19, 0xad, 0x4f, 0x33, 0x2f, 0x81, 0x31, 0x21, 0x23, 0x9f, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0x00, 0x05, 0x34, 0x6a, 0x9f, 0x69, 0x5f,
  0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x00, 0x85, 0x34, 0x72, 0x1f,
  0xa8, 0x5e, 0x02, 0x23, 0xd0, 0x25, 0x3e, 0x26, 0x9c, 0x4b, 0x7c, 0x46,
  0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x00, 0x1c, 0x76, 0xc8, 0x7d, 0x46, 0x67,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xc4, 0x61, 0x87, 0xde, 0xe7, 0x74,
  0x46, 0x0c, 0x2a, 0x00, 0x04, 0xc1, 0x40, 0x15, 0xd0, 0xc8, 0x7c, 0x84,
  0x80, 0x5d, 0xd4, 0x45, 0x75, 0x54, 0xa7, 0x86, 0x6a, 0x88, 0x7e, 0x98,
  0x45, 0x75, 0x88, 0x41, 0x75, 0x54, 0x67, 0x34, 0x21, 0x00, 0x46, 0x13,
  0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x00,
  0x1c, 0xc2, 0x88, 0x7e, 0x54, 0x67, 0xc4, 0xa0, 0x02, 0x40, 0x10, 0x0c,
  0x54, 0xa1, 0x8d, 0xd6, 0x27, 0x30, 0xe2, 0xe5, 0x5d, 0x5e, 0xe7, 0x75,
  0x74, 0x48, 0x87, 0xf2, 0x27, 0x82, 0x5e, 0x27, 0x41, 0x5e, 0xe7, 0x75,
  0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0xc1, 0x06,
  0xda, 0x91, 0x8f, 0x0d, 0xb5, 0x23, 0x1f, 0x1b, 0x6c, 0x47, 0x3e, 0x36,
  0xe8, 0x0e, 0x7c, 0x6c, 0xd8, 0x1d, 0xf8, 0xd8, 0xc0, 0x3b, 0xf0, 0x19,
  0x31, 0x58, 0x00, 0x10, 0x04, 0x03, 0x3e, 0xf8, 0x23, 0x10, 0x1a, 0x84,
  0x60, 0x10, 0x82, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0xf0, 0x83, 0x3f,
  0xf2, 0x9f, 0xc0, 0x8a, 0x40, 0x3e, 0x56, 0x08, 0xf2, 0xb1, 0x62, 0x90,
  0x8f, 0x9d, 0xc9, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x00,
  0x85, 0x51, 0x42, 0xa1, 0x61, 0x3f, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0x00, 0x05, 0x52, 0x4a, 0xa1, 0xa1, 0x56, 0x02, 0x4b, 0x13, 0x43,
  0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x00, 0x0a, 0xa6, 0xb4, 0x42,
  0x46, 0x7f, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x00, 0x0a, 0xa7,
  0xc4, 0x42, 0xc6, 0xad, 0x04, 0xb6, 0x26, 0x89, 0x7c, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0x00, 0x14, 0x52, 0xc9, 0x85, 0x92, 0xff, 0x08, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00, 0x14, 0x54, 0xe9, 0x85, 0x92, 0x5c,
  0x09, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0x80, 0x0f, 0x5a, 0xc9, 0x85,
  0x0e, 0x22, 0x38, 0x88, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xfc,
  0xa0, 0x95, 0x58, 0x28, 0xb0, 0x20, 0x91, 0x8f, 0x09, 0x87, 0x7c, 0x6c,
  0x28, 0xe4, 0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x71, 0x60, 0x4b,
  0x31, 0xa4, 0x3b, 0x72, 0x34, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30,
  0x9a, 0x30, 0x08, 0x36, 0x94, 0x81, 0x7c, 0x6c, 0x28, 0x03, 0xf9, 0xd8,
  0x50, 0x06, 0xf2, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x5d, 0x48,
  0xa5, 0x1c, 0x6a, 0x9f, 0x11, 0x83, 0x06, 0x00, 0x41, 0x30, 0x60, 0x85,
  0x58, 0x9a, 0xa1, 0xe0, 0x8f, 0x68, 0x63, 0x36, 0x7c, 0xc8, 0x87, 0x7c,
  0xc8, 0x87, 0x46, 0x13, 0x02, 0xc0, 0x8c, 0x40, 0x3e, 0x66, 0x08, 0xf2,
  0x31, 0x63, 0x90, 0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0xd0, 0x81,
  0x38, 0xf9, 0xd0, 0xf9, 0xec, 0xd1, 0x68, 0x42, 0x10, 0x0c, 0x37, 0x04,
  0xa6, 0x04, 0x06, 0xb3, 0x0c, 0x84, 0x10, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x41, 0x1c, 0x98, 0x53, 0x18, 0xa9, 0xcf, 0x29, 0x8d, 0x26, 0x04,
  0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x4e, 0x0d, 0xed, 0xb3,
  0x4a, 0xab, 0x34, 0x6c, 0x40, 0x04, 0xb0, 0x44, 0x00, 0x3b, 0x35, 0xb8,
  0x0f, 0x2b, 0xc1, 0xd2, 0xb0, 0x01, 0x11, 0xbc, 0xd0, 0x00, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0x01, 0x39, 0xcc, 0x12, 0x1a, 0xdd, 0xcf, 0x88,
  0x01, 0x55, 0x80, 0x20, 0x18, 0xb8, 0xc2, 0x2f, 0xed, 0x50, 0xc0, 0x4a,
  0x3a, 0xe4, 0x4a, 0xb2, 0xe4, 0x4a, 0xfa, 0x91, 0x1f, 0xf8, 0xf1, 0x42,
  0x46, 0x41, 0xc0, 0x10, 0xfc, 0x90, 0x30, 0x18, 0xc3, 0x11, 0x41, 0x0c,
  0x11, 0xdf, 0x2c, 0xc3, 0x50, 0x04, 0xb3, 0x04, 0xc5, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0xc4, 0xc1, 0x3b, 0xa9, 0xd1, 0xfc, 0xb8, 0xd2, 0x68,
  0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10,
  0xc3, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0xc4, 0x01, 0x3d, 0xbd, 0x11,
  0xfe, 0xdc, 0xd2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2,
  0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0xc4,
  0x41, 0x3e, 0xd1, 0x51, 0xff, 0xec, 0xd2, 0x68, 0x42, 0x00, 0x8c, 0x26,
  0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0x39, 0x2b, 0x22,
  0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x00, 0x85, 0x7c, 0xf2, 0x23,
  0x67, 0x45, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x00, 0x05, 0x7d,
  0xfa, 0x23, 0x67, 0x45, 0x02, 0x0b, 0x1c, 0xe8, 0x58, 0xf3, 0x22, 0xf2,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x50, 0xe8, 0x27, 0x51, 0x6a,
  0x5e, 0x24, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x50, 0xf0, 0xa7,
  0x51, 0x6a, 0x5e, 0x24, 0xb0, 0xa0, 0x81, 0x8e, 0x31, 0x33, 0x22, 0x9f,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x00, 0x85, 0x90, 0x32, 0x25, 0x66,
  0x46, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x00, 0x05, 0x91, 0x3a,
  0x25, 0x66, 0x46, 0x02, 0x0b, 0x18, 0xe8, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x41, 0x1c, 0xa8, 0x54, 0x29, 0xb9, 0x90, 0x3b, 0x8d, 0x26, 0x04,
  0x80, 0x05, 0x6d, 0x24, 0x1f, 0x13, 0xda, 0x48, 0x3e, 0x36, 0xb4, 0x91,
  0x7c, 0x8c, 0x68, 0x23, 0xf9, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x81,
  0x2e, 0xf0, 0x13, 0x2b, 0xfd, 0xd0, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0xf0, 0x02, 0x3f, 0xb5, 0x92, 0x19, 0x8d, 0x18, 0x3c, 0x00, 0x08, 0x82,
  0x81, 0x1e, 0xbc, 0xd4, 0x2a, 0x09, 0x41, 0xd4, 0xa0, 0x11, 0x1a, 0xcd,
  0xd3, 0x3c, 0xc9, 0x52, 0x32, 0x9a, 0x10, 0x00, 0x16, 0xac, 0x91, 0x7c,
  0x8c, 0x42, 0xe2, 0x63, 0x4a, 0x04, 0x9f, 0x11, 0x83, 0x07, 0x00, 0x41,
  0x30, 0xd0, 0x03, 0x9a, 0x82, 0xa5, 0xc3, 0x10, 0x82, 0x36, 0x6a, 0x23,
  0x7c, 0xc2, 0xa7, 0x5b, 0x72, 0x46, 0x13, 0x02, 0xc0, 0x82, 0x02, 0x3e,
  0x96, 0x39, 0xf1, 0x31, 0xcb, 0x89, 0xcf, 0x88, 0xc1, 0x03, 0x80, 0x20,
  0x18, 0xe8, 0x41, 0x4e, 0xd5, 0x12, 0xb3, 0x08, 0x81, 0x1c, 0xc9, 0x51,
  0x3f, 0xf5, 0x13, 0x2f, 0x4d, 0xa3, 0x09, 0x01, 0x60, 0x45, 0x00, 0x1f,
  0x93, 0x3c, 0xf8, 0xd8, 0x46, 0xc5, 0x67, 0xc4, 0xe0, 0x01, 0x40, 0x10,
  0x0c, 0xf4, 0xc0, 0xa7, 0x74, 0x29, 0x82, 0x84, 0xe0, 0x8e, 0xee, 0x48,
  0xa4, 0x44, 0x2a, 0x9c, 0xb0, 0xd1, 0x84, 0x00, 0xb0, 0x22, 0x80, 0x8f,
  0x61, 0x63, 0x00, 0x1f, 0xc3, 0xc0, 0x00, 0x3e, 0x23, 0x06, 0x0f, 0x00,
  0x82, 0x60, 0xa0, 0x07, 0x63, 0xf5, 0x4b, 0x56, 0x25, 0x04, 0x7c, 0xc4,
  0x47, 0x27, 0x75, 0x52, 0xe6, 0xd4, 0x8d, 0x26, 0x04, 0x80, 0x15, 0x01,
  0x7c, 0x0c, 0x0d, 0xb4, 0xf8, 0x18, 0x57, 0x06, 0xf0, 0x19, 0x31, 0x78,
  0x00, 0x10, 0x04, 0x03, 0x3d, 0x40, 0x2b, 0x72, 0xda, 0x34, 0x21, 0x08,
  0xa5, 0x50, 0x62, 0x29, 0x96, 0x5a, 0x27, 0x31, 0x18, 0x4d, 0x08, 0x00,
  0x2b, 0x02, 0xf8, 0x58, 0x1b, 0x80, 0x41, 0x7c, 0x4c, 0x0d, 0xc0, 0x20,
  0x3e, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0xa0, 0x07, 0x6d, 0x95, 0x4e,
  0x60, 0xf0, 0x09, 0x81, 0x29, 0x99, 0x52, 0x4c, 0xc5, 0x14, 0x3c, 0x9d,
  0xc1, 0x68, 0x42, 0x00, 0x58, 0x11, 0xc0, 0xc7, 0xc8, 0x40, 0x0e, 0xe0,
  0x63, 0x6f, 0x60, 0x06, 0xf1, 0x19, 0x31, 0x78, 0x00, 0x10, 0x04, 0x03,
  0x3d, 0x90, 0x2b, 0x77, 0x2a, 0x03, 0x32, 0x10, 0x82, 0x55, 0x5a, 0x25,
  0x9b, 0xb2, 0xa9, 0x7a, 0x62, 0x83, 0xd1, 0x84, 0x00, 0xb0, 0x22, 0x80,
  0x8f, 0xa9, 0xc1, 0x1d, 0xc0, 0xc7, 0xd4, 0x80, 0x0e, 0xe0, 0x33, 0x62,
  0xf0, 0x00, 0x20, 0x08, 0x06, 0x7a, 0x70, 0x57, 0xf3, 0xa4, 0x06, 0x69,
  0x20, 0x04, 0xb0, 0x04, 0x4b, 0x3b, 0xb5, 0x53, 0xfa, 0x14, 0x07, 0xa3,
  0x09, 0x01, 0x60, 0x45, 0x00, 0x1f, 0x0b, 0x7e, 0x49, 0x3e, 0x16, 0x04,
  0xf2, 0x99, 0x25, 0x28, 0x06, 0x3a, 0x06, 0xbc, 0x0c, 0x06, 0xb8, 0x0c,
  0x04, 0x81, 0x30, 0x5c, 0xa2, 0x95, 0xf8, 0x58, 0x2e, 0xd1, 0x4a, 0x7c,
  0x4c, 0x97, 0x68, 0x25, 0x3e, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0xc0,
  0x07, 0x7f, 0x05, 0x52, 0x83, 0x10, 0x0c, 0x42, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x7e, 0xf0, 0x57, 0xfe, 0x14, 0x58, 0x50, 0xc8, 0xc7,
  0x84, 0x42, 0x3e, 0x36, 0x14, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x83, 0x38, 0x40, 0xad, 0x91, 0x62, 0xa5, 0xb6, 0x1a, 0x4d, 0x08, 0x80,
  0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0x88, 0x03, 0xd6, 0x3a, 0x29, 0x58, 0x6a, 0xab, 0xd1, 0x84, 0x00,
  0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x61, 0x89, 0x8f, 0x0d,
  0x4b, 0x7c, 0x6c, 0x58, 0xe2, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06,
  0x7c, 0xf0, 0x5a, 0x30, 0x35, 0x08, 0xc1, 0x20, 0x04, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0xe0, 0x07, 0xaf, 0xe5, 0x52, 0x81, 0x15, 0x81, 0x7c,
  0xac, 0x10, 0xe4, 0x63, 0xc5, 0x20, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41,
  0x30, 0xe0, 0x03, 0xda, 0xaa, 0xa9, 0x45, 0x49, 0x06, 0x21, 0x18, 0x31,
  0x30, 0x00, 0x10, 0x04, 0x03, 0x3f, 0xa0, 0x2d, 0xb9, 0x0a, 0x6c, 0x9e,
  0x82, 0xf8, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0x1f, 0xd8, 0xd6,
  0x49, 0x05, 0x16, 0xe0, 0x93, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0xc0, 0x0f, 0x70, 0x0b, 0xa5, 0x02, 0x0b, 0xd2, 0x42, 0x3e, 0x26, 0xa4,
  0x85, 0x7c, 0x6c, 0x48, 0x0b, 0xf9, 0x18, 0x5b, 0x0c, 0xf1, 0x31, 0xb6,
  0x18, 0xe2, 0x63, 0x6c, 0x31, 0xc4, 0x67, 0xc4, 0x60, 0x01, 0x40, 0x10,
  0x0c, 0xf8, 0x00, 0xbc, 0xc2, 0x2a, 0x26, 0x60, 0xe2, 0x25, 0x2e, 0xab,
  0x1a, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x3f, 0x00, 0x2f, 0xbf, 0x0a,
  0xac, 0x3b, 0x03, 0xf9, 0x58, 0x20, 0xc8, 0xc7, 0x82, 0x43, 0x3e, 0xf6,
  0xa9, 0x81, 0x7c, 0x2c, 0x28, 0xe4, 0x63, 0x41, 0x22, 0x1f, 0x0b, 0x83,
  0x36, 0x90, 0x8f, 0x05, 0x88, 0x7c, 0x2c, 0x58, 0xe4, 0x63, 0xc7, 0x4b,
  0xc0, 0xc7, 0x8a, 0x97, 0x80, 0x8f, 0x0d, 0x2f, 0x01, 0x9f, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0xa0, 0x83, 0xf8, 0x6a, 0x2b, 0x7b, 0x52, 0xad,
  0xd1, 0x84, 0x00, 0x18, 0x6e, 0x08, 0x6a, 0x0b, 0x0c, 0x66, 0x19, 0x0e,
  0x23, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x70, 0xf0, 0xad, 0xb8,
  0x42, 0xa9, 0x11, 0x83, 0x06, 0x00, 0x41, 0x30, 0x60, 0x85, 0xf4, 0x5a,
  0xab, 0xe0, 0xb6, 0xd8, 0x65, 0x5d, 0xec, 0xca, 0xae, 0xec, 0xca, 0xae,
  0x46, 0x13, 0x82, 0x61, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xcc, 0xc1,
  0xb7, 0xe8, 0x4a, 0xa4, 0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x80, 0x15,
  0xd8, 0xcb, 0xad, 0x82, 0xbc, 0x7a, 0x17, 0x77, 0xc9, 0xab, 0xbc, 0xca,
  0xab, 0xbc, 0x1a, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18,
  0x04, 0x33, 0x1c, 0xf9, 0xd8, 0xe1, 0xc8, 0xc7, 0x10, 0x47, 0x3e, 0x66,
  0x0c, 0xf0, 0x31, 0x63, 0x80, 0x8f, 0x19, 0x03, 0x7c, 0x66, 0x09, 0x8e,
  0x81, 0x8a, 0xc1, 0x30, 0xd0, 0xa0, 0x18, 0xa8, 0x18, 0x0c, 0x03, 0x0d,
  0x8a, 0x81, 0x8a, 0xc1, 0x30, 0xd0, 0xa0, 0x18, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x03, 0x73, 0x60, 0x2f, 0xd1, 0x82, 0xa9, 0x11, 0x03, 0x07, 0x00,
  0x41, 0x30, 0x80, 0x05, 0xfc, 0x8a, 0xab, 0xa0, 0x5f, 0xf8, 0xe5, 0xb4,
  0x88, 0x41, 0x00, 0x2b, 0xb8, 0x9a, 0x25, 0x40, 0x30, 0x1c, 0x08, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x06, 0x45, 0x00, 0xd3, 0x14, 0xd9, 0xd3, 0xf1,
  0x00, 0xd8, 0xe2, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x5b, 0x86, 0x2a, 0xa8, 0x89, 0x2d, 0xc5, 0x15,
  0xe0, 0x04, 0x91, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
